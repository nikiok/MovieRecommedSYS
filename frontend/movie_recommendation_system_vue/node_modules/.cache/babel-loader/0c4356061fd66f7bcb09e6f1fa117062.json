{"ast":null,"code":"import '../../utils/index.mjs';\nimport { on, once } from '../../utils/dom/event.mjs';\nvar RepeatClick = {\n  beforeMount(el, binding) {\n    let interval = null;\n    let startTime;\n    const handler = () => binding.value && binding.value();\n    const clear = () => {\n      if (Date.now() - startTime < 100) {\n        handler();\n      }\n      clearInterval(interval);\n      interval = null;\n    };\n    on(el, \"mousedown\", e => {\n      if (e.button !== 0) return;\n      startTime = Date.now();\n      once(document, \"mouseup\", clear);\n      clearInterval(interval);\n      interval = setInterval(handler, 100);\n    });\n  }\n};\nexport { RepeatClick as default };","map":{"version":3,"mappings":";;AACA,kBAAe;EACbA,WAAWA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACvB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,SAAS;IACb,MAAMC,OAAO,GAAGA,MAAMH,OAAO,CAACI,KAAK,IAAIJ,OAAO,CAACI,KAAK,EAAE;IACtD,MAAMC,KAAK,GAAGA,MAAM;MAClB,IAAIC,IAAI,CAACC,GAAG,EAAE,GAAGL,SAAS,GAAG,GAAG,EAAE;QAChCC,OAAO,EAAE;MACjB;MACMK,aAAa,CAACP,QAAQ,CAAC;MACvBA,QAAQ,GAAG,IAAI;IACrB,CAAK;IACDQ,EAAE,CAACV,EAAE,EAAE,WAAW,EAAGW,CAAC,IAAK;MACzB,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAChB;MACFT,SAAS,GAAGI,IAAI,CAACC,GAAG,EAAE;MACtBK,IAAI,CAACC,QAAQ,EAAE,SAAS,EAAER,KAAK,CAAC;MAChCG,aAAa,CAACP,QAAQ,CAAC;MACvBA,QAAQ,GAAGa,WAAW,CAACX,OAAO,EAAE,GAAG,CAAC;IAC1C,CAAK,CAAC;EACN;AACA,CAAC","names":["beforeMount","el","binding","interval","startTime","handler","value","clear","Date","now","clearInterval","on","e","button","once","document","setInterval"],"sources":["../../../../../packages/directives/repeat-click/index.ts"],"sourcesContent":["import { on, once } from '@element-plus/utils'\n\nimport type { ObjectDirective, DirectiveBinding } from 'vue'\n\nexport default {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    let interval = null\n    let startTime: number\n    const handler = () => binding.value && binding.value()\n    const clear = () => {\n      if (Date.now() - startTime < 100) {\n        handler()\n      }\n      clearInterval(interval)\n      interval = null\n    }\n\n    on(el, 'mousedown', (e: MouseEvent) => {\n      if ((e as any).button !== 0) return\n      startTime = Date.now()\n      once(document as any, 'mouseup', clear)\n      clearInterval(interval)\n      interval = setInterval(handler, 100)\n    })\n  },\n} as ObjectDirective\n"]},"metadata":{},"sourceType":"module"}