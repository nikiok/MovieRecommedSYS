{"ast":null,"code":"import { defineComponent, nextTick, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, createElementVNode, withDirectives, vModelRadio, renderSlot, createTextVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { radioProps, radioEmits, useRadio } from './radio.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElRadio\",\n  props: radioProps,\n  emits: radioEmits,\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"radio\");\n    const {\n      radioRef,\n      isGroup,\n      focus,\n      size,\n      disabled,\n      tabIndex,\n      modelValue\n    } = useRadio(props, emit);\n    function handleChange() {\n      nextTick(() => emit(\"change\", modelValue.value));\n    }\n    return {\n      ns,\n      focus,\n      isGroup,\n      modelValue,\n      tabIndex,\n      size,\n      disabled,\n      radioRef,\n      handleChange\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\", \"tabindex\"];\nconst _hoisted_2 = [\"value\", \"name\", \"disabled\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled), _ctx.ns.is(\"focus\", _ctx.focus), _ctx.ns.is(\"bordered\", _ctx.border), _ctx.ns.is(\"checked\", _ctx.modelValue === _ctx.label), _ctx.ns.m(_ctx.size)]),\n    role: \"radio\",\n    \"aria-checked\": _ctx.modelValue === _ctx.label,\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.tabIndex,\n    onKeydown: _cache[5] || (_cache[5] = withKeys(withModifiers($event => _ctx.modelValue = _ctx.disabled ? _ctx.modelValue : _ctx.label, [\"stop\", \"prevent\"]), [\"space\"]))\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass([_ctx.ns.e(\"input\"), _ctx.ns.is(\"disabled\", _ctx.disabled), _ctx.ns.is(\"checked\", _ctx.modelValue === _ctx.label)])\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"inner\"))\n  }, null, 2), withDirectives(createElementVNode(\"input\", {\n    ref: \"radioRef\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.modelValue = $event),\n    class: normalizeClass(_ctx.ns.e(\"original\")),\n    value: _ctx.label,\n    type: \"radio\",\n    \"aria-hidden\": \"true\",\n    name: _ctx.name,\n    disabled: _ctx.disabled,\n    tabindex: \"-1\",\n    onFocus: _cache[1] || (_cache[1] = $event => _ctx.focus = true),\n    onBlur: _cache[2] || (_cache[2] = $event => _ctx.focus = false),\n    onChange: _cache[3] || (_cache[3] = (...args) => _ctx.handleChange && _ctx.handleChange(...args))\n  }, null, 42, _hoisted_2), [[vModelRadio, _ctx.modelValue]])], 2), createElementVNode(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"label\")),\n    onKeydown: _cache[4] || (_cache[4] = withModifiers(() => {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 34)], 42, _hoisted_1);\n}\nvar Radio = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Radio as default };","map":{"version":3,"mappings":";;;;;AAoDA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;EACPC,KAAO;EAEPC,MAAMF,KAAO;IAAEG;EAAQ;IACrB,MAAMC,KAAKC,YAAa;IAClB;MAAEC;MAAUC,OAAS;MAAAC;MAAOC;MAAMC,QAAU;MAAAC;MAAUC;IAC1D,aAASZ,KAAO;IAEM;MACba,eAAMV,IAAK,WAAUS,UAAW;IAAA;IAGpC;MACLR;MACAI;MACAD;MACAK;MACAD;MACAF;MACAC;MACAJ;MAEAQ;IAAA;EAAA;AAAA;;;;sBA3EJC,kBA2CQ;IA1CLC,KAAK,kBAAUC,IAAG,SAAWA,QAAGC,GAAE,UAAa,kBAAiBD,QAAGC,GAAE,OAAU,eAAcD,QAAGC,GAAE,UAAa,gBAAeD,QAAGC,EAAE,YAAYD,IAAe,6BAAcA,QAAGE,CAAE;IAQlLC,IAAK;IACJ,gBAAcH,IAAe;IAC7B,eAAe;IACfI,QAAU;IACVC,SAAO,6DAAqBL,IAAa,8BAAWA,kBAAaA,IAAK;EAAA,IAEvEM,kBAsBO;IArBJP,KAAK,kBAAYC,QAAGO,CAAC,WAAmBP,QAAGC,GAAE,UAAa,kBAAmBD,QAAGC,EAAE,YAAYD,IAAe;EAAA,IAM9GM,kBAA+B;IAAxBP,OAAKS,cAAE,SAAGD,CAAC;EAAA,4BAClBD,kBAaE;IAZAG,GAAI;IAAA,2DACKT,IAAU;IAClBD,OAAKS,cAAE,SAAGD,CAAC;IACXG,KAAO;IACRC,IAAK;IACL,aAAY;IACX7B,IAAM;IACNW,QAAU;IACXW,QAAS;IACRQ,SAAKC,oCAAEb,IAAK;IACZc,QAAID,oCAAEb,IAAK;IACXe,UAAMF,MAAE;EAAA,2BAVA,uCAabP,kBAIO;IAJAP,OAAKS,cAAE,SAAGD,CAAC;IAAYF,WAAOQ,MAAR,0CAAa;EAAA,IACxCG,WAEOhB,4BAFP,MAEO,iCADFA,IAAK","names":["_sfc_main","defineComponent","name","props","emits","setup","emit","ns","useNamespace","radioRef","isGroup","focus","size","disabled","tabIndex","modelValue","nextTick","handleChange","_createElementBlock","class","_ctx","is","m","role","tabindex","onKeydown","_createElementVNode","e","_normalizeClass","ref","value","type","onFocus","_cache","onBlur","onChange","_renderSlot"],"sources":["../../../../../../packages/components/radio/src/radio.vue"],"sourcesContent":["<template>\n  <label\n    :class=\"[\n      ns.b(),\n      ns.is('disabled', disabled),\n      ns.is('focus', focus),\n      ns.is('bordered', border),\n      ns.is('checked', modelValue === label),\n      ns.m(size),\n    ]\"\n    role=\"radio\"\n    :aria-checked=\"modelValue === label\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"tabIndex\"\n    @keydown.space.stop.prevent=\"modelValue = disabled ? modelValue : label\"\n  >\n    <span\n      :class=\"[\n        ns.e('input'),\n        ns.is('disabled', disabled),\n        ns.is('checked', modelValue === label),\n      ]\"\n    >\n      <span :class=\"ns.e('inner')\" />\n      <input\n        ref=\"radioRef\"\n        v-model=\"modelValue\"\n        :class=\"ns.e('original')\"\n        :value=\"label\"\n        type=\"radio\"\n        aria-hidden=\"true\"\n        :name=\"name\"\n        :disabled=\"disabled\"\n        tabindex=\"-1\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n        @change=\"handleChange\"\n      />\n    </span>\n    <span :class=\"ns.e('label')\" @keydown.stop>\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useRadio, radioEmits, radioProps } from './radio'\n\nexport default defineComponent({\n  name: 'ElRadio',\n  props: radioProps,\n  emits: radioEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('radio')\n    const { radioRef, isGroup, focus, size, disabled, tabIndex, modelValue } =\n      useRadio(props, emit)\n\n    function handleChange() {\n      nextTick(() => emit('change', modelValue.value))\n    }\n\n    return {\n      ns,\n      focus,\n      isGroup,\n      modelValue,\n      tabIndex,\n      size,\n      disabled,\n      radioRef,\n\n      handleChange,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}