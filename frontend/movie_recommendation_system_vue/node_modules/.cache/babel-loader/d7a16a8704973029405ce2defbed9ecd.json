{"ast":null,"code":"import MovieInfo from \"@/components/movie/MovieInfo\";\nimport MovieComments from \"@/components/movie/MovieComments\";\nimport { onMounted, onUnmounted, reactive, ref, watch } from \"vue\";\nimport { ErrorMessage, SuccessMessage, WarningMessage } from \"@/utils/my-message\";\nimport { Edit, Search } from \"@element-plus/icons\";\nimport commentRequest from \"@/api/comment\";\nimport CommentStrip from \"@/components/basic/CommentStrip\";\nimport EmojiPicker from 'vue3-emoji-picker';\nimport '@/../node_modules/vue3-emoji-picker/dist/style.css';\nimport SvgIcon from \"@/components/basic/SvgIcon\";\nimport CommentsWordCloud from \"@/components/charts/CommentsWordCloud\";\nexport default {\n  name: 'MovieComments',\n  components: {\n    CommentsWordCloud,\n    SvgIcon,\n    CommentStrip,\n    Edit,\n    Search,\n    MovieInfo,\n    MovieComments,\n    EmojiPicker\n  },\n  props: {\n    mid: {\n      default: ''\n    }\n  },\n  setup(props) {\n    let movieId = ref(props.mid);\n    // 是否有自己的评论（如果有则显示删除按钮，否则不显示）\n    let isHaveOwnComment = ref(false);\n    let comments = ref([]);\n    let ownComment = reactive({\n      mid: movieId.value,\n      id: '',\n      score: 0,\n      comment: '',\n      time: '',\n      agree: 0,\n      nickname: '',\n      avatar: ''\n    });\n    let ownCommentEditInfo = reactive({\n      score: 0,\n      comment: ''\n    });\n    let isEditDialogVisible = ref(false);\n    watch(isEditDialogVisible, (newValue, oldValue) => {\n      // 当编辑框关闭的时候，表情选择框也不显示\n      if (!newValue) {\n        isShowEmoji.value = false;\n      }\n    });\n    const handleEditDialogVisible = () => {\n      isEditDialogVisible.value = !isEditDialogVisible.value;\n    };\n    const onSelectEmoji = emoji => {\n      ownCommentEditInfo.comment += emoji.i;\n    };\n    let isShowEmoji = ref(false);\n    const handleSubmitComment = () => {\n      if (ownCommentEditInfo.score === 0) {\n        WarningMessage('不可以给电影打0分 (┬┬﹏┬┬)');\n      } else {\n        // 向服务器发送提交请求\n        ownComment.score = ownCommentEditInfo.score * 2;\n        ownComment.comment = ownCommentEditInfo.comment;\n        commentRequest.addComment(ownComment).then(res => {\n          if (res.code === 200) {\n            SuccessMessage(res.msg);\n\n            // 如果用户评价成功，且之前没有评价过，那么此时发送请求获取当前评价信息，来更新界面\n            if (ownComment.nickname === '') {\n              handleGetOwnComment();\n            }\n          } else {\n            ErrorMessage(res.msg);\n          }\n        }).catch(err => {\n          console.error(err);\n        });\n        isEditDialogVisible.value = false;\n      }\n    };\n    const handleRemoveComment = () => {\n      commentRequest.removeOwnComment(ownComment.mid).then(res => {\n        if (res.code === 200) {\n          SuccessMessage(res.msg);\n          // 将其标记为false，表示有自己的评论已被删除，后面不会显示删除按钮\n          isHaveOwnComment.value = false;\n          ownComment.nickname = '';\n          ownComment.comment = '';\n          ownComment.score = 0;\n          ownCommentEditInfo.score = 0;\n          ownCommentEditInfo.comment = '';\n        } else {\n          ErrorMessage(res.msg);\n        }\n        isEditDialogVisible.value = false;\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    let handleGetOwnComment = () => {\n      commentRequest.getOwnComment(ownComment.mid).then(res => {\n        if (res.code === 200) {\n          // 将其标记为true，表示有自己的评论存在，后面会显示删除按钮\n          isHaveOwnComment.value = true;\n          let data = res.data;\n          ownComment.id = data.id;\n          ownComment.agree = data.agree;\n          ownComment.comment = data.comment;\n          ownComment.score = data.score;\n          ownComment.nickname = data.nickname;\n          ownComment.time = data.time;\n          ownComment.avatar = data.avatar;\n          ownCommentEditInfo.score = ownComment.score / 2;\n          ownCommentEditInfo.comment = ownComment.comment;\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    handleGetOwnComment();\n    let isAllComments = ref(false);\n    let currentPage = 0;\n    const pageSize = 10;\n    let isReadyForLoad = ref(true); // 加载锁，首次允许\n    function loadMoreComments() {\n      // 如果加载锁为解锁状态，且未加载所有评论，则继续加载评论\n      if (isReadyForLoad.value && !isAllComments.value) {\n        // 需要加载时锁上，防止重复加载\n        isReadyForLoad.value = false;\n        commentRequest.getMoreCommentsByMovieId(ownComment.mid, currentPage, pageSize).then(res => {\n          if (res.code === 200) {\n            if (res.data.length !== 0) {\n              comments.value = [...comments.value, ...res.data];\n            } else {\n              isAllComments.value = true;\n            }\n            currentPage++;\n          }\n          // 加载完成后，解锁\n          isReadyForLoad.value = true;\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    }\n    // 初始化时加载一次评论\n    loadMoreComments();\n\n    /**\r\n     * 滚动至底部加载更多\r\n     * @param e\r\n     */\n    const handleInfiniteScroll = e => {\n      // 浏览器整个框架的高度 = 滚动条卷去部分 + 可视部分 + 底部隐藏部分的高度。\n      // 浏览器所有内容高度\n      const scrollHeight = document.body.scrollHeight;\n      // 浏览器滚动部分高度; || 两边获取的值是一样的，为了兼容个不同浏览器\n      const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n      // 浏览器可视部分高度\n      const clientHeight = document.documentElement.clientHeight;\n\n      // 计算 底部隐藏部分的高度\n      const distance = scrollHeight - scrollTop - clientHeight;\n      if (distance <= 50) {\n        loadMoreComments();\n      }\n    };\n    let wordCloudData = ref([]);\n    onMounted(() => {\n      window.addEventListener('scroll', handleInfiniteScroll, true);\n      /**\r\n       * 请求获取评论词云图数据\r\n       */\n      commentRequest.getCommentsWordCloudData(props.mid).then(res => {\n        if (res.code === 200) {\n          wordCloudData.value = res.data;\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    });\n    onUnmounted(() => {\n      window.removeEventListener('scroll', handleInfiniteScroll);\n    });\n    return {\n      comments,\n      ownComment,\n      isShowEmoji,\n      isAllComments,\n      isReadyForLoad,\n      isHaveOwnComment,\n      ownCommentEditInfo,\n      isEditDialogVisible,\n      wordCloudData,\n      handleEditDialogVisible,\n      handleSubmitComment,\n      handleRemoveComment,\n      onSelectEmoji\n    };\n  }\n};","map":{"version":3,"mappings":"AAsEA,OAAOA,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,aAAY,MAAO,kCAAkC;AAC5D,SAAQC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AAChE,SAAQC,YAAY,EAAEC,cAAc,EAAEC,cAAc,QAAO,oBAAoB;AAC/E,SAAQC,IAAI,EAAEC,MAAM,QAAO,qBAAqB;AAChD,OAAOC,cAAa,MAAO,eAAe;AAC1C,OAAOC,YAAW,MAAO,iCAAiC;AAE1D,OAAOC,WAAU,MAAO,mBAAkB;AAC1C,OAAO,oDAAmD;AAC1D,OAAOC,OAAM,MAAO,4BAA4B;AAChD,OAAOC,iBAAgB,MAAO,uCAAuC;AAErE,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVF,iBAAiB;IACjBD,OAAO;IACPF,YAAY;IACZH,IAAI;IACJC,MAAM;IACNX,SAAS;IACTC,aAAa;IACba;EACF,CAAC;EACDK,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,IAAII,OAAM,GAAIlB,GAAG,CAACc,KAAK,CAACC,GAAG;IAC3B;IACA,IAAII,gBAAe,GAAInB,GAAG,CAAC,KAAK;IAChC,IAAIoB,QAAO,GAAIpB,GAAG,CAAC,EAAE;IAErB,IAAIqB,UAAS,GAAItB,QAAQ,CAAC;MACxBgB,GAAG,EAAEG,OAAO,CAACI,KAAK;MAClBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;IACD,IAAIC,kBAAiB,GAAI/B,QAAQ,CAAC;MAChCyB,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACX,CAAC;IAED,IAAIM,mBAAkB,GAAI/B,GAAG,CAAC,KAAK;IACnCC,KAAK,CAAC8B,mBAAmB,EAAE,CAACC,QAAQ,EAAEC,QAAQ,KAAK;MACjD;MACA,IAAI,CAACD,QAAQ,EAAE;QACbE,WAAW,CAACZ,KAAI,GAAI,KAAI;MAC1B;IACF,CAAC;IACD,MAAMa,uBAAsB,GAAIA,MAAM;MACpCJ,mBAAmB,CAACT,KAAI,GAAI,CAACS,mBAAmB,CAACT,KAAI;IACvD;IACA,MAAMc,aAAY,GAAKC,KAAK,IAAK;MAC/BP,kBAAkB,CAACL,OAAM,IAAKY,KAAK,CAACC;IACtC;IACA,IAAIJ,WAAU,GAAIlC,GAAG,CAAC,KAAK;IAC3B,MAAMuC,mBAAkB,GAAIA,MAAM;MAChC,IAAIT,kBAAkB,CAACN,KAAI,KAAM,CAAC,EAAE;QAClCpB,cAAc,CAAC,mBAAmB;MACpC,OAAO;QACL;QACAiB,UAAU,CAACG,KAAI,GAAIM,kBAAkB,CAACN,KAAI,GAAI;QAC9CH,UAAU,CAACI,OAAM,GAAIK,kBAAkB,CAACL,OAAM;QAC9ClB,cAAc,CAACiC,UAAU,CAACnB,UAAU,CAAC,CAACoB,IAAI,CAACC,GAAE,IAAK;UAChD,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;YACpBxC,cAAc,CAACuC,GAAG,CAACE,GAAG;;YAEtB;YACA,IAAIvB,UAAU,CAACO,QAAO,KAAM,EAAE,EAAE;cAC9BiB,mBAAmB,CAAC;YACtB;UACF,OAAO;YACL3C,YAAY,CAACwC,GAAG,CAACE,GAAG;UACtB;QACF,CAAC,CAAC,CAACE,KAAK,CAACC,GAAE,IAAK;UACdC,OAAO,CAACC,KAAK,CAACF,GAAG;QACnB,CAAC;QACDhB,mBAAmB,CAACT,KAAI,GAAI,KAAI;MAClC;IACF;IAEA,MAAM4B,mBAAkB,GAAIA,MAAM;MAChC3C,cAAc,CAAC4C,gBAAgB,CAAC9B,UAAU,CAACN,GAAG,CAAC,CAAC0B,IAAI,CAACC,GAAE,IAAK;QAC1D,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;UACpBxC,cAAc,CAACuC,GAAG,CAACE,GAAG,CAAC;UACvB;UACAzB,gBAAgB,CAACG,KAAI,GAAI,KAAK;UAC9BD,UAAU,CAACO,QAAO,GAAI,EAAE;UACxBP,UAAU,CAACI,OAAM,GAAI,EAAE;UACvBJ,UAAU,CAACG,KAAI,GAAI,CAAC;UAEpBM,kBAAkB,CAACN,KAAI,GAAI,CAAC;UAC5BM,kBAAkB,CAACL,OAAM,GAAI,EAAE;QACjC,OAAO;UACLvB,YAAY,CAACwC,GAAG,CAACE,GAAG,CAAC;QACvB;QACAb,mBAAmB,CAACT,KAAI,GAAI,KAAK;MACnC,CAAC,CAAC,CAACwB,KAAK,CAACC,GAAE,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC;IACH;IAEA,IAAIF,mBAAkB,GAAIA,MAAM;MAC9BtC,cAAc,CAAC6C,aAAa,CAAC/B,UAAU,CAACN,GAAG,CAAC,CAAC0B,IAAI,CAACC,GAAE,IAAK;QACvD,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;UACpB;UACAxB,gBAAgB,CAACG,KAAI,GAAI,IAAI;UAC7B,IAAI+B,IAAG,GAAIX,GAAG,CAACW,IAAI;UACnBhC,UAAU,CAACE,EAAC,GAAI8B,IAAI,CAAC9B,EAAE;UACvBF,UAAU,CAACM,KAAI,GAAI0B,IAAI,CAAC1B,KAAK;UAC7BN,UAAU,CAACI,OAAM,GAAI4B,IAAI,CAAC5B,OAAO;UACjCJ,UAAU,CAACG,KAAI,GAAI6B,IAAI,CAAC7B,KAAK;UAC7BH,UAAU,CAACO,QAAO,GAAIyB,IAAI,CAACzB,QAAQ;UACnCP,UAAU,CAACK,IAAG,GAAI2B,IAAI,CAAC3B,IAAI;UAC3BL,UAAU,CAACQ,MAAK,GAAIwB,IAAI,CAACxB,MAAM;UAE/BC,kBAAkB,CAACN,KAAI,GAAIH,UAAU,CAACG,KAAI,GAAI,CAAC;UAC/CM,kBAAkB,CAACL,OAAM,GAAIJ,UAAU,CAACI,OAAO;QACjD;MACF,CAAC,CAAC,CAACqB,KAAK,CAACC,GAAE,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG;MACnB,CAAC;IACH;IACAF,mBAAmB,CAAC;IAEpB,IAAIS,aAAY,GAAItD,GAAG,CAAC,KAAK;IAC7B,IAAIuD,WAAU,GAAI,CAAC;IACnB,MAAMC,QAAO,GAAI,EAAE;IACnB,IAAIC,cAAa,GAAIzD,GAAG,CAAC,IAAI,CAAC,EAAE;IAChC,SAAS0D,gBAAgBA,GAAG;MAC1B;MACA,IAAID,cAAc,CAACnC,KAAI,IAAK,CAACgC,aAAa,CAAChC,KAAK,EAAE;QAChD;QACAmC,cAAc,CAACnC,KAAI,GAAI,KAAK;QAC5Bf,cAAc,CAACoD,wBAAwB,CAACtC,UAAU,CAACN,GAAG,EAAEwC,WAAW,EAAEC,QAAQ,CAAC,CAACf,IAAI,CAACC,GAAE,IAAK;UACzF,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;YACpB,IAAID,GAAG,CAACW,IAAI,CAACO,MAAK,KAAM,CAAC,EAAE;cACzBxC,QAAQ,CAACE,KAAI,GAAI,CAAC,GAAGF,QAAQ,CAACE,KAAK,EAAE,GAAGoB,GAAG,CAACW,IAAI,CAAC;YACnD,OAAO;cACLC,aAAa,CAAChC,KAAI,GAAI,IAAI;YAC5B;YACAiC,WAAW,EAAE;UACf;UACA;UACAE,cAAc,CAACnC,KAAI,GAAI,IAAI;QAC7B,CAAC,CAAC,CAACwB,KAAK,CAACC,GAAE,IAAK;UACdC,OAAO,CAACC,KAAK,CAACF,GAAG;QACnB,CAAC;MACH;IACF;IACA;IACAW,gBAAgB,CAAC;;IAEjB;;;;IAIA,MAAMG,oBAAmB,GAAKC,CAAC,IAAK;MAClC;MACA;MACA,MAAMC,YAAW,GAAIC,QAAQ,CAACC,IAAI,CAACF,YAAY;MAC/C;MACA,MAAMG,SAAQ,GAAIF,QAAQ,CAACC,IAAI,CAACC,SAAQ,IAAKF,QAAQ,CAACG,eAAe,CAACD,SAAS;MAC/E;MACA,MAAME,YAAW,GAAIJ,QAAQ,CAACG,eAAe,CAACC,YAAY;;MAE1D;MACA,MAAMC,QAAO,GAAIN,YAAW,GAAIG,SAAQ,GAAIE,YAAY;MACxD,IAAIC,QAAO,IAAK,EAAE,EAAE;QAClBX,gBAAgB,CAAC;MACnB;IACF;IAEA,IAAIY,aAAY,GAAItE,GAAG,CAAC,EAAE;IAC1BH,SAAS,CAAC,MAAM;MACd0E,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEX,oBAAoB,EAAE,IAAI,CAAC;MAC7D;;;MAGAtD,cAAc,CAACkE,wBAAwB,CAAC3D,KAAK,CAACC,GAAG,CAAC,CAAC0B,IAAI,CAACC,GAAE,IAAK;QAC7D,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;UACpB2B,aAAa,CAAChD,KAAI,GAAIoB,GAAG,CAACW,IAAI;QAChC;MACF,CAAC,CAAC,CAACP,KAAK,CAACC,GAAE,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC;IACH,CAAC;IACDjD,WAAW,CAAC,MAAM;MAChByE,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEb,oBAAoB,CAAC;IAC5D,CAAC;IAED,OAAO;MACLzC,QAAQ;MACRC,UAAU;MACVa,WAAW;MACXoB,aAAa;MACbG,cAAc;MACdtC,gBAAgB;MAChBW,kBAAkB;MAClBC,mBAAmB;MACnBuC,aAAa;MACbnC,uBAAuB;MACvBI,mBAAmB;MACnBW,mBAAmB;MACnBd;IACF;EACF;AACF","names":["MovieInfo","MovieComments","onMounted","onUnmounted","reactive","ref","watch","ErrorMessage","SuccessMessage","WarningMessage","Edit","Search","commentRequest","CommentStrip","EmojiPicker","SvgIcon","CommentsWordCloud","name","components","props","mid","default","setup","movieId","isHaveOwnComment","comments","ownComment","value","id","score","comment","time","agree","nickname","avatar","ownCommentEditInfo","isEditDialogVisible","newValue","oldValue","isShowEmoji","handleEditDialogVisible","onSelectEmoji","emoji","i","handleSubmitComment","addComment","then","res","code","msg","handleGetOwnComment","catch","err","console","error","handleRemoveComment","removeOwnComment","getOwnComment","data","isAllComments","currentPage","pageSize","isReadyForLoad","loadMoreComments","getMoreCommentsByMovieId","length","handleInfiniteScroll","e","scrollHeight","document","body","scrollTop","documentElement","clientHeight","distance","wordCloudData","window","addEventListener","getCommentsWordCloudData","removeEventListener"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\movie\\MovieComments.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button @click=\"handleEditDialogVisible\" type=\"warning\" style=\"margin-left: 2rem\">\r\n      编辑短评\r\n      <template #icon>\r\n        <el-icon><edit/></el-icon>\r\n      </template>\r\n    </el-button>\r\n\r\n    <comments-word-cloud :word-cloud-data=\"wordCloudData\"></comments-word-cloud>\r\n\r\n    <el-dialog v-model=\"isEditDialogVisible\" title=\"编辑短评\" :lock-scroll=\"false\" draggable>\r\n      <div>\r\n        <el-rate\r\n            v-model=\"ownCommentEditInfo.score\"\r\n            :texts=\"['2', '4', '6', '8', '10']\"\r\n            text-color=\"#008000\"\r\n            show-text\r\n        />\r\n        <el-input\r\n            type=\"textarea\"\r\n            rows=\"5\"\r\n            maxlength=\"200\"\r\n            show-word-limit\r\n            v-model=\"ownCommentEditInfo.comment\"\r\n        >\r\n        </el-input>\r\n\r\n        <span @click=\"isShowEmoji = !isShowEmoji\">\r\n        <svg-icon v-if=\"!isShowEmoji\" icon-class=\"smile-beam\"\r\n                  style=\"color: rgb(255, 173, 24); width: 20px; height: 20px; margin-top: 0.5rem;\"></svg-icon>\r\n        <svg-icon v-if=\"isShowEmoji\" icon-class=\"smile-wink\"\r\n                  style=\"color: rgb(255, 173, 24); width: 20px; height: 20px; margin-top: 0.5rem;\"></svg-icon>\r\n      </span>\r\n        <EmojiPicker class=\"dialog-div\"\r\n                     v-show=\"isShowEmoji\"\r\n                     :native=\"true\"\r\n                     :disable-skin-tones=\"true\"\r\n                     @select=\"onSelectEmoji\"\r\n                     :static-texts=\"{ placeholder: '搜索表情'}\"/>\r\n\r\n      </div>\r\n      <template #footer>\r\n        <el-button v-if=\"isHaveOwnComment\" type=\"danger\" @click=\"handleRemoveComment\">删除</el-button>\r\n        <el-button @click=\"handleEditDialogVisible\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmitComment\">提 交</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <div class=\"comment-strip\" v-show=\"ownComment.nickname !== ''\">\r\n      <div class=\"each-comment-tag\">我的短评</div>\r\n      <comment-strip :comment=\"ownComment\" :is-own=\"true\"></comment-strip>\r\n    </div>\r\n\r\n    <div class=\"comment-strip\">\r\n      <div class=\"each-comment-tag\">所有短评</div>\r\n      <template v-for=\"(c, index) in comments\" :key=\"index\">\r\n        <comment-strip :comment=\"c\"></comment-strip>\r\n        <el-divider/>\r\n      </template>\r\n    </div>\r\n\r\n    <div style=\"margin: 1rem 0;\">\r\n      <div v-if=\"!isReadyForLoad\" v-loading=\"!isReadyForLoad\" style=\"width: 100%; height: 2rem\"></div>\r\n      <div v-if=\"isAllComments\" style=\"width: 100%; text-align: center; color: #91949c\">评论到底啦(❁´◡`❁)~</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MovieInfo from \"@/components/movie/MovieInfo\";\r\nimport MovieComments from \"@/components/movie/MovieComments\";\r\nimport {onMounted, onUnmounted, reactive, ref, watch} from \"vue\";\r\nimport {ErrorMessage, SuccessMessage, WarningMessage} from \"@/utils/my-message\";\r\nimport {Edit, Search} from \"@element-plus/icons\";\r\nimport commentRequest from \"@/api/comment\";\r\nimport CommentStrip from \"@/components/basic/CommentStrip\";\r\n\r\nimport EmojiPicker from 'vue3-emoji-picker'\r\nimport '@/../node_modules/vue3-emoji-picker/dist/style.css'\r\nimport SvgIcon from \"@/components/basic/SvgIcon\";\r\nimport CommentsWordCloud from \"@/components/charts/CommentsWordCloud\";\r\n\r\nexport default {\r\n  name: 'MovieComments',\r\n  components: {\r\n    CommentsWordCloud,\r\n    SvgIcon,\r\n    CommentStrip,\r\n    Edit,\r\n    Search,\r\n    MovieInfo,\r\n    MovieComments,\r\n    EmojiPicker,\r\n  },\r\n  props: {\r\n    mid: {\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props) {\r\n    let movieId = ref(props.mid)\r\n    // 是否有自己的评论（如果有则显示删除按钮，否则不显示）\r\n    let isHaveOwnComment = ref(false)\r\n    let comments = ref([])\r\n\r\n    let ownComment = reactive({\r\n      mid: movieId.value,\r\n      id: '',\r\n      score: 0,\r\n      comment: '',\r\n      time: '',\r\n      agree: 0,\r\n      nickname: '',\r\n      avatar: '',\r\n    })\r\n    let ownCommentEditInfo = reactive({\r\n      score: 0,\r\n      comment: '',\r\n    })\r\n\r\n    let isEditDialogVisible = ref(false)\r\n    watch(isEditDialogVisible, (newValue, oldValue) => {\r\n      // 当编辑框关闭的时候，表情选择框也不显示\r\n      if (!newValue) {\r\n        isShowEmoji.value = false\r\n      }\r\n    })\r\n    const handleEditDialogVisible = () => {\r\n      isEditDialogVisible.value = !isEditDialogVisible.value\r\n    }\r\n    const onSelectEmoji = (emoji) => {\r\n      ownCommentEditInfo.comment += emoji.i\r\n    }\r\n    let isShowEmoji = ref(false)\r\n    const handleSubmitComment = () => {\r\n      if (ownCommentEditInfo.score === 0) {\r\n        WarningMessage('不可以给电影打0分 (┬┬﹏┬┬)')\r\n      } else {\r\n        // 向服务器发送提交请求\r\n        ownComment.score = ownCommentEditInfo.score * 2\r\n        ownComment.comment = ownCommentEditInfo.comment\r\n        commentRequest.addComment(ownComment).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n\r\n            // 如果用户评价成功，且之前没有评价过，那么此时发送请求获取当前评价信息，来更新界面\r\n            if (ownComment.nickname === '') {\r\n              handleGetOwnComment()\r\n            }\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n        isEditDialogVisible.value = false\r\n      }\r\n    }\r\n\r\n    const handleRemoveComment = () => {\r\n      commentRequest.removeOwnComment(ownComment.mid).then(res => {\r\n        if (res.code === 200) {\r\n          SuccessMessage(res.msg);\r\n          // 将其标记为false，表示有自己的评论已被删除，后面不会显示删除按钮\r\n          isHaveOwnComment.value = false;\r\n          ownComment.nickname = '';\r\n          ownComment.comment = '';\r\n          ownComment.score = 0;\r\n\r\n          ownCommentEditInfo.score = 0;\r\n          ownCommentEditInfo.comment = '';\r\n        } else {\r\n          ErrorMessage(res.msg);\r\n        }\r\n        isEditDialogVisible.value = false;\r\n      }).catch(err => {\r\n        console.error(err);\r\n      })\r\n    }\r\n\r\n    let handleGetOwnComment = () => {\r\n      commentRequest.getOwnComment(ownComment.mid).then(res => {\r\n        if (res.code === 200) {\r\n          // 将其标记为true，表示有自己的评论存在，后面会显示删除按钮\r\n          isHaveOwnComment.value = true;\r\n          let data = res.data;\r\n          ownComment.id = data.id;\r\n          ownComment.agree = data.agree;\r\n          ownComment.comment = data.comment;\r\n          ownComment.score = data.score;\r\n          ownComment.nickname = data.nickname;\r\n          ownComment.time = data.time;\r\n          ownComment.avatar = data.avatar;\r\n\r\n          ownCommentEditInfo.score = ownComment.score / 2;\r\n          ownCommentEditInfo.comment = ownComment.comment;\r\n        }\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    }\r\n    handleGetOwnComment()\r\n\r\n    let isAllComments = ref(false)\r\n    let currentPage = 0;\r\n    const pageSize = 10;\r\n    let isReadyForLoad = ref(true); // 加载锁，首次允许\r\n    function loadMoreComments() {\r\n      // 如果加载锁为解锁状态，且未加载所有评论，则继续加载评论\r\n      if (isReadyForLoad.value && !isAllComments.value) {\r\n        // 需要加载时锁上，防止重复加载\r\n        isReadyForLoad.value = false;\r\n        commentRequest.getMoreCommentsByMovieId(ownComment.mid, currentPage, pageSize).then(res => {\r\n          if (res.code === 200) {\r\n            if (res.data.length !== 0) {\r\n              comments.value = [...comments.value, ...res.data];\r\n            } else {\r\n              isAllComments.value = true;\r\n            }\r\n            currentPage++;\r\n          }\r\n          // 加载完成后，解锁\r\n          isReadyForLoad.value = true;\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      }\r\n    }\r\n    // 初始化时加载一次评论\r\n    loadMoreComments()\r\n\r\n    /**\r\n     * 滚动至底部加载更多\r\n     * @param e\r\n     */\r\n    const handleInfiniteScroll = (e) => {\r\n      // 浏览器整个框架的高度 = 滚动条卷去部分 + 可视部分 + 底部隐藏部分的高度。\r\n      // 浏览器所有内容高度\r\n      const scrollHeight = document.body.scrollHeight;\r\n      // 浏览器滚动部分高度; || 两边获取的值是一样的，为了兼容个不同浏览器\r\n      const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n      // 浏览器可视部分高度\r\n      const clientHeight = document.documentElement.clientHeight;\r\n\r\n      // 计算 底部隐藏部分的高度\r\n      const distance = scrollHeight - scrollTop - clientHeight;\r\n      if (distance <= 50) {\r\n        loadMoreComments()\r\n      }\r\n    }\r\n\r\n    let wordCloudData = ref([])\r\n    onMounted(() => {\r\n      window.addEventListener('scroll', handleInfiniteScroll, true);\r\n      /**\r\n       * 请求获取评论词云图数据\r\n       */\r\n      commentRequest.getCommentsWordCloudData(props.mid).then(res => {\r\n        if (res.code === 200) {\r\n          wordCloudData.value = res.data;\r\n        }\r\n      }).catch(err => {\r\n        console.error(err);\r\n      })\r\n    })\r\n    onUnmounted(() => {\r\n      window.removeEventListener('scroll', handleInfiniteScroll);\r\n    })\r\n\r\n    return {\r\n      comments,\r\n      ownComment,\r\n      isShowEmoji,\r\n      isAllComments,\r\n      isReadyForLoad,\r\n      isHaveOwnComment,\r\n      ownCommentEditInfo,\r\n      isEditDialogVisible,\r\n      wordCloudData,\r\n      handleEditDialogVisible,\r\n      handleSubmitComment,\r\n      handleRemoveComment,\r\n      onSelectEmoji,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.comment-strip {\r\n  margin-left: 2rem;\r\n  margin-right: 2rem;\r\n}\r\n\r\n.each-comment-tag {\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 2rem;\r\n  color: black;\r\n  width: 100%;\r\n  text-align: center;\r\n  background-color: rgb(84, 92, 100);\r\n  border-radius: 0.6rem;\r\n}\r\n\r\n.dialog-div {\r\n  overflow: hidden;\r\n  z-index: 9999;\r\n  position: fixed;\r\n  text-align: center;\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 1rem;\r\n}\r\n\r\n/deep/ .el-dialog {\r\n  width: 40%;\r\n}\r\n\r\n/* 响应式布局 - 当屏幕小于 1200 像素宽 */\r\n@media screen and (max-width: 1200px) {\r\n  /deep/ .el-dialog {\r\n    width: 70%;\r\n  }\r\n}\r\n\r\n/* 响应式布局 - 当屏幕 小于 800像素 宽 */\r\n@media screen and (max-width: 800px) {\r\n  /deep/ .el-dialog {\r\n    width: 90%;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}