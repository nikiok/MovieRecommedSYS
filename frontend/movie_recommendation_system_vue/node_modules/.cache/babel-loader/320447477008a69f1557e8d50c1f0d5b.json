{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-922fb7b6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" 编辑短评 \");\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"删除\");\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"取 消\");\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"提 交\");\nconst _hoisted_5 = {\n  class: \"comment-strip\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-comment-tag\"\n}, \"我的短评\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"comment-strip\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-comment-tag\"\n}, \"所有短评\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  style: {\n    \"margin\": \"1rem 0\"\n  }\n};\nconst _hoisted_10 = {\n  key: 0,\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"2rem\"\n  }\n};\nconst _hoisted_11 = {\n  key: 1,\n  style: {\n    \"width\": \"100%\",\n    \"text-align\": \"center\",\n    \"color\": \"#91949c\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_edit = _resolveComponent(\"edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_comments_word_cloud = _resolveComponent(\"comments-word-cloud\");\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_svg_icon = _resolveComponent(\"svg-icon\");\n  const _component_EmojiPicker = _resolveComponent(\"EmojiPicker\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_comment_strip = _resolveComponent(\"comment-strip\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_button, {\n    onClick: $setup.handleEditDialogVisible,\n    type: \"warning\",\n    style: {\n      \"margin-left\": \"2rem\"\n    }\n  }, {\n    icon: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_edit)]),\n      _: 1 /* STABLE */\n    })]),\n\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_comments_word_cloud, {\n    \"word-cloud-data\": $setup.wordCloudData\n  }, null, 8 /* PROPS */, [\"word-cloud-data\"]), _createVNode(_component_el_dialog, {\n    modelValue: $setup.isEditDialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.isEditDialogVisible = $event),\n    title: \"编辑短评\",\n    \"lock-scroll\": false,\n    draggable: \"\"\n  }, {\n    footer: _withCtx(() => [$setup.isHaveOwnComment ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      type: \"danger\",\n      onClick: $setup.handleRemoveComment\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n      onClick: $setup.handleEditDialogVisible\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleSubmitComment\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_rate, {\n      modelValue: $setup.ownCommentEditInfo.score,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.ownCommentEditInfo.score = $event),\n      texts: ['2', '4', '6', '8', '10'],\n      \"text-color\": \"#008000\",\n      \"show-text\": \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n      type: \"textarea\",\n      rows: \"5\",\n      maxlength: \"200\",\n      \"show-word-limit\": \"\",\n      modelValue: $setup.ownCommentEditInfo.comment,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.ownCommentEditInfo.comment = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"span\", {\n      onClick: _cache[2] || (_cache[2] = $event => $setup.isShowEmoji = !$setup.isShowEmoji)\n    }, [!$setup.isShowEmoji ? (_openBlock(), _createBlock(_component_svg_icon, {\n      key: 0,\n      \"icon-class\": \"smile-beam\",\n      style: {\n        \"color\": \"rgb(255, 173, 24)\",\n        \"width\": \"20px\",\n        \"height\": \"20px\",\n        \"margin-top\": \"0.5rem\"\n      }\n    })) : _createCommentVNode(\"v-if\", true), $setup.isShowEmoji ? (_openBlock(), _createBlock(_component_svg_icon, {\n      key: 1,\n      \"icon-class\": \"smile-wink\",\n      style: {\n        \"color\": \"rgb(255, 173, 24)\",\n        \"width\": \"20px\",\n        \"height\": \"20px\",\n        \"margin-top\": \"0.5rem\"\n      }\n    })) : _createCommentVNode(\"v-if\", true)]), _withDirectives(_createVNode(_component_EmojiPicker, {\n      class: \"dialog-div\",\n      native: true,\n      \"disable-skin-tones\": true,\n      onSelect: $setup.onSelectEmoji,\n      \"static-texts\": {\n        placeholder: '搜索表情'\n      }\n    }, null, 8 /* PROPS */, [\"onSelect\"]), [[_vShow, $setup.isShowEmoji]])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createVNode(_component_comment_strip, {\n    comment: $setup.ownComment,\n    \"is-own\": true\n  }, null, 8 /* PROPS */, [\"comment\"])], 512 /* NEED_PATCH */), [[_vShow, $setup.ownComment.nickname !== '']]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, (c, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [_createVNode(_component_comment_strip, {\n      comment: c\n    }, null, 8 /* PROPS */, [\"comment\"]), _createVNode(_component_el_divider)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [!$setup.isReadyForLoad ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_10, null, 512 /* NEED_PATCH */)), [[_directive_loading, !$setup.isReadyForLoad]]) : _createCommentVNode(\"v-if\", true), $setup.isAllComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"评论到底啦(❁´◡`❁)~\")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;iDAEyF,QAEnF;iDAuCgF,IAAE;iDACpC,KAAG;iDACQ,KAAG;;EAIzDA,KAAK,EAAC;AAAe;gEACxBC,oBAAwC;EAAnCD,KAAK,EAAC;AAAkB,GAAC,MAAI;;EAI/BA,KAAK,EAAC;AAAe;gEACxBC,oBAAwC;EAAnCD,KAAK,EAAC;AAAkB,GAAC,MAAI;;EAO/BE,KAAuB,EAAvB;IAAA;EAAA;AAAuB;;;EAC8BA,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;EAC9BA,KAAuD,EAAvD;IAAA;IAAA;IAAA;EAAA;;;;;;;;;;;;;;;uBA/D9BC,oBAiEM,cAhEJC,aAKYC;IALAC,OAAK,EAAEC,8BAAuB;IAAEC,IAAI,EAAC,SAAS;IAACN,KAAyB,EAAzB;MAAA;IAAA;;IAE9CO,IAAI,WACb,MAA0B,CAA1BL,aAA0BM;wBAAjB,MAAO,CAAPN,aAAOO;;;;sBAHiE,MAEnF;;kCAKFP,aAA4EQ;IAAtD,iBAAe,EAAEL;EAAa,8CAEpDH,aAoCYS;gBApCQN,0BAAmB;+DAAnBA,0BAAmB;IAAEO,KAAK,EAAC,MAAM;IAAE,aAAW,EAAE,KAAK;IAAEC,SAAS,EAAT;;IA+B9DC,MAAM,WACf,MAA4F,CAA3ET,uBAAgB,kBAAjCU,aAA4FZ;;MAAzDG,IAAI,EAAC,QAAQ;MAAEF,OAAK,EAAEC;;wBAAqB,MAAE;;yEAChFH,aAA2DC;MAA/CC,OAAK,EAAEC;IAAuB;wBAAE,MAAG;;oCAC/CH,aAAsEC;MAA3DG,IAAI,EAAC,SAAS;MAAEF,OAAK,EAAEC;;wBAAqB,MAAG;;;sBAjC5D,MA6BM,CA7BNN,oBA6BM,cA5BJG,aAKEc;kBAJWX,yBAAkB,CAACY,KAAK;iEAAxBZ,yBAAkB,CAACY,KAAK;MAChCC,KAAK,EAAE,0BAA0B;MAClC,YAAU,EAAC,SAAS;MACpB,WAAS,EAAT;6CAEJhB,aAOWiB;MANPb,IAAI,EAAC,UAAU;MACfc,IAAI,EAAC,GAAG;MACRC,SAAS,EAAC,KAAK;MACf,iBAAe,EAAf,EAAe;kBACNhB,yBAAkB,CAACiB,OAAO;iEAA1BjB,yBAAkB,CAACiB,OAAO;6CAIvCvB,oBAKK;MALEK,OAAK,sCAAEC,kBAAW,IAAIA,kBAAW;SACvBA,kBAAW,kBAA5BU,aACsGQ;;MADxE,YAAU,EAAC,YAAY;MAC3CvB,KAAgF,EAAhF;QAAA;QAAA;QAAA;QAAA;MAAA;6CACMK,kBAAW,kBAA3BU,aACsGQ;;MADzE,YAAU,EAAC,YAAY;MAC1CvB,KAAgF,EAAhF;QAAA;QAAA;QAAA;QAAA;MAAA;+DAEVE,aAKqDsB;MALxC1B,KAAK,EAAC,YAAY;MAEjB2B,MAAM,EAAE,IAAI;MACZ,oBAAkB,EAAE,IAAI;MACxBC,QAAM,EAAErB,oBAAa;MACrB,cAAY,EAAE;QAAAsB;MAAA;qDAJPtB,kBAAW;;qDAcpCN,oBAGM,OAHN6B,UAGM,GAFJC,UAAwC,EACxC3B,aAAoE4B;IAApDR,OAAO,EAAEjB,iBAAU;IAAG,QAAM,EAAE;0EAFbA,iBAAU,CAAC0B,QAAQ,YAKtDhC,oBAMM,OANNiC,UAMM,GALJC,UAAwC,qBACxChC,oBAGWiC,6BAHoB7B,eAAQ,GAArB8B,CAAC,EAAEC,KAAK;;WAAqBA;IAAK,IAClDlC,aAA4C4B;MAA5BR,OAAO,EAAEa;IAAC,sCAC1BjC,aAAamC;oCAIjBtC,oBAGM,OAHNuC,UAGM,IAFQjC,qBAAc,kCAA1BJ,oBAAgG,OAAhGsC,WAAgG,uDAAxDlC,qBAAc,yCAC3CA,oBAAa,kBAAxBJ,oBAAqG,OAArGuC,WAAqG,EAAnB,eAAa","names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_button","onClick","$setup","type","icon","_component_el_icon","_component_edit","_component_comments_word_cloud","_component_el_dialog","title","draggable","footer","_createBlock","_component_el_rate","score","texts","_component_el_input","rows","maxlength","comment","_component_svg_icon","_component_EmojiPicker","native","onSelect","placeholder","_hoisted_5","_hoisted_6","_component_comment_strip","nickname","_hoisted_7","_hoisted_8","_Fragment","c","index","_component_el_divider","_hoisted_9","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\movie\\MovieComments.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button @click=\"handleEditDialogVisible\" type=\"warning\" style=\"margin-left: 2rem\">\r\n      编辑短评\r\n      <template #icon>\r\n        <el-icon><edit/></el-icon>\r\n      </template>\r\n    </el-button>\r\n\r\n    <comments-word-cloud :word-cloud-data=\"wordCloudData\"></comments-word-cloud>\r\n\r\n    <el-dialog v-model=\"isEditDialogVisible\" title=\"编辑短评\" :lock-scroll=\"false\" draggable>\r\n      <div>\r\n        <el-rate\r\n            v-model=\"ownCommentEditInfo.score\"\r\n            :texts=\"['2', '4', '6', '8', '10']\"\r\n            text-color=\"#008000\"\r\n            show-text\r\n        />\r\n        <el-input\r\n            type=\"textarea\"\r\n            rows=\"5\"\r\n            maxlength=\"200\"\r\n            show-word-limit\r\n            v-model=\"ownCommentEditInfo.comment\"\r\n        >\r\n        </el-input>\r\n\r\n        <span @click=\"isShowEmoji = !isShowEmoji\">\r\n        <svg-icon v-if=\"!isShowEmoji\" icon-class=\"smile-beam\"\r\n                  style=\"color: rgb(255, 173, 24); width: 20px; height: 20px; margin-top: 0.5rem;\"></svg-icon>\r\n        <svg-icon v-if=\"isShowEmoji\" icon-class=\"smile-wink\"\r\n                  style=\"color: rgb(255, 173, 24); width: 20px; height: 20px; margin-top: 0.5rem;\"></svg-icon>\r\n      </span>\r\n        <EmojiPicker class=\"dialog-div\"\r\n                     v-show=\"isShowEmoji\"\r\n                     :native=\"true\"\r\n                     :disable-skin-tones=\"true\"\r\n                     @select=\"onSelectEmoji\"\r\n                     :static-texts=\"{ placeholder: '搜索表情'}\"/>\r\n\r\n      </div>\r\n      <template #footer>\r\n        <el-button v-if=\"isHaveOwnComment\" type=\"danger\" @click=\"handleRemoveComment\">删除</el-button>\r\n        <el-button @click=\"handleEditDialogVisible\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmitComment\">提 交</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <div class=\"comment-strip\" v-show=\"ownComment.nickname !== ''\">\r\n      <div class=\"each-comment-tag\">我的短评</div>\r\n      <comment-strip :comment=\"ownComment\" :is-own=\"true\"></comment-strip>\r\n    </div>\r\n\r\n    <div class=\"comment-strip\">\r\n      <div class=\"each-comment-tag\">所有短评</div>\r\n      <template v-for=\"(c, index) in comments\" :key=\"index\">\r\n        <comment-strip :comment=\"c\"></comment-strip>\r\n        <el-divider/>\r\n      </template>\r\n    </div>\r\n\r\n    <div style=\"margin: 1rem 0;\">\r\n      <div v-if=\"!isReadyForLoad\" v-loading=\"!isReadyForLoad\" style=\"width: 100%; height: 2rem\"></div>\r\n      <div v-if=\"isAllComments\" style=\"width: 100%; text-align: center; color: #91949c\">评论到底啦(❁´◡`❁)~</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MovieInfo from \"@/components/movie/MovieInfo\";\r\nimport MovieComments from \"@/components/movie/MovieComments\";\r\nimport {onMounted, onUnmounted, reactive, ref, watch} from \"vue\";\r\nimport {ErrorMessage, SuccessMessage, WarningMessage} from \"@/utils/my-message\";\r\nimport {Edit, Search} from \"@element-plus/icons\";\r\nimport commentRequest from \"@/api/comment\";\r\nimport CommentStrip from \"@/components/basic/CommentStrip\";\r\n\r\nimport EmojiPicker from 'vue3-emoji-picker'\r\nimport '@/../node_modules/vue3-emoji-picker/dist/style.css'\r\nimport SvgIcon from \"@/components/basic/SvgIcon\";\r\nimport CommentsWordCloud from \"@/components/charts/CommentsWordCloud\";\r\n\r\nexport default {\r\n  name: 'MovieComments',\r\n  components: {\r\n    CommentsWordCloud,\r\n    SvgIcon,\r\n    CommentStrip,\r\n    Edit,\r\n    Search,\r\n    MovieInfo,\r\n    MovieComments,\r\n    EmojiPicker,\r\n  },\r\n  props: {\r\n    mid: {\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props) {\r\n    let movieId = ref(props.mid)\r\n    // 是否有自己的评论（如果有则显示删除按钮，否则不显示）\r\n    let isHaveOwnComment = ref(false)\r\n    let comments = ref([])\r\n\r\n    let ownComment = reactive({\r\n      mid: movieId.value,\r\n      id: '',\r\n      score: 0,\r\n      comment: '',\r\n      time: '',\r\n      agree: 0,\r\n      nickname: '',\r\n      avatar: '',\r\n    })\r\n    let ownCommentEditInfo = reactive({\r\n      score: 0,\r\n      comment: '',\r\n    })\r\n\r\n    let isEditDialogVisible = ref(false)\r\n    watch(isEditDialogVisible, (newValue, oldValue) => {\r\n      // 当编辑框关闭的时候，表情选择框也不显示\r\n      if (!newValue) {\r\n        isShowEmoji.value = false\r\n      }\r\n    })\r\n    const handleEditDialogVisible = () => {\r\n      isEditDialogVisible.value = !isEditDialogVisible.value\r\n    }\r\n    const onSelectEmoji = (emoji) => {\r\n      ownCommentEditInfo.comment += emoji.i\r\n    }\r\n    let isShowEmoji = ref(false)\r\n    const handleSubmitComment = () => {\r\n      if (ownCommentEditInfo.score === 0) {\r\n        WarningMessage('不可以给电影打0分 (┬┬﹏┬┬)')\r\n      } else {\r\n        // 向服务器发送提交请求\r\n        ownComment.score = ownCommentEditInfo.score * 2\r\n        ownComment.comment = ownCommentEditInfo.comment\r\n        commentRequest.addComment(ownComment).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n\r\n            // 如果用户评价成功，且之前没有评价过，那么此时发送请求获取当前评价信息，来更新界面\r\n            if (ownComment.nickname === '') {\r\n              handleGetOwnComment()\r\n            }\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n        isEditDialogVisible.value = false\r\n      }\r\n    }\r\n\r\n    const handleRemoveComment = () => {\r\n      commentRequest.removeOwnComment(ownComment.mid).then(res => {\r\n        if (res.code === 200) {\r\n          SuccessMessage(res.msg);\r\n          // 将其标记为false，表示有自己的评论已被删除，后面不会显示删除按钮\r\n          isHaveOwnComment.value = false;\r\n          ownComment.nickname = '';\r\n          ownComment.comment = '';\r\n          ownComment.score = 0;\r\n\r\n          ownCommentEditInfo.score = 0;\r\n          ownCommentEditInfo.comment = '';\r\n        } else {\r\n          ErrorMessage(res.msg);\r\n        }\r\n        isEditDialogVisible.value = false;\r\n      }).catch(err => {\r\n        console.error(err);\r\n      })\r\n    }\r\n\r\n    let handleGetOwnComment = () => {\r\n      commentRequest.getOwnComment(ownComment.mid).then(res => {\r\n        if (res.code === 200) {\r\n          // 将其标记为true，表示有自己的评论存在，后面会显示删除按钮\r\n          isHaveOwnComment.value = true;\r\n          let data = res.data;\r\n          ownComment.id = data.id;\r\n          ownComment.agree = data.agree;\r\n          ownComment.comment = data.comment;\r\n          ownComment.score = data.score;\r\n          ownComment.nickname = data.nickname;\r\n          ownComment.time = data.time;\r\n          ownComment.avatar = data.avatar;\r\n\r\n          ownCommentEditInfo.score = ownComment.score / 2;\r\n          ownCommentEditInfo.comment = ownComment.comment;\r\n        }\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    }\r\n    handleGetOwnComment()\r\n\r\n    let isAllComments = ref(false)\r\n    let currentPage = 0;\r\n    const pageSize = 10;\r\n    let isReadyForLoad = ref(true); // 加载锁，首次允许\r\n    function loadMoreComments() {\r\n      // 如果加载锁为解锁状态，且未加载所有评论，则继续加载评论\r\n      if (isReadyForLoad.value && !isAllComments.value) {\r\n        // 需要加载时锁上，防止重复加载\r\n        isReadyForLoad.value = false;\r\n        commentRequest.getMoreCommentsByMovieId(ownComment.mid, currentPage, pageSize).then(res => {\r\n          if (res.code === 200) {\r\n            if (res.data.length !== 0) {\r\n              comments.value = [...comments.value, ...res.data];\r\n            } else {\r\n              isAllComments.value = true;\r\n            }\r\n            currentPage++;\r\n          }\r\n          // 加载完成后，解锁\r\n          isReadyForLoad.value = true;\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      }\r\n    }\r\n    // 初始化时加载一次评论\r\n    loadMoreComments()\r\n\r\n    /**\r\n     * 滚动至底部加载更多\r\n     * @param e\r\n     */\r\n    const handleInfiniteScroll = (e) => {\r\n      // 浏览器整个框架的高度 = 滚动条卷去部分 + 可视部分 + 底部隐藏部分的高度。\r\n      // 浏览器所有内容高度\r\n      const scrollHeight = document.body.scrollHeight;\r\n      // 浏览器滚动部分高度; || 两边获取的值是一样的，为了兼容个不同浏览器\r\n      const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n      // 浏览器可视部分高度\r\n      const clientHeight = document.documentElement.clientHeight;\r\n\r\n      // 计算 底部隐藏部分的高度\r\n      const distance = scrollHeight - scrollTop - clientHeight;\r\n      if (distance <= 50) {\r\n        loadMoreComments()\r\n      }\r\n    }\r\n\r\n    let wordCloudData = ref([])\r\n    onMounted(() => {\r\n      window.addEventListener('scroll', handleInfiniteScroll, true);\r\n      /**\r\n       * 请求获取评论词云图数据\r\n       */\r\n      commentRequest.getCommentsWordCloudData(props.mid).then(res => {\r\n        if (res.code === 200) {\r\n          wordCloudData.value = res.data;\r\n        }\r\n      }).catch(err => {\r\n        console.error(err);\r\n      })\r\n    })\r\n    onUnmounted(() => {\r\n      window.removeEventListener('scroll', handleInfiniteScroll);\r\n    })\r\n\r\n    return {\r\n      comments,\r\n      ownComment,\r\n      isShowEmoji,\r\n      isAllComments,\r\n      isReadyForLoad,\r\n      isHaveOwnComment,\r\n      ownCommentEditInfo,\r\n      isEditDialogVisible,\r\n      wordCloudData,\r\n      handleEditDialogVisible,\r\n      handleSubmitComment,\r\n      handleRemoveComment,\r\n      onSelectEmoji,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.comment-strip {\r\n  margin-left: 2rem;\r\n  margin-right: 2rem;\r\n}\r\n\r\n.each-comment-tag {\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 2rem;\r\n  color: black;\r\n  width: 100%;\r\n  text-align: center;\r\n  background-color: rgb(84, 92, 100);\r\n  border-radius: 0.6rem;\r\n}\r\n\r\n.dialog-div {\r\n  overflow: hidden;\r\n  z-index: 9999;\r\n  position: fixed;\r\n  text-align: center;\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 1rem;\r\n}\r\n\r\n/deep/ .el-dialog {\r\n  width: 40%;\r\n}\r\n\r\n/* 响应式布局 - 当屏幕小于 1200 像素宽 */\r\n@media screen and (max-width: 1200px) {\r\n  /deep/ .el-dialog {\r\n    width: 70%;\r\n  }\r\n}\r\n\r\n/* 响应式布局 - 当屏幕 小于 800像素 宽 */\r\n@media screen and (max-width: 800px) {\r\n  /deep/ .el-dialog {\r\n    width: 90%;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}