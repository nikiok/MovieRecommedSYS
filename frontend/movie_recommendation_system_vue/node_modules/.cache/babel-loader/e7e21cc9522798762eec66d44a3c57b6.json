{"ast":null,"code":"import { defineComponent, openBlock, createBlock, Transition, mergeProps, withCtx, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { addClass, removeClass, hasClass } from '../../../utils/dom/style.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElMenuCollapseTransition\",\n  setup() {\n    const listeners = {\n      onBeforeEnter: el => el.style.opacity = \"0.2\",\n      onEnter(el, done) {\n        addClass(el, \"el-opacity-transition\");\n        el.style.opacity = \"1\";\n        done();\n      },\n      onAfterEnter(el) {\n        removeClass(el, \"el-opacity-transition\");\n        el.style.opacity = \"\";\n      },\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;\n          el.dataset = {};\n        }\n        if (hasClass(el, \"el-menu--collapse\")) {\n          removeClass(el, \"el-menu--collapse\");\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          addClass(el, \"el-menu--collapse\");\n        } else {\n          addClass(el, \"el-menu--collapse\");\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          removeClass(el, \"el-menu--collapse\");\n        }\n        el.style.width = `${el.scrollWidth}px`;\n        el.style.overflow = \"hidden\";\n      },\n      onLeave(el) {\n        addClass(el, \"horizontal-collapse-transition\");\n        el.style.width = `${el.dataset.scrollWidth}px`;\n      }\n    };\n    return {\n      listeners\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(Transition, mergeProps({\n    mode: \"out-in\"\n  }, _ctx.listeners), {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 16);\n}\nvar ElMenuCollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ElMenuCollapseTransition as default };","map":{"version":3,"mappings":";;;;AAWA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAQA;IACN,MAAMC,SAAY;MAChBC,aAAe,EAACC,EAAQ,OAAGC,MAAMC,OAAU;MAC3CC,QAAQH,IAAII,IAAM;QAChBC,SAASL,EAAI;QACbA,GAAGC,MAAMC,OAAU;QACnBE;MAAA;MAGFE,aAAaN,EAAI;QACfO,YAAYP,EAAI;QAChBA,GAAGC,MAAMC,OAAU;MAAA;MAGrBM,cAAcR,EAAI;QACZ,KAACA,GAAGS,OAAS;UACf;UAAET,GAAWS,OAAU;QAAA;QAGrB,aAAST,IAAI,mBAAsB;UACrCO,YAAYP,EAAI;UACbA,WAAQU,WAAc,MAAGT,KAAM;UAC/BD,WAAQW,WAAc,MAAGC,WAAY;UACxCP,SAASL,EAAI;QAAA,CACR;UACLK,SAASL,EAAI;UACVA,WAAQU,WAAc,MAAGT,KAAM;UAC/BD,WAAQW,WAAc,MAAGC,WAAY;UACxCL,YAAYP,EAAI;QAAA;QAGfA,SAAMa,KAAQ,MAAGb,EAAG;QACvBA,GAAGC,MAAMa,QAAW;MAAA;MAGtBC,QAAQf,EAAiB;QACvBK,SAASL,EAAI;QACbA,GAAGC,KAAM,SAAW,MAAGQ,OAAQ;MAAA;IAAA;IAI5B;MACLX;IAAA;EAAA;AAAA;;EAtDJ,gCAEakB,UAFb,aAEa;IAFDC,MAAK;EAAA,GAAiBC,IAAS;IAAAC,iBACzC,MAAQ,CAARC,UAAQ;IAAAC","names":["_sfc_main","defineComponent","name","setup","listeners","onBeforeEnter","el","style","opacity","onEnter","done","addClass","onAfterEnter","removeClass","onBeforeLeave","dataset","oldOverflow","scrollWidth","clientWidth","width","overflow","onLeave","_Transition","mode","_ctx","default","_renderSlot","_"],"sources":["../../../../../../packages/components/menu/src/menu-collapse-transition.vue"],"sourcesContent":["<template>\n  <transition mode=\"out-in\" v-bind=\"listeners\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { addClass, removeClass, hasClass } from '@element-plus/utils'\n\nimport type { TransitionProps, BaseTransitionProps } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMenuCollapseTransition',\n  setup() {\n    const listeners = {\n      onBeforeEnter: (el) => (el.style.opacity = '0.2'),\n      onEnter(el, done) {\n        addClass(el, 'el-opacity-transition')\n        el.style.opacity = '1'\n        done()\n      },\n\n      onAfterEnter(el) {\n        removeClass(el, 'el-opacity-transition')\n        el.style.opacity = ''\n      },\n\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;(el as any).dataset = {}\n        }\n\n        if (hasClass(el, 'el-menu--collapse')) {\n          removeClass(el, 'el-menu--collapse')\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          addClass(el, 'el-menu--collapse')\n        } else {\n          addClass(el, 'el-menu--collapse')\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          removeClass(el, 'el-menu--collapse')\n        }\n\n        el.style.width = `${el.scrollWidth}px`\n        el.style.overflow = 'hidden'\n      },\n\n      onLeave(el: HTMLElement) {\n        addClass(el, 'horizontal-collapse-transition')\n        el.style.width = `${el.dataset.scrollWidth}px`\n      },\n    } as BaseTransitionProps<HTMLElement> as TransitionProps\n\n    return {\n      listeners,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}