{"ast":null,"code":"import { defineComponent, ref, watch, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElSteps\",\n  props: {\n    space: {\n      type: [Number, String],\n      default: \"\"\n    },\n    active: {\n      type: Number,\n      default: 0\n    },\n    direction: {\n      type: String,\n      default: \"horizontal\",\n      validator: val => [\"horizontal\", \"vertical\"].includes(val)\n    },\n    alignCenter: {\n      type: Boolean,\n      default: false\n    },\n    simple: {\n      type: Boolean,\n      default: false\n    },\n    finishStatus: {\n      type: String,\n      default: \"finish\",\n      validator: val => [\"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val)\n    },\n    processStatus: {\n      type: String,\n      default: \"process\",\n      validator: val => [\"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val)\n    }\n  },\n  emits: [CHANGE_EVENT],\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"steps\");\n    const steps = ref([]);\n    watch(steps, () => {\n      steps.value.forEach((instance, index) => {\n        instance.setIndex(index);\n      });\n    });\n    provide(\"ElSteps\", {\n      props,\n      steps\n    });\n    watch(() => props.active, (newVal, oldVal) => {\n      emit(CHANGE_EVENT, newVal, oldVal);\n    });\n    return {\n      steps,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.simple ? \"simple\" : _ctx.direction)])\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nvar Steps = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Steps as default };","map":{"version":3,"mappings":";;;;;;AAYA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,KAAO;MACLC,MAAM,CAACC,MAAQ;MACfC,OAAS;IAAA;IAEXC,MAAQ;MACNH,IAAM;MACNE,OAAS;IAAA;IAEXE,SAAW;MACTJ,IAAM;MACNE,OAAS;MACTG,WAAYC,OACV,CAAC,cAAc,YAAYC,QAAS;IAAA;IAExCC,WAAa;MACXR,IAAM;MACNE,OAAS;IAAA;IAEXO,MAAQ;MACNT,IAAM;MACNE,OAAS;IAAA;IAEXQ,YAAc;MACZV,IAAM;MACNE,OAAS;MACTG,WAAYC,GACV,KAAC,QAAQ,SAAW,YAAU,OAAS,aAAWC,QAAS;IAAA;IAE/DI,aAAe;MACbX,IAAM;MACNE,OAAS;MACTG,WAAYC,GACV,KAAC,QAAQ,SAAW,YAAU,OAAS,aAAWC,QAAS;IAAA;EAAA;EAGjEK,OAAO,CAACC;EACRC,MAAMhB,KAAO;IAAEiB;EAAQ;IACrB,MAAMC,KAAKC,YAAa;IACxB,MAAMC,QAAQC,GAAI;IAElBC,MAAMF,OAAO,MAAM;MACjBA,MAAMG,KAAM,SAAQ,CAACC,UAAUC,KAAU;QACvCD,SAASE,QAAS;MAAA;IAAA;IAIdC,mBAAW;MAAE3B,KAAO;MAAAoB;IAAA;IAE5BE,MACE,MAAMtB,MAAMK,MACZ,GAACuB,QAAQC,MAAW;MAClBZ,KAAKF,cAAca,MAAQ;IAAA;IAIxB;MACLR;MACAF;IAAA;EAAA;AAAA;;sBAvEJY,kBAEM;IAFAC,OAAKC,cAAG,UAAGC,KAAKC,IAAG,MAAEA,cAAM,QAAc;EAAA,IAC7CC,UAAQ","names":["_sfc_main","defineComponent","name","props","space","type","Number","default","active","direction","validator","val","includes","alignCenter","simple","finishStatus","processStatus","emits","CHANGE_EVENT","setup","emit","ns","useNamespace","steps","ref","watch","value","instance","index","setIndex","provide","newVal","oldVal","_createElementBlock","class","_normalizeClass","b","_ctx","_renderSlot"],"sources":["../../../../../../packages/components/steps/src/index.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(simple ? 'simple' : direction)]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, ref, provide } from 'vue'\n\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\n\nexport default defineComponent({\n  name: 'ElSteps',\n  props: {\n    space: {\n      type: [Number, String],\n      default: '',\n    },\n    active: {\n      type: Number,\n      default: 0,\n    },\n    direction: {\n      type: String,\n      default: 'horizontal',\n      validator: (val: string): boolean =>\n        ['horizontal', 'vertical'].includes(val),\n    },\n    alignCenter: {\n      type: Boolean,\n      default: false,\n    },\n    simple: {\n      type: Boolean,\n      default: false,\n    },\n    finishStatus: {\n      type: String,\n      default: 'finish',\n      validator: (val: string): boolean =>\n        ['wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n    processStatus: {\n      type: String,\n      default: 'process',\n      validator: (val: string): boolean =>\n        ['wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n  },\n  emits: [CHANGE_EVENT],\n  setup(props, { emit }) {\n    const ns = useNamespace('steps')\n    const steps = ref([])\n\n    watch(steps, () => {\n      steps.value.forEach((instance, index) => {\n        instance.setIndex(index)\n      })\n    })\n\n    provide('ElSteps', { props, steps })\n\n    watch(\n      () => props.active,\n      (newVal, oldVal) => {\n        emit(CHANGE_EVENT, newVal, oldVal)\n      }\n    )\n\n    return {\n      steps,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}