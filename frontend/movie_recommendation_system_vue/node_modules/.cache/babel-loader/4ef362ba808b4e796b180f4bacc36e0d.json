{"ast":null,"code":"import { defineComponent, reactive, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, provide, resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, Transition, withCtx, withDirectives, createVNode, vShow, createCommentVNode, renderSlot, Fragment, renderList, toDisplayString } from 'vue';\nimport { throttle } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElCarousel\",\n  components: {\n    ElIcon,\n    ArrowLeft,\n    ArrowRight\n  },\n  props: {\n    initialIndex: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: String,\n      default: \"\"\n    },\n    trigger: {\n      type: String,\n      default: \"hover\"\n    },\n    autoplay: {\n      type: Boolean,\n      default: true\n    },\n    interval: {\n      type: Number,\n      default: 3e3\n    },\n    indicatorPosition: {\n      type: String,\n      default: \"\"\n    },\n    indicator: {\n      type: Boolean,\n      default: true\n    },\n    arrow: {\n      type: String,\n      default: \"hover\"\n    },\n    type: {\n      type: String,\n      default: \"\"\n    },\n    loop: {\n      type: Boolean,\n      default: true\n    },\n    direction: {\n      type: String,\n      default: \"horizontal\",\n      validator(val) {\n        return [\"horizontal\", \"vertical\"].includes(val);\n      }\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: [\"change\"],\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"carousel\");\n    const data = reactive({\n      activeIndex: -1,\n      containerWidth: 0,\n      timer: null,\n      hover: false\n    });\n    const root = ref(null);\n    const items = ref([]);\n    const arrowDisplay = computed(() => props.arrow !== \"never\" && props.direction !== \"vertical\");\n    const hasLabel = computed(() => {\n      return items.value.some(item => item.label.toString().length > 0);\n    });\n    const carouselClasses = computed(() => {\n      const classes = [ns.b(), ns.m(props.direction)];\n      if (props.type === \"card\") {\n        classes.push(ns.m(\"card\"));\n      }\n      return classes;\n    });\n    const indicatorsClasses = computed(() => {\n      const classes = [ns.e(\"indicators\"), ns.em(\"indicators\", props.direction)];\n      if (hasLabel.value) {\n        classes.push(ns.em(\"indicators\", \"labels\"));\n      }\n      if (props.indicatorPosition === \"outside\" || props.type === \"card\") {\n        classes.push(ns.em(\"indicators\", \"outside\"));\n      }\n      return classes;\n    });\n    const throttledArrowClick = throttle(index => {\n      setActiveItem(index);\n    }, 300, {\n      trailing: true\n    });\n    const throttledIndicatorHover = throttle(index => {\n      handleIndicatorHover(index);\n    }, 300);\n    function pauseTimer() {\n      if (data.timer) {\n        clearInterval(data.timer);\n        data.timer = null;\n      }\n    }\n    function startTimer() {\n      if (props.interval <= 0 || !props.autoplay || data.timer) return;\n      data.timer = setInterval(() => playSlides(), props.interval);\n    }\n    const playSlides = () => {\n      if (data.activeIndex < items.value.length - 1) {\n        data.activeIndex = data.activeIndex + 1;\n      } else if (props.loop) {\n        data.activeIndex = 0;\n      }\n    };\n    function setActiveItem(index) {\n      if (typeof index === \"string\") {\n        const filteredItems = items.value.filter(item => item.name === index);\n        if (filteredItems.length > 0) {\n          index = items.value.indexOf(filteredItems[0]);\n        }\n      }\n      index = Number(index);\n      if (Number.isNaN(index) || index !== Math.floor(index)) {\n        debugWarn(\"Carousel\", \"index must be an integer.\");\n        return;\n      }\n      const length = items.value.length;\n      const oldIndex = data.activeIndex;\n      if (index < 0) {\n        data.activeIndex = props.loop ? length - 1 : 0;\n      } else if (index >= length) {\n        data.activeIndex = props.loop ? 0 : length - 1;\n      } else {\n        data.activeIndex = index;\n      }\n      if (oldIndex === data.activeIndex) {\n        resetItemPosition(oldIndex);\n      }\n    }\n    function resetItemPosition(oldIndex) {\n      items.value.forEach((item, index) => {\n        item.translateItem(index, data.activeIndex, oldIndex);\n      });\n    }\n    function addItem(item) {\n      items.value.push(item);\n    }\n    function removeItem(uid) {\n      const index = items.value.findIndex(item => item.uid === uid);\n      if (index !== -1) {\n        items.value.splice(index, 1);\n        if (data.activeIndex === index) next();\n      }\n    }\n    function itemInStage(item, index) {\n      const length = items.value.length;\n      if (index === length - 1 && item.inStage && items.value[0].active || item.inStage && items.value[index + 1] && items.value[index + 1].active) {\n        return \"left\";\n      } else if (index === 0 && item.inStage && items.value[length - 1].active || item.inStage && items.value[index - 1] && items.value[index - 1].active) {\n        return \"right\";\n      }\n      return false;\n    }\n    function handleMouseEnter() {\n      data.hover = true;\n      if (props.pauseOnHover) {\n        pauseTimer();\n      }\n    }\n    function handleMouseLeave() {\n      data.hover = false;\n      startTimer();\n    }\n    function handleButtonEnter(arrow) {\n      if (props.direction === \"vertical\") return;\n      items.value.forEach((item, index) => {\n        if (arrow === itemInStage(item, index)) {\n          item.hover = true;\n        }\n      });\n    }\n    function handleButtonLeave() {\n      if (props.direction === \"vertical\") return;\n      items.value.forEach(item => {\n        item.hover = false;\n      });\n    }\n    function handleIndicatorClick(index) {\n      data.activeIndex = index;\n    }\n    function handleIndicatorHover(index) {\n      if (props.trigger === \"hover\" && index !== data.activeIndex) {\n        data.activeIndex = index;\n      }\n    }\n    function prev() {\n      setActiveItem(data.activeIndex - 1);\n    }\n    function next() {\n      setActiveItem(data.activeIndex + 1);\n    }\n    watch(() => data.activeIndex, (current, prev2) => {\n      resetItemPosition(prev2);\n      if (prev2 > -1) {\n        emit(\"change\", current, prev2);\n      }\n    });\n    watch(() => props.autoplay, current => {\n      current ? startTimer() : pauseTimer();\n    });\n    watch(() => props.loop, () => {\n      setActiveItem(data.activeIndex);\n    });\n    onMounted(() => {\n      nextTick(() => {\n        addResizeListener(root.value, resetItemPosition);\n        if (props.initialIndex < items.value.length && props.initialIndex >= 0) {\n          data.activeIndex = props.initialIndex;\n        }\n        startTimer();\n      });\n    });\n    onBeforeUnmount(() => {\n      if (root.value) removeResizeListener(root.value, resetItemPosition);\n      pauseTimer();\n    });\n    provide(\"injectCarouselScope\", {\n      root,\n      direction: props.direction,\n      type: props.type,\n      items,\n      loop: props.loop,\n      addItem,\n      removeItem,\n      setActiveItem\n    });\n    return {\n      data,\n      props,\n      items,\n      arrowDisplay,\n      carouselClasses,\n      indicatorsClasses,\n      hasLabel,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleIndicatorClick,\n      throttledArrowClick,\n      throttledIndicatorHover,\n      handleButtonEnter,\n      handleButtonLeave,\n      prev,\n      next,\n      setActiveItem,\n      root,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_left = resolveComponent(\"arrow-left\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"root\",\n    class: normalizeClass(_ctx.carouselClasses),\n    onMouseenter: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args), [\"stop\"])),\n    onMouseleave: _cache[7] || (_cache[7] = withModifiers((...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args), [\"stop\"]))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"container\")),\n    style: normalizeStyle({\n      height: _ctx.height\n    })\n  }, [_ctx.arrowDisplay ? (openBlock(), createBlock(Transition, {\n    key: 0,\n    name: \"carousel-arrow-left\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.e(\"arrow\"), _ctx.ns.em(\"arrow\", \"left\")]),\n      onMouseenter: _cache[0] || (_cache[0] = $event => _ctx.handleButtonEnter(\"left\")),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.handleButtonLeave && _ctx.handleButtonLeave(...args)),\n      onClick: _cache[2] || (_cache[2] = withModifiers($event => _ctx.throttledArrowClick(_ctx.data.activeIndex - 1), [\"stop\"]))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_left)]),\n      _: 1\n    })], 34), [[vShow, (_ctx.arrow === \"always\" || _ctx.data.hover) && (_ctx.props.loop || _ctx.data.activeIndex > 0)]])]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.arrowDisplay ? (openBlock(), createBlock(Transition, {\n    key: 1,\n    name: \"carousel-arrow-right\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.e(\"arrow\"), _ctx.ns.em(\"arrow\", \"right\")]),\n      onMouseenter: _cache[3] || (_cache[3] = $event => _ctx.handleButtonEnter(\"right\")),\n      onMouseleave: _cache[4] || (_cache[4] = (...args) => _ctx.handleButtonLeave && _ctx.handleButtonLeave(...args)),\n      onClick: _cache[5] || (_cache[5] = withModifiers($event => _ctx.throttledArrowClick(_ctx.data.activeIndex + 1), [\"stop\"]))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_right)]),\n      _: 1\n    })], 34), [[vShow, (_ctx.arrow === \"always\" || _ctx.data.hover) && (_ctx.props.loop || _ctx.data.activeIndex < _ctx.items.length - 1)]])]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6), _ctx.indicatorPosition !== \"none\" ? (openBlock(), createElementBlock(\"ul\", {\n    key: 0,\n    class: normalizeClass(_ctx.indicatorsClasses)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, (item, index) => {\n    return openBlock(), createElementBlock(\"li\", {\n      key: index,\n      class: normalizeClass([_ctx.ns.e(\"indicator\"), _ctx.ns.em(\"indicator\", _ctx.direction), _ctx.ns.is(\"active\", index === _ctx.data.activeIndex)]),\n      onMouseenter: $event => _ctx.throttledIndicatorHover(index),\n      onClick: withModifiers($event => _ctx.handleIndicatorClick(index), [\"stop\"])\n    }, [createElementVNode(\"button\", {\n      class: normalizeClass(_ctx.ns.e(\"button\"))\n    }, [_ctx.hasLabel ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(item.label), 1)) : createCommentVNode(\"v-if\", true)], 2)], 42, _hoisted_1);\n  }), 128))], 2)) : createCommentVNode(\"v-if\", true)], 34);\n}\nvar Carousel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Carousel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElIcon","ArrowLeft","ArrowRight","props","initialIndex","type","default","height","trigger","autoplay","interval","indicatorPosition","indicator","arrow","loop","direction","validator","val","includes","pauseOnHover","emits","setup","emit","ns","useNamespace","data","reactive","activeIndex","containerWidth","timer","hover","root","ref","items","arrowDisplay","computed","value","some","item","toString","length","classes","b","m","hasLabel","throttle","index","setActiveItem","trailing","handleIndicatorHover","clearInterval","playSlides","filteredItems","filter","Number","isNaN","floor","debugWarn","oldIndex","resetItemPosition","push","uid","findIndex","splice","next","inStage","active","pauseTimer","startTimer","itemInStage","forEach","watch","current","prev2","onMounted","nextTick","addResizeListener","onBeforeUnmount","removeResizeListener","provide","addItem","removeItem","carouselClasses","indicatorsClasses","handleMouseEnter","handleMouseLeave","handleIndicatorClick","throttledArrowClick","throttledIndicatorHover","handleButtonEnter","handleButtonLeave","prev","_createElementBlock","class","_normalizeClass","onMouseenter","_cache","_ctx","onMouseleave","_createElementVNode","e","style","_normalizeStyle","_createBlock","key","em","onClick","_createVNode","_","_renderSlot","_openBlock","_Fragment","$event","_withModifiers","label"],"sources":["../../../../../../packages/components/carousel/src/main.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    :class=\"carouselClasses\"\n    @mouseenter.stop=\"handleMouseEnter\"\n    @mouseleave.stop=\"handleMouseLeave\"\n  >\n    <div :class=\"ns.e('container')\" :style=\"{ height: height }\">\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-left\">\n        <button\n          v-show=\"\n            (arrow === 'always' || data.hover) &&\n            (props.loop || data.activeIndex > 0)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'left')]\"\n          @mouseenter=\"handleButtonEnter('left')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(data.activeIndex - 1)\"\n        >\n          <el-icon>\n            <arrow-left />\n          </el-icon>\n        </button>\n      </transition>\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-right\">\n        <button\n          v-show=\"\n            (arrow === 'always' || data.hover) &&\n            (props.loop || data.activeIndex < items.length - 1)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'right')]\"\n          @mouseenter=\"handleButtonEnter('right')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(data.activeIndex + 1)\"\n        >\n          <el-icon>\n            <arrow-right />\n          </el-icon>\n        </button>\n      </transition>\n      <slot />\n    </div>\n    <ul v-if=\"indicatorPosition !== 'none'\" :class=\"indicatorsClasses\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :class=\"[\n          ns.e('indicator'),\n          ns.em('indicator', direction),\n          ns.is('active', index === data.activeIndex),\n        ]\"\n        @mouseenter=\"throttledIndicatorHover(index)\"\n        @click.stop=\"handleIndicatorClick(index)\"\n      >\n        <button :class=\"ns.e('button')\">\n          <span v-if=\"hasLabel\">{{ item.label }}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  computed,\n  ref,\n  provide,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  nextTick,\n} from 'vue'\nimport { throttle } from 'lodash-unified'\nimport {\n  addResizeListener,\n  removeResizeListener,\n  debugWarn,\n} from '@element-plus/utils'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type {\n  ICarouselProps,\n  CarouselItem,\n  InjectCarouselScope,\n} from './carousel'\n\nexport default defineComponent({\n  name: 'ElCarousel',\n  components: {\n    ElIcon,\n    ArrowLeft,\n    ArrowRight,\n  },\n  props: {\n    initialIndex: {\n      type: Number,\n      default: 0,\n    },\n    height: { type: String, default: '' },\n    trigger: {\n      type: String,\n      default: 'hover',\n    },\n    autoplay: {\n      type: Boolean,\n      default: true,\n    },\n    interval: {\n      type: Number,\n      default: 3000,\n    },\n    indicatorPosition: { type: String, default: '' },\n    indicator: {\n      type: Boolean,\n      default: true,\n    },\n    arrow: {\n      type: String,\n      default: 'hover',\n    },\n    type: { type: String, default: '' },\n    loop: {\n      type: Boolean,\n      default: true,\n    },\n    direction: {\n      type: String,\n      default: 'horizontal',\n      validator(val: string) {\n        return ['horizontal', 'vertical'].includes(val)\n      },\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  emits: ['change'],\n  setup(props: ICarouselProps, { emit }) {\n    const ns = useNamespace('carousel')\n    // data\n    const data = reactive<{\n      activeIndex: number\n      containerWidth: number\n      timer: null | ReturnType<typeof setInterval>\n      hover: boolean\n    }>({\n      activeIndex: -1,\n      containerWidth: 0,\n      timer: null,\n      hover: false,\n    })\n\n    // refs\n    const root = ref(null)\n    const items = ref<CarouselItem[]>([])\n\n    // computed\n    const arrowDisplay = computed(\n      () => props.arrow !== 'never' && props.direction !== 'vertical'\n    )\n\n    const hasLabel = computed(() => {\n      return items.value.some((item) => item.label.toString().length > 0)\n    })\n\n    const carouselClasses = computed(() => {\n      const classes = [ns.b(), ns.m(props.direction)]\n      if (props.type === 'card') {\n        classes.push(ns.m('card'))\n      }\n      return classes\n    })\n\n    const indicatorsClasses = computed(() => {\n      const classes = [ns.e('indicators'), ns.em('indicators', props.direction)]\n      if (hasLabel.value) {\n        classes.push(ns.em('indicators', 'labels'))\n      }\n      if (props.indicatorPosition === 'outside' || props.type === 'card') {\n        classes.push(ns.em('indicators', 'outside'))\n      }\n      return classes\n    })\n\n    // methods\n    const throttledArrowClick = throttle(\n      (index) => {\n        setActiveItem(index)\n      },\n      300,\n      { trailing: true }\n    )\n\n    const throttledIndicatorHover = throttle((index) => {\n      handleIndicatorHover(index)\n    }, 300)\n\n    function pauseTimer() {\n      if (data.timer) {\n        clearInterval(data.timer)\n        data.timer = null\n      }\n    }\n\n    function startTimer() {\n      if (props.interval <= 0 || !props.autoplay || data.timer) return\n      data.timer = setInterval(() => playSlides(), props.interval)\n    }\n\n    const playSlides = () => {\n      if (data.activeIndex < items.value.length - 1) {\n        data.activeIndex = data.activeIndex + 1\n      } else if (props.loop) {\n        data.activeIndex = 0\n      }\n    }\n\n    function setActiveItem(index) {\n      if (typeof index === 'string') {\n        const filteredItems = items.value.filter((item) => item.name === index)\n        if (filteredItems.length > 0) {\n          index = items.value.indexOf(filteredItems[0])\n        }\n      }\n      index = Number(index)\n      if (Number.isNaN(index) || index !== Math.floor(index)) {\n        debugWarn('Carousel', 'index must be an integer.')\n        return\n      }\n      const length = items.value.length\n      const oldIndex = data.activeIndex\n      if (index < 0) {\n        data.activeIndex = props.loop ? length - 1 : 0\n      } else if (index >= length) {\n        data.activeIndex = props.loop ? 0 : length - 1\n      } else {\n        data.activeIndex = index\n      }\n      if (oldIndex === data.activeIndex) {\n        resetItemPosition(oldIndex)\n      }\n    }\n\n    function resetItemPosition(oldIndex) {\n      items.value.forEach((item, index) => {\n        item.translateItem(index, data.activeIndex, oldIndex)\n      })\n    }\n\n    function addItem(item) {\n      items.value.push(item)\n    }\n\n    function removeItem(uid) {\n      const index = items.value.findIndex((item) => item.uid === uid)\n      if (index !== -1) {\n        items.value.splice(index, 1)\n        if (data.activeIndex === index) next()\n      }\n    }\n\n    function itemInStage(item, index) {\n      const length = items.value.length\n      if (\n        (index === length - 1 && item.inStage && items.value[0].active) ||\n        (item.inStage &&\n          items.value[index + 1] &&\n          items.value[index + 1].active)\n      ) {\n        return 'left'\n      } else if (\n        (index === 0 && item.inStage && items.value[length - 1].active) ||\n        (item.inStage &&\n          items.value[index - 1] &&\n          items.value[index - 1].active)\n      ) {\n        return 'right'\n      }\n      return false\n    }\n\n    function handleMouseEnter() {\n      data.hover = true\n      if (props.pauseOnHover) {\n        pauseTimer()\n      }\n    }\n\n    function handleMouseLeave() {\n      data.hover = false\n      startTimer()\n    }\n\n    function handleButtonEnter(arrow) {\n      if (props.direction === 'vertical') return\n      items.value.forEach((item, index) => {\n        if (arrow === itemInStage(item, index)) {\n          item.hover = true\n        }\n      })\n    }\n\n    function handleButtonLeave() {\n      if (props.direction === 'vertical') return\n      items.value.forEach((item) => {\n        item.hover = false\n      })\n    }\n\n    function handleIndicatorClick(index) {\n      data.activeIndex = index\n    }\n\n    function handleIndicatorHover(index) {\n      if (props.trigger === 'hover' && index !== data.activeIndex) {\n        data.activeIndex = index\n      }\n    }\n\n    function prev() {\n      setActiveItem(data.activeIndex - 1)\n    }\n\n    function next() {\n      setActiveItem(data.activeIndex + 1)\n    }\n\n    // watch\n    watch(\n      () => data.activeIndex,\n      (current, prev) => {\n        resetItemPosition(prev)\n        if (prev > -1) {\n          emit('change', current, prev)\n        }\n      }\n    )\n    watch(\n      () => props.autoplay,\n      (current) => {\n        current ? startTimer() : pauseTimer()\n      }\n    )\n    watch(\n      () => props.loop,\n      () => {\n        setActiveItem(data.activeIndex)\n      }\n    )\n\n    // lifecycle\n    onMounted(() => {\n      nextTick(() => {\n        addResizeListener(root.value, resetItemPosition)\n        if (\n          props.initialIndex < items.value.length &&\n          props.initialIndex >= 0\n        ) {\n          data.activeIndex = props.initialIndex\n        }\n        startTimer()\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (root.value) removeResizeListener(root.value, resetItemPosition)\n      pauseTimer()\n    })\n\n    // provide\n    provide<InjectCarouselScope>('injectCarouselScope', {\n      root,\n      direction: props.direction,\n      type: props.type,\n      items,\n      loop: props.loop,\n      addItem,\n      removeItem,\n      setActiveItem,\n    })\n\n    return {\n      data,\n      props,\n      items,\n\n      arrowDisplay,\n      carouselClasses,\n      indicatorsClasses,\n      hasLabel,\n\n      handleMouseEnter,\n      handleMouseLeave,\n      handleIndicatorClick,\n      throttledArrowClick,\n      throttledIndicatorHover,\n      handleButtonEnter,\n      handleButtonLeave,\n\n      prev,\n      next,\n      setActiveItem,\n\n      root,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}