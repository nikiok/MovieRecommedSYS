{"ast":null,"code":"import { defineComponent, ref, computed, watchEffect, resolveComponent, openBlock, createElementBlock, normalizeClass, withKeys, createCommentVNode, createBlock, Fragment, renderList, toDisplayString } from 'vue';\nimport { DArrowLeft, DArrowRight, MoreFilled } from '@element-plus/icons-vue';\nimport '../../../../hooks/index.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1\n  },\n  pageCount: {\n    type: Number,\n    required: true\n  },\n  pagerCount: {\n    type: Number,\n    default: 7\n  },\n  disabled: Boolean\n};\nconst _sfc_main = defineComponent({\n  name: \"ElPaginationPager\",\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled\n  },\n  props: paginationPagerProps,\n  emits: [\"change\"],\n  setup(props, {\n    emit\n  }) {\n    const nsPager = useNamespace(\"pager\");\n    const nsIcon = useNamespace(\"icon\");\n    const showPrevMore = ref(false);\n    const showNextMore = ref(false);\n    const quickPrevHover = ref(false);\n    const quickNextHover = ref(false);\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount;\n      const halfPagerCount = (pagerCount - 1) / 2;\n      const currentPage = Number(props.currentPage);\n      const pageCount = Number(props.pageCount);\n      let showPrevMore2 = false;\n      let showNextMore2 = false;\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore2 = true;\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore2 = true;\n        }\n      }\n      const array = [];\n      if (showPrevMore2 && !showNextMore2) {\n        const startPage = pageCount - (pagerCount - 2);\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i);\n        }\n      } else if (!showPrevMore2 && showNextMore2) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i);\n        }\n      } else if (showPrevMore2 && showNextMore2) {\n        const offset = Math.floor(pagerCount / 2) - 1;\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i);\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i);\n        }\n      }\n      return array;\n    });\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2;\n      showPrevMore.value = false;\n      showNextMore.value = false;\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true;\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true;\n        }\n      }\n    });\n    function onMouseenter(direction) {\n      if (props.disabled) return;\n      if (direction === \"left\") {\n        quickPrevHover.value = true;\n      } else {\n        quickNextHover.value = true;\n      }\n    }\n    function onEnter(e) {\n      const target = e.target;\n      if (target.tagName.toLowerCase() === \"li\" && Array.from(target.classList).includes(\"number\")) {\n        const newPage = Number(target.textContent);\n        if (newPage !== props.currentPage) {\n          emit(\"change\", newPage);\n        }\n      }\n    }\n    function onPagerClick(event) {\n      const target = event.target;\n      if (target.tagName.toLowerCase() === \"ul\" || props.disabled) {\n        return;\n      }\n      let newPage = Number(target.textContent);\n      const pageCount = props.pageCount;\n      const currentPage = props.currentPage;\n      const pagerCountOffset = props.pagerCount - 2;\n      if (target.className.includes(\"more\")) {\n        if (target.className.includes(\"quickprev\")) {\n          newPage = currentPage - pagerCountOffset;\n        } else if (target.className.includes(\"quicknext\")) {\n          newPage = currentPage + pagerCountOffset;\n        }\n      }\n      if (!Number.isNaN(+newPage)) {\n        if (newPage < 1) {\n          newPage = 1;\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount;\n        }\n      }\n      if (newPage !== currentPage) {\n        emit(\"change\", newPage);\n      }\n    }\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n      nsPager,\n      nsIcon,\n      onMouseenter,\n      onPagerClick,\n      onEnter\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-current\"];\nconst _hoisted_2 = [\"aria-current\"];\nconst _hoisted_3 = [\"aria-current\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_d_arrow_left = resolveComponent(\"d-arrow-left\");\n  const _component_more_filled = resolveComponent(\"more-filled\");\n  const _component_d_arrow_right = resolveComponent(\"d-arrow-right\");\n  return openBlock(), createElementBlock(\"ul\", {\n    class: normalizeClass(_ctx.nsPager.b()),\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.onPagerClick && _ctx.onPagerClick(...args)),\n    onKeyup: _cache[5] || (_cache[5] = withKeys((...args) => _ctx.onEnter && _ctx.onEnter(...args), [\"enter\"]))\n  }, [_ctx.pageCount > 0 ? (openBlock(), createElementBlock(\"li\", {\n    key: 0,\n    class: normalizeClass([[_ctx.nsPager.is(\"active\", _ctx.currentPage === 1), _ctx.nsPager.is(\"disabled\", _ctx.disabled)], \"number\"]),\n    \"aria-current\": _ctx.currentPage === 1,\n    tabindex: \"0\"\n  }, \" 1 \", 10, _hoisted_1)) : createCommentVNode(\"v-if\", true), _ctx.showPrevMore ? (openBlock(), createElementBlock(\"li\", {\n    key: 1,\n    class: normalizeClass([\"more\", \"btn-quickprev\", _ctx.nsIcon.b(), _ctx.nsPager.is(\"disabled\", _ctx.disabled)]),\n    onMouseenter: _cache[0] || (_cache[0] = $event => _ctx.onMouseenter(\"left\")),\n    onMouseleave: _cache[1] || (_cache[1] = $event => _ctx.quickPrevHover = false)\n  }, [_ctx.quickPrevHover ? (openBlock(), createBlock(_component_d_arrow_left, {\n    key: 0\n  })) : (openBlock(), createBlock(_component_more_filled, {\n    key: 1\n  }))], 34)) : createCommentVNode(\"v-if\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.pagers, pager => {\n    return openBlock(), createElementBlock(\"li\", {\n      key: pager,\n      class: normalizeClass([[_ctx.nsPager.is(\"active\", _ctx.currentPage === pager), _ctx.nsPager.is(\"disabled\", _ctx.disabled)], \"number\"]),\n      \"aria-current\": _ctx.currentPage === pager,\n      tabindex: \"0\"\n    }, toDisplayString(pager), 11, _hoisted_2);\n  }), 128)), _ctx.showNextMore ? (openBlock(), createElementBlock(\"li\", {\n    key: 2,\n    class: normalizeClass([\"more\", \"btn-quicknext\", _ctx.nsIcon.b(), _ctx.nsPager.is(\"disabled\", _ctx.disabled)]),\n    onMouseenter: _cache[2] || (_cache[2] = $event => _ctx.onMouseenter(\"right\")),\n    onMouseleave: _cache[3] || (_cache[3] = $event => _ctx.quickNextHover = false)\n  }, [_ctx.quickNextHover ? (openBlock(), createBlock(_component_d_arrow_right, {\n    key: 0\n  })) : (openBlock(), createBlock(_component_more_filled, {\n    key: 1\n  }))], 34)) : createCommentVNode(\"v-if\", true), _ctx.pageCount > 1 ? (openBlock(), createElementBlock(\"li\", {\n    key: 3,\n    class: normalizeClass([[_ctx.nsPager.is(\"active\", _ctx.currentPage === _ctx.pageCount), _ctx.nsPager.is(\"disabled\", _ctx.disabled)], \"number\"]),\n    \"aria-current\": _ctx.currentPage === _ctx.pageCount,\n    tabindex: \"0\"\n  }, toDisplayString(_ctx.pageCount), 11, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 34);\n}\nvar Pager = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Pager as default };","map":{"version":3,"mappings":"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","names":["paginationPagerProps","currentPage","type","default","pageCount","required","pagerCount","disabled","_sfc_main","defineComponent","name","components","DArrowLeft","DArrowRight","MoreFilled","props","emits","setup","emit","nsPager","useNamespace","nsIcon","showPrevMore","ref","showNextMore","quickPrevHover","quickNextHover","computed","Number","showPrevMore2","showNextMore2","halfPagerCount","array","i","push","offset","floor","watchEffect","value","direction","e","target","tagName","toLowerCase","Array","from","classList","event","className","newPage","isNaN","pagers","onMouseenter","onPagerClick","onEnter","_createElementBlock","class","_normalizeClass","_ctx","onClick","_cache","onKeyup","key","is","tabindex","onMouseleave","_component_d_arrow_left","_createBlock","pager","_component_d_arrow_right"],"sources":["../../../../../../../packages/components/pagination/src/components/pager.vue"],"sourcesContent":["<template>\n  <ul :class=\"nsPager.b()\" @click=\"onPagerClick\" @keyup.enter=\"onEnter\">\n    <li\n      v-if=\"pageCount > 0\"\n      :class=\"[\n        nsPager.is('active', currentPage === 1),\n        nsPager.is('disabled', disabled),\n      ]\"\n      class=\"number\"\n      :aria-current=\"currentPage === 1\"\n      tabindex=\"0\"\n    >\n      1\n    </li>\n    <li\n      v-if=\"showPrevMore\"\n      :class=\"[\n        'more',\n        'btn-quickprev',\n        nsIcon.b(),\n        nsPager.is('disabled', disabled),\n      ]\"\n      @mouseenter=\"onMouseenter('left')\"\n      @mouseleave=\"quickPrevHover = false\"\n    >\n      <d-arrow-left v-if=\"quickPrevHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-for=\"pager in pagers\"\n      :key=\"pager\"\n      :class=\"[\n        nsPager.is('active', currentPage === pager),\n        nsPager.is('disabled', disabled),\n      ]\"\n      class=\"number\"\n      :aria-current=\"currentPage === pager\"\n      tabindex=\"0\"\n    >\n      {{ pager }}\n    </li>\n    <li\n      v-if=\"showNextMore\"\n      :class=\"[\n        'more',\n        'btn-quicknext',\n        nsIcon.b(),\n        nsPager.is('disabled', disabled),\n      ]\"\n      @mouseenter=\"onMouseenter('right')\"\n      @mouseleave=\"quickNextHover = false\"\n    >\n      <d-arrow-right v-if=\"quickNextHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-if=\"pageCount > 1\"\n      :class=\"[\n        nsPager.is('active', currentPage === pageCount),\n        nsPager.is('disabled', disabled),\n      ]\"\n      class=\"number\"\n      :aria-current=\"currentPage === pageCount\"\n      tabindex=\"0\"\n    >\n      {{ pageCount }}\n    </li>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, watchEffect } from 'vue'\nimport { MoreFilled, DArrowLeft, DArrowRight } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  pageCount: {\n    type: Number,\n    required: true,\n  },\n  pagerCount: {\n    type: Number,\n    default: 7,\n  },\n  disabled: Boolean,\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationPager',\n\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled,\n  },\n  props: paginationPagerProps,\n  emits: ['change'],\n\n  setup(props, { emit }) {\n    const nsPager = useNamespace('pager')\n    const nsIcon = useNamespace('icon')\n\n    const showPrevMore = ref(false)\n    const showNextMore = ref(false)\n    const quickPrevHover = ref(false)\n    const quickNextHover = ref(false)\n\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount\n      const halfPagerCount = (pagerCount - 1) / 2\n      const currentPage = Number(props.currentPage)\n      const pageCount = Number(props.pageCount)\n\n      let showPrevMore = false\n      let showNextMore = false\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore = true\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore = true\n        }\n      }\n      const array: number[] = []\n      if (showPrevMore && !showNextMore) {\n        const startPage = pageCount - (pagerCount - 2)\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i)\n        }\n      } else if (!showPrevMore && showNextMore) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i)\n        }\n      } else if (showPrevMore && showNextMore) {\n        const offset = Math.floor(pagerCount / 2) - 1\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i)\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i)\n        }\n      }\n\n      return array\n    })\n\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2\n\n      showPrevMore.value = false\n      showNextMore.value = false\n\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true\n        }\n      }\n    })\n\n    function onMouseenter(direction: 'left' | 'right') {\n      if (props.disabled) return\n      if (direction === 'left') {\n        quickPrevHover.value = true\n      } else {\n        quickNextHover.value = true\n      }\n    }\n\n    function onEnter(e: UIEvent) {\n      const target = e.target as HTMLElement\n      if (\n        target.tagName.toLowerCase() === 'li' &&\n        Array.from(target.classList).includes('number')\n      ) {\n        const newPage = Number(target.textContent)\n        if (newPage !== props.currentPage) {\n          emit('change', newPage)\n        }\n      }\n    }\n\n    function onPagerClick(event: UIEvent) {\n      const target = event.target as HTMLElement\n      if (target.tagName.toLowerCase() === 'ul' || props.disabled) {\n        return\n      }\n\n      let newPage = Number(target.textContent)\n      const pageCount = props.pageCount\n      const currentPage = props.currentPage\n      const pagerCountOffset = props.pagerCount - 2\n      if (target.className.includes('more')) {\n        if (target.className.includes('quickprev')) {\n          newPage = currentPage - pagerCountOffset\n        } else if (target.className.includes('quicknext')) {\n          newPage = currentPage + pagerCountOffset\n        }\n      }\n      if (!Number.isNaN(+newPage)) {\n        if (newPage < 1) {\n          newPage = 1\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount\n        }\n      }\n      if (newPage !== currentPage) {\n        emit('change', newPage)\n      }\n    }\n\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n      nsPager,\n      nsIcon,\n\n      onMouseenter,\n      onPagerClick,\n      onEnter,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}