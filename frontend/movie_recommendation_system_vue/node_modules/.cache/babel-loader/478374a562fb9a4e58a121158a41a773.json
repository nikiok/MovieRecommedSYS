{"ast":null,"code":"import request from \"@/utils/request\";\nconst authRequest = {\n  /**\r\n   * 请求验证码\r\n   * @param mail 接收验证码的邮箱\r\n   * @returns {*}\r\n   */\n  getAuthCode: mail => {\n    return request({\n      url: '/mail/auth/code',\n      method: 'post',\n      headers: {\n        isNeedToken: true\n      },\n      data: {\n        mail\n      }\n    });\n  },\n  /**\r\n   * 在未登录的状态下请求验证码\r\n   * @param username 用户名\r\n   * @param mail 接收邮箱\r\n   * @returns {*}\r\n   */\n  getAuthCodeUnderLogout: (username, mail) => {\n    return request({\n      url: '/mail/auth/code/under/logout',\n      method: 'post',\n      headers: {\n        isNeedToken: false\n      },\n      data: {\n        username,\n        mail\n      }\n    });\n  },\n  /**\r\n   * 校验验证码\r\n   * @param username 用户名\r\n   * @param authCode 待校验的验证码\r\n   * @returns {*}\r\n   */\n  checkAuthCode: (username, authCode) => {\n    return request({\n      url: '/check/auth/code',\n      method: 'post',\n      headers: {\n        isNeedToken: false\n      },\n      data: {\n        username,\n        authCode\n      }\n    });\n  },\n  /**\r\n   * 判断用户名是否存在于数据库中\r\n   * @param username\r\n   * @returns {*}\r\n   */\n  checkUsernameExists: username => {\n    return request({\n      url: '/check/username/exists',\n      method: 'get',\n      headers: {\n        isNeedToken: false\n      },\n      params: {\n        username\n      }\n    });\n  },\n  /**\r\n   * 判断用户名是否存在于数据库中\r\n   * @param username 用户名\r\n   * @param authCode 验证码\r\n   * @returns {*}\r\n   */\n  judgeAndFindPassword: (username, authCode) => {\n    return request({\n      url: '/find/password',\n      method: 'post',\n      headers: {\n        isNeedToken: false\n      },\n      data: {\n        username,\n        authCode\n      }\n    });\n  },\n  /**\r\n   * 在验证码校验成功情况下，更新用户邮箱信息\r\n   * @param authCode 用户输入的校验码\r\n   * @param mail 邮箱号码\r\n   * @returns {*}\r\n   */\n  updateMail: (authCode, mail) => {\n    return request({\n      url: '/user/update/mail',\n      method: 'put',\n      headers: {\n        isNeedToken: true\n      },\n      data: {\n        authCode,\n        mail\n      }\n    });\n  }\n};\nexport default authRequest;","map":{"version":3,"names":["request","authRequest","getAuthCode","mail","url","method","headers","isNeedToken","data","getAuthCodeUnderLogout","username","checkAuthCode","authCode","checkUsernameExists","params","judgeAndFindPassword","updateMail"],"sources":["F:/personalSpace/lx-bishe/movie_recommendation_system_vue/src/api/authentication.js"],"sourcesContent":["import request from \"@/utils/request\";\r\n\r\nconst authRequest = {\r\n    /**\r\n     * 请求验证码\r\n     * @param mail 接收验证码的邮箱\r\n     * @returns {*}\r\n     */\r\n    getAuthCode: (mail) => {\r\n        return request({\r\n            url: '/mail/auth/code',\r\n            method: 'post',\r\n            headers: {\r\n                isNeedToken: true\r\n            },\r\n            data: {\r\n                mail,\r\n            }\r\n        })\r\n    },\r\n    /**\r\n     * 在未登录的状态下请求验证码\r\n     * @param username 用户名\r\n     * @param mail 接收邮箱\r\n     * @returns {*}\r\n     */\r\n    getAuthCodeUnderLogout: (username, mail) => {\r\n        return request({\r\n            url: '/mail/auth/code/under/logout',\r\n            method: 'post',\r\n            headers: {\r\n                isNeedToken: false\r\n            },\r\n            data: {\r\n                username,\r\n                mail\r\n            }\r\n        })\r\n    },\r\n    /**\r\n     * 校验验证码\r\n     * @param username 用户名\r\n     * @param authCode 待校验的验证码\r\n     * @returns {*}\r\n     */\r\n    checkAuthCode: (username, authCode) => {\r\n        return request({\r\n            url: '/check/auth/code',\r\n            method: 'post',\r\n            headers: {\r\n                isNeedToken: false\r\n            },\r\n            data: {\r\n                username,\r\n                authCode\r\n            }\r\n        })\r\n    },\r\n    /**\r\n     * 判断用户名是否存在于数据库中\r\n     * @param username\r\n     * @returns {*}\r\n     */\r\n    checkUsernameExists: (username) => {\r\n        return request({\r\n            url: '/check/username/exists',\r\n            method: 'get',\r\n            headers: {\r\n                isNeedToken: false\r\n            },\r\n            params: {\r\n                username\r\n            }\r\n        })\r\n    },\r\n    /**\r\n     * 判断用户名是否存在于数据库中\r\n     * @param username 用户名\r\n     * @param authCode 验证码\r\n     * @returns {*}\r\n     */\r\n    judgeAndFindPassword: (username, authCode) => {\r\n        return request({\r\n            url: '/find/password',\r\n            method: 'post',\r\n            headers: {\r\n                isNeedToken: false\r\n            },\r\n            data: {\r\n                username,\r\n                authCode\r\n            }\r\n        })\r\n    },\r\n    /**\r\n     * 在验证码校验成功情况下，更新用户邮箱信息\r\n     * @param authCode 用户输入的校验码\r\n     * @param mail 邮箱号码\r\n     * @returns {*}\r\n     */\r\n    updateMail: (authCode, mail) => {\r\n        return request({\r\n            url: '/user/update/mail',\r\n            method: 'put',\r\n            headers: {\r\n                isNeedToken: true,\r\n            },\r\n            data: {\r\n                authCode,\r\n                mail\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport default authRequest;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,MAAMC,WAAW,GAAG;EAChB;AACJ;AACA;AACA;AACA;EACIC,WAAW,EAAGC,IAAI,IAAK;IACnB,OAAOH,OAAO,CAAC;MACXI,GAAG,EAAE,iBAAiB;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDC,IAAI,EAAE;QACFL;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIM,sBAAsB,EAAEA,CAACC,QAAQ,EAAEP,IAAI,KAAK;IACxC,OAAOH,OAAO,CAAC;MACXI,GAAG,EAAE,8BAA8B;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDC,IAAI,EAAE;QACFE,QAAQ;QACRP;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIQ,aAAa,EAAEA,CAACD,QAAQ,EAAEE,QAAQ,KAAK;IACnC,OAAOZ,OAAO,CAAC;MACXI,GAAG,EAAE,kBAAkB;MACvBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDC,IAAI,EAAE;QACFE,QAAQ;QACRE;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIC,mBAAmB,EAAGH,QAAQ,IAAK;IAC/B,OAAOV,OAAO,CAAC;MACXI,GAAG,EAAE,wBAAwB;MAC7BC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDO,MAAM,EAAE;QACJJ;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIK,oBAAoB,EAAEA,CAACL,QAAQ,EAAEE,QAAQ,KAAK;IAC1C,OAAOZ,OAAO,CAAC;MACXI,GAAG,EAAE,gBAAgB;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDC,IAAI,EAAE;QACFE,QAAQ;QACRE;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACII,UAAU,EAAEA,CAACJ,QAAQ,EAAET,IAAI,KAAK;IAC5B,OAAOH,OAAO,CAAC;MACXI,GAAG,EAAE,mBAAmB;MACxBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,WAAW,EAAE;MACjB,CAAC;MACDC,IAAI,EAAE;QACFI,QAAQ;QACRT;MACJ;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}