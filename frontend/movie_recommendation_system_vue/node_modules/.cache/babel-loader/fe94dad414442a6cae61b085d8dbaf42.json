{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, resolveDirective, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, withModifiers, renderSlot, createElementVNode, toDisplayString, createCommentVNode, vShow } from 'vue';\nimport { Close } from '@element-plus/icons-vue';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport '../../dialog/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { drawerProps, drawerEmits } from './drawer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport TrapFocus from '../../../directives/trap-focus/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useDialog } from '../../dialog/src/use-dialog.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElDrawer\",\n  components: {\n    ElOverlay,\n    ElIcon,\n    Close\n  },\n  directives: {\n    TrapFocus\n  },\n  props: drawerProps,\n  emits: drawerEmits,\n  setup(props, ctx) {\n    const drawerRef = ref();\n    const ns = useNamespace(\"drawer\");\n    const isHorizontal = computed(() => props.direction === \"rtl\" || props.direction === \"ltr\");\n    const drawerSize = computed(() => typeof props.size === \"number\" ? `${props.size}px` : props.size);\n    return {\n      ...useDialog(props, ctx, drawerRef),\n      drawerRef,\n      isHorizontal,\n      drawerSize,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-labelledby\", \"aria-label\"];\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = [\"title\"];\nconst _hoisted_4 = [\"aria-label\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_overlay = resolveComponent(\"el-overlay\");\n  const _directive_trap_focus = resolveDirective(\"trap-focus\");\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.appendToBody\n  }, [createVNode(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onAfterEnter: _ctx.afterEnter,\n    onAfterLeave: _ctx.afterLeave,\n    onBeforeLeave: _ctx.beforeLeave\n  }, {\n    default: withCtx(() => [withDirectives(createVNode(_component_el_overlay, {\n      mask: _ctx.modal,\n      \"overlay-class\": _ctx.modalClass,\n      \"z-index\": _ctx.zIndex,\n      onClick: _ctx.onModalClick\n    }, {\n      default: withCtx(() => [withDirectives((openBlock(), createElementBlock(\"div\", {\n        ref: \"drawerRef\",\n        \"aria-modal\": \"true\",\n        \"aria-labelledby\": _ctx.ns.e(\"title\"),\n        \"aria-label\": _ctx.title,\n        class: normalizeClass([_ctx.ns.b(), _ctx.direction, _ctx.visible && \"open\", _ctx.customClass]),\n        style: normalizeStyle(_ctx.isHorizontal ? \"width: \" + _ctx.drawerSize : \"height: \" + _ctx.drawerSize),\n        role: \"dialog\",\n        onClick: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"stop\"]))\n      }, [_ctx.withHeader ? (openBlock(), createElementBlock(\"header\", {\n        key: 0,\n        id: _ctx.ns.e(\"title\"),\n        class: normalizeClass(_ctx.ns.e(\"header\"))\n      }, [renderSlot(_ctx.$slots, \"title\", {}, () => [createElementVNode(\"span\", {\n        role: \"heading\",\n        title: _ctx.title\n      }, toDisplayString(_ctx.title), 9, _hoisted_3)]), _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        \"aria-label\": \"close \" + (_ctx.title || \"drawer\"),\n        class: normalizeClass(_ctx.ns.e(\"close-btn\")),\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClose && _ctx.handleClose(...args))\n      }, [createVNode(_component_el_icon, {\n        class: normalizeClass(_ctx.ns.e(\"close\"))\n      }, {\n        default: withCtx(() => [createVNode(_component_close)]),\n        _: 1\n      }, 8, [\"class\"])], 10, _hoisted_4)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_2)) : createCommentVNode(\"v-if\", true), _ctx.rendered ? (openBlock(), createElementBlock(\"section\", {\n        key: 1,\n        class: normalizeClass(_ctx.ns.e(\"body\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n        key: 2,\n        class: normalizeClass(_ctx.ns.e(\"footer\"))\n      }, [renderSlot(_ctx.$slots, \"footer\")], 2)) : createCommentVNode(\"v-if\", true)], 14, _hoisted_1)), [[_directive_trap_focus]])]),\n      _: 3\n    }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])], 8, [\"disabled\"]);\n}\nvar Drawer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Drawer as default };","map":{"version":3,"mappings":";;;;;;;;;;;;AAqEA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,UAAY;IACVC;IACAC;IACAC;EAAA;EAEFC,UAAY;IACVC;EAAA;EAEFC,KAAO;EACPC,KAAO;EAEPC,MAAMF,OAAOG,GAAK;IAChB,MAAMC,SAAY;IAClB,MAAMC,KAAKC,YAAa;IAExB,MAAMC,eAAeC,QACnB,OAAMR,MAAMS,SAAc,cAAST,MAAMS,SAAc;IAEnD,mBAAaD,QAAS,OAC1B,OAAOR,MAAMU,SAAS,QAAW,MAAGV,KAAM,YAAWA,KAAM;IAGtD;MACF,aAAUA,OAAOG,GAAK;MACzBC;MACAG;MACAI;MACAN;IAAA;EAAA;AAAA;;;;;;;;;;sBAjGJO,WAsDW;IAtDDC,EAAG;IAAQC,UAAQ,CAAGC;EAAA,IAC9BC,WAoDa;IAnDVvB,MAAMsB,QAAGE,CAAC;IACVC,YAAa;IACbC,YAAa;IACbC,aAAc;EAAA;qBAEf,MA6Ca,gBA7CbJ,WA6Ca;MA3CVK,IAAM;MACN,eAAe;MACf,SAAS;MACTC,OAAO;IAAA;uBAER,MAqCM,8BArCNC,kBAqCM;QApCJC,GAAI;QAEJ,YAAW;QACV,mBAAiBT,QAAGU,CAAC;QACrB,YAAY;QACZC,OAAKC,cAAG,UAAGV,CAAK,oBAAWF,gBAAO,MAAY;QAC9Ca,KAAK,iBAAeb,IAAY,4BAAeA,kBAAU,UAAgB;QAG1Ec,IAAK;QACJP,SAAKQ,MAAN,0CAAW;MAAA,IAEGf,gCAAdQ,kBAeS;QAAAQ;QAfkBC,IAAIjB,QAAGU,CAAC;QAAYC,OAAKC,cAAE,SAAGF,CAAC;MAAA,IACxDQ,WAIOlB,0BAJP,MAIO,CAHLmB,kBAEO;QAFDL,IAAK;QAAWM,KAAO;MAAA,mBACxBpB,IAAK,2BAIJA,+BADRQ,kBAQS;QAAAQ;QANN,cAAU,YAAmBhB;QAC7BW,OAAKC,cAAE,SAAGF,CAAC;QACZW,IAAK;QACJd,SAAKQ,MAAE;MAAA,IAERd,WAAmD;QAAzCU,OAAKC,cAAE,SAAGF,CAAC;MAAA;yBAAW,MAAS,CAATT,WAAS;QAAAqB;oIAG7BtB,8BACdQ,kBAEU;QAAAQ;QAFAL,KAAK,iBAAEX,QAAGU,CAAC;MAAA,IACnBQ,UAAQ,mEAGDlB,YAAOuB,uBAAlBf,kBAEM;QAAAQ;QAFqBL,KAAK,iBAAEX,QAAGU,CAAC;MAAA,IACpCQ,UAAsB;;6DAzClB;IAAAI","names":["_sfc_main","defineComponent","name","components","ElOverlay","ElIcon","Close","directives","TrapFocus","props","emits","setup","ctx","drawerRef","ns","useNamespace","isHorizontal","computed","direction","size","drawerSize","_createBlock","to","disabled","_ctx","_createVNode","b","onAfterEnter","onAfterLeave","onBeforeLeave","mask","onClick","_createElementBlock","ref","e","class","_normalizeClass","style","role","_cache","key","id","_renderSlot","_createElementVNode","title","type","_","footer"],"sources":["../../../../../../packages/components/drawer/src/drawer.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\" :disabled=\"!appendToBody\">\n    <transition\n      :name=\"ns.b('fade')\"\n      @after-enter=\"afterEnter\"\n      @after-leave=\"afterLeave\"\n      @before-leave=\"beforeLeave\"\n    >\n      <el-overlay\n        v-show=\"visible\"\n        :mask=\"modal\"\n        :overlay-class=\"modalClass\"\n        :z-index=\"zIndex\"\n        @click=\"onModalClick\"\n      >\n        <div\n          ref=\"drawerRef\"\n          v-trap-focus\n          aria-modal=\"true\"\n          :aria-labelledby=\"ns.e('title')\"\n          :aria-label=\"title\"\n          :class=\"[ns.b(), direction, visible && 'open', customClass]\"\n          :style=\"\n            isHorizontal ? 'width: ' + drawerSize : 'height: ' + drawerSize\n          \"\n          role=\"dialog\"\n          @click.stop\n        >\n          <header v-if=\"withHeader\" :id=\"ns.e('title')\" :class=\"ns.e('header')\">\n            <slot name=\"title\">\n              <span role=\"heading\" :title=\"title\">\n                {{ title }}\n              </span>\n            </slot>\n            <button\n              v-if=\"showClose\"\n              :aria-label=\"'close ' + (title || 'drawer')\"\n              :class=\"ns.e('close-btn')\"\n              type=\"button\"\n              @click=\"handleClose\"\n            >\n              <el-icon :class=\"ns.e('close')\"><close /></el-icon>\n            </button>\n          </header>\n          <template v-if=\"rendered\">\n            <section :class=\"ns.e('body')\">\n              <slot />\n            </section>\n          </template>\n          <div v-if=\"$slots.footer\" :class=\"ns.e('footer')\">\n            <slot name=\"footer\" />\n          </div>\n        </div>\n      </el-overlay>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport { useDialog } from '@element-plus/components/dialog'\nimport ElIcon from '@element-plus/components/icon'\nimport { TrapFocus } from '@element-plus/directives'\nimport { useNamespace } from '@element-plus/hooks'\nimport { drawerProps, drawerEmits } from './drawer'\n\nexport default defineComponent({\n  name: 'ElDrawer',\n  components: {\n    ElOverlay,\n    ElIcon,\n    Close,\n  },\n  directives: {\n    TrapFocus,\n  },\n  props: drawerProps,\n  emits: drawerEmits,\n\n  setup(props, ctx) {\n    const drawerRef = ref<HTMLElement>()\n    const ns = useNamespace('drawer')\n\n    const isHorizontal = computed(\n      () => props.direction === 'rtl' || props.direction === 'ltr'\n    )\n    const drawerSize = computed(() =>\n      typeof props.size === 'number' ? `${props.size}px` : props.size\n    )\n\n    return {\n      ...useDialog(props, ctx, drawerRef),\n      drawerRef,\n      isHorizontal,\n      drawerSize,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}