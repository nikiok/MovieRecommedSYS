{"ast":null,"code":"import MyUpload from 'vue-image-crop-upload';\nimport { UserFilled } from '@element-plus/icons-vue';\nimport { onBeforeUnmount, reactive, toRefs } from \"vue\";\nimport request from \"@/utils/request\";\nimport emitter from \"@/utils/event-bus\";\nimport { ErrorMessage, SuccessMessage } from \"@/utils/my-message\";\nimport { Edit } from \"@element-plus/icons\";\nimport SvgIcon from \"@/components/basic/SvgIcon\";\nexport default {\n  name: 'AvatarEdit',\n  components: {\n    SvgIcon,\n    Edit,\n    MyUpload,\n    UserFilled\n  },\n  props: {\n    size: {\n      type: Number,\n      default: 15\n    },\n    avatar: {\n      type: String,\n      default: ''\n    }\n  },\n  setup() {\n    let data = reactive({\n      show: false,\n      field: {\n        avatar: ''\n      },\n      params: {},\n      headers: {\n        'token': localStorage.getItem('token'),\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      imgDataUrl: ''\n    });\n    let toggleShow = function toggleShow() {\n      data.show = !data.show;\n    };\n\n    /**\r\n     * 图片截取完成事件\r\n     *\r\n     * [param] imgDataUrl\r\n     * [param] field\r\n     */\n    let cropSuccess = function cropSuccess(imgDataUrl, field) {\n      console.log('-------- crop success --------');\n      data.imgDataUrl = imgDataUrl;\n      data.field.avatar = imgDataUrl;\n\n      // 图片截取完成后，将图片信息上传到服务器\n      request({\n        url: '/user/update/avatar',\n        method: 'post',\n        headers: {\n          isNeedToken: true\n        },\n        data: imgDataUrl\n      }).then(res => {\n        if (res.code === 200) {\n          SuccessMessage(res.msg);\n          emitter.emit('handleHeaderAvatarChange', {\n            avatar: data.imgDataUrl\n          });\n        } else {\n          ErrorMessage(res.msg);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    /**\r\n     * 全局事件总线——监听\r\n     * 事件触发时，替换头像路径\r\n     */\n    emitter.on('handleEditAvatarChange', res => {\n      data.imgDataUrl = res.avatar;\n    });\n    onBeforeUnmount(() => {\n      emitter.off('handleEditAvatarChange');\n    });\n    return {\n      ...toRefs(data),\n      toggleShow,\n      cropSuccess\n    };\n  }\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,SAAQC,UAAU,QAAO,yBAAwB;AACjD,SAAQC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,QAAO,KAAK;AACrD,OAAOC,OAAM,MAAO,iBAAiB;AACrC,OAAOC,OAAM,MAAO,mBAAmB;AACvC,SAAQC,YAAY,EAAEC,cAAc,QAAO,oBAAoB;AAC/D,SAAQC,IAAI,QAAO,qBAAqB;AACxC,OAAOC,OAAM,MAAO,4BAA4B;AAEhD,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IAACF,OAAO;IAAED,IAAI;IAAET,QAAQ;IAAEC;EAAU,CAAC;EACjDY,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,KAAKA,GAAG;IACN,IAAIC,IAAG,GAAIlB,QAAQ,CAAC;MAClBmB,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE;QACLL,MAAM,EAAE;MACV,CAAC;MACDM,MAAM,EAAE,CAAC,CAAC;MACVC,OAAO,EAAE;QACP,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACtC,cAAc,EAAE;MAClB,CAAC;MACDC,UAAU,EAAE;IACd,CAAC;IAED,IAAIC,UAAS,GAAI,SAASA,UAAUA,GAAG;MACrCR,IAAI,CAACC,IAAG,GAAI,CAACD,IAAI,CAACC,IAAI;IACxB;;IAEA;;;;;;IAMA,IAAIQ,WAAU,GAAI,SAASA,WAAWA,CAACF,UAAU,EAAEL,KAAK,EAAE;MACxDQ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7CX,IAAI,CAACO,UAAS,GAAIA,UAAS;MAC3BP,IAAI,CAACE,KAAK,CAACL,MAAK,GAAIU,UAAS;;MAE7B;MACAvB,OAAO,CAAC;QACN4B,GAAG,EAAE,qBAAqB;QAC1BC,MAAM,EAAE,MAAM;QACdT,OAAO,EAAE;UACPU,WAAW,EAAE;QACf,CAAC;QACDd,IAAI,EAAEO;MACR,CAAC,CAAC,CAACQ,IAAI,CAACC,GAAE,IAAK;QACb,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;UACpB9B,cAAc,CAAC6B,GAAG,CAACE,GAAG;UAEtBjC,OAAO,CAACkC,IAAI,CAAC,0BAA0B,EAAE;YACvCtB,MAAM,EAAEG,IAAI,CAACO;UACf,CAAC;QACH,OAAO;UACLrB,YAAY,CAAC8B,GAAG,CAACE,GAAG;QACtB;MACF,CAAC,CAAC,CAACE,KAAK,CAACC,GAAE,IAAK;QACdX,OAAO,CAACY,KAAK,CAACD,GAAG;MACnB,CAAC;IACH;;IAEA;;;;IAIApC,OAAO,CAACsC,EAAE,CAAC,wBAAwB,EAAEP,GAAE,IAAK;MAC1ChB,IAAI,CAACO,UAAS,GAAIS,GAAG,CAACnB,MAAK;IAC7B,CAAC;IAEDhB,eAAe,CAAC,MAAM;MACpBI,OAAO,CAACuC,GAAG,CAAC,wBAAwB;IACtC,CAAC;IAED,OAAO;MACL,GAAGzC,MAAM,CAACiB,IAAI,CAAC;MACfQ,UAAU;MACVC;IACF;EACF;AACF","names":["MyUpload","UserFilled","onBeforeUnmount","reactive","toRefs","request","emitter","ErrorMessage","SuccessMessage","Edit","SvgIcon","name","components","props","size","type","Number","default","avatar","String","setup","data","show","field","params","headers","localStorage","getItem","imgDataUrl","toggleShow","cropSuccess","console","log","url","method","isNeedToken","then","res","code","msg","emit","catch","err","error","on","off"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\personal\\edit\\AvatarEditing.vue"],"sourcesContent":["<template>\r\n  <div @click=\"toggleShow\" class=\"avatar-edit-master\">\r\n    <el-avatar class=\"avatar\" shape=\"square\" :style=\"`width: ${size}rem; height: ${size}rem;`\" :src=\"imgDataUrl\"\r\n               alt=\"头像\">\r\n      <UserFilled class=\"inner\"></UserFilled>\r\n    </el-avatar>\r\n\r\n    <div class=\"edit-img\">\r\n      <svg-icon icon-class=\"avatar_edit\" style=\"width: 5rem; height: 5rem;\"></svg-icon>\r\n    </div>\r\n  </div>\r\n\r\n  <my-upload field=\"img\"\r\n             @crop-success=\"cropSuccess\"\r\n             v-model=\"show\"\r\n             :width=\"200\"\r\n             :height=\"200\"\r\n             :no-rotate=\"false\"\r\n             img-format=\"png\">\r\n  </my-upload>\r\n</template>\r\n\r\n<script>\r\nimport MyUpload from 'vue-image-crop-upload';\r\nimport {UserFilled} from '@element-plus/icons-vue'\r\nimport {onBeforeUnmount, reactive, toRefs} from \"vue\";\r\nimport request from \"@/utils/request\";\r\nimport emitter from \"@/utils/event-bus\";\r\nimport {ErrorMessage, SuccessMessage} from \"@/utils/my-message\";\r\nimport {Edit} from \"@element-plus/icons\";\r\nimport SvgIcon from \"@/components/basic/SvgIcon\";\r\n\r\nexport default {\r\n  name: 'AvatarEdit',\r\n  components: {SvgIcon, Edit, MyUpload, UserFilled},\r\n  props: {\r\n    size: {\r\n      type: Number,\r\n      default: 15,\r\n    },\r\n    avatar: {\r\n      type: String,\r\n      default: '',\r\n    }\r\n  },\r\n  setup() {\r\n    let data = reactive({\r\n      show: false,\r\n      field: {\r\n        avatar: ''\r\n      },\r\n      params: {},\r\n      headers: {\r\n        'token': localStorage.getItem('token'),\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n      },\r\n      imgDataUrl: ''\r\n    })\r\n\r\n    let toggleShow = function toggleShow() {\r\n      data.show = !data.show;\r\n    }\r\n\r\n    /**\r\n     * 图片截取完成事件\r\n     *\r\n     * [param] imgDataUrl\r\n     * [param] field\r\n     */\r\n    let cropSuccess = function cropSuccess(imgDataUrl, field) {\r\n      console.log('-------- crop success --------');\r\n      data.imgDataUrl = imgDataUrl\r\n      data.field.avatar = imgDataUrl\r\n\r\n      // 图片截取完成后，将图片信息上传到服务器\r\n      request({\r\n        url: '/user/update/avatar',\r\n        method: 'post',\r\n        headers: {\r\n          isNeedToken: true,\r\n        },\r\n        data: imgDataUrl\r\n      }).then(res => {\r\n        if (res.code === 200) {\r\n          SuccessMessage(res.msg)\r\n\r\n          emitter.emit('handleHeaderAvatarChange', {\r\n            avatar: data.imgDataUrl\r\n          })\r\n        } else {\r\n          ErrorMessage(res.msg)\r\n        }\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    }\r\n\r\n    /**\r\n     * 全局事件总线——监听\r\n     * 事件触发时，替换头像路径\r\n     */\r\n    emitter.on('handleEditAvatarChange', res => {\r\n      data.imgDataUrl = res.avatar\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      emitter.off('handleEditAvatarChange')\r\n    })\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      toggleShow,\r\n      cropSuccess,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.avatar-edit-master {\r\n  position: relative;\r\n  text-align: center;\r\n\r\n  .avatar {\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .edit-img {\r\n    display: none;\r\n    z-index: 100;\r\n    position: absolute;\r\n    left: 3.55rem;\r\n    top: 3.55rem;\r\n\r\n    img {\r\n      width: 5rem;\r\n    }\r\n  }\r\n}\r\n\r\n.avatar-edit-master:hover {\r\n  filter: brightness(70%);\r\n\r\n  .edit-img {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.avatar .inner {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n\r\n@media screen and (max-width: 657px) {\r\n  /deep/ .vicp-wrap {\r\n    width: 290px;\r\n  }\r\n\r\n  /deep/ .vicp-operate {\r\n    position: absolute;\r\n    left: 25px;\r\n    bottom: 20px;\r\n  }\r\n\r\n  /deep/ .vicp-preview-item {\r\n    display: none;\r\n  }\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}