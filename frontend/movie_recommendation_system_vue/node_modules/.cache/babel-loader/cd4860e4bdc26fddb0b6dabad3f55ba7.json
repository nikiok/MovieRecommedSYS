{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, computed, openBlock, createElementBlock, createElementVNode, normalizeStyle, Fragment, createTextVNode, toDisplayString, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport { menuItemGroupProps } from './menu-item-group.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"ElMenuItemGroup\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: menuItemGroupProps,\n  setup() {\n    const instance = getCurrentInstance();\n    const menu = inject(\"rootMenu\");\n    if (!menu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20;\n      let padding = 20;\n      let parent = instance.parent;\n      while (parent && parent.type.name !== \"ElMenu\") {\n        if (parent.type.name === \"ElSubMenu\") {\n          padding += 20;\n        }\n        parent = parent.parent;\n      }\n      return padding;\n    });\n    return {\n      levelPadding\n    };\n  }\n});\nconst _hoisted_1 = {\n  class: \"el-menu-item-group\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"li\", _hoisted_1, [createElementVNode(\"div\", {\n    class: \"el-menu-item-group__title\",\n    style: normalizeStyle({\n      paddingLeft: `${_ctx.levelPadding}px`\n    })\n  }, [!_ctx.$slots.title ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString(_ctx.title), 1)], 2112)) : renderSlot(_ctx.$slots, \"title\", {\n    key: 1\n  })], 4), createElementVNode(\"ul\", null, [renderSlot(_ctx.$slots, \"default\")])]);\n}\nvar MenuItemGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { MenuItemGroup as default };","map":{"version":3,"mappings":";;;;;AAsBA,MAAMA,cAAiB;AAEvB,MAAKC,YAAaC,eAAa;EAC7BC,IAAM;EAENC,KAAO;EAEPC,KAAQA;IACN,MAAMC,QAAW;IACjB,MAAMC,OAAOC,MAAqB;IAClC,IAAI,CAACD,MAAME,WAAWT,cAAgB;IAEhC,qBAAeU,SAAS,MAAM;MAClC,IAAIH,KAAKH,KAAM,WAAiB;MAChC,IAAIO,OAAU;MACd,IAAIC,SAASN,QAAS;MACtB,OAAOM,MAAU,WAAOC,IAAK,UAAS,QAAU;QAC1C,WAAOA,IAAK,UAAS,WAAa;UACzBF;QAAA;QAEbC,SAASA,MAAO;MAAA;MAEX;IAAA;IAGF;MACLE;IAAA;EAAA;AAAA;;EA/CAC,KAAM;AAAA;;EAAV,uCAWK,MAXLC,UAWK,GAVHC,kBAMM;IALJF,KAAM;IACLG,OAAKC,cAAoB;MAAAC;IAAA;EAAA,IAET,aAAOC,sBAAxBC,kBAAqD;IAAAC;EAAA,oCAAnBC,IAAK,uBACvCC,UAA4B;IAAAF;EAAA,SAE9BN,kBAEK,cADHQ,UAAQ;AAAA","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","setup","instance","menu","inject","throwError","computed","padding","parent","type","levelPadding","class","_hoisted_1","_createElementVNode","style","_normalizeStyle","paddingLeft","title","_createElementBlock","key","_ctx","_renderSlot"],"sources":["../../../../../../packages/components/menu/src/menu-item-group.vue"],"sourcesContent":["<template>\n  <li class=\"el-menu-item-group\">\n    <div\n      class=\"el-menu-item-group__title\"\n      :style=\"{ paddingLeft: `${levelPadding}px` }\"\n    >\n      <template v-if=\"!$slots.title\">{{ title }}</template>\n      <slot v-else name=\"title\" />\n    </div>\n    <ul>\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance, inject } from 'vue'\nimport { throwError } from '@element-plus/utils'\nimport { menuItemGroupProps } from './menu-item-group'\n\nimport type { MenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItemGroup'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance()!\n    const menu = inject<MenuProvider>('rootMenu')\n    if (!menu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20\n      let padding = 20\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'ElMenu') {\n        if (parent.type.name === 'ElSubMenu') {\n          padding += 20\n        }\n        parent = parent.parent\n      }\n      return padding\n    })\n\n    return {\n      levelPadding,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}