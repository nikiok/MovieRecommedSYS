{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport emitter from \"@/utils/event-bus\";\nimport userRequest from \"@/api/user\";\nimport { ErrorMessage, SuccessMessage } from \"@/utils/my-message\";\nexport default {\n  name: \"LikeEditing\",\n  props: {\n    opt: {\n      type: Number,\n      default: 1\n    },\n    likes: {\n      type: Array,\n      default: []\n    }\n  },\n  setup(props) {\n    let editDialogTitle = ref('');\n    if (props.opt === 1) {\n      editDialogTitle.value = '类型喜好编辑';\n    } else {\n      editDialogTitle.value = '地区喜好编辑';\n    }\n    const types = ['剧情', '喜剧', '动作', '爱情', '科幻', '动画', '悬疑', '惊悚', '恐怖', '犯罪', '音乐', '歌舞', '传记', '历史', '战争', '西部', '奇幻', '冒险', '灾难', '武侠', '其他'];\n    const regions = ['中国大陆', '美国', '中国香港', '中国台湾', '日本', '韩国', '英国', '法国', '德国', '意大利', '西班牙', '印度', '泰国', '俄罗斯', '伊朗', '加拿大', '澳大利亚', '爱尔兰', '瑞典', '巴西', '丹麦'];\n    // 生成电影类型map，键值对（类型名称 => 类型编号）\n    const generateTypeEnum = () => {\n      let typeEnum = {};\n      types.forEach((type, index) => {\n        typeEnum[type] = index;\n      });\n      return typeEnum;\n    };\n    const typeEnum = generateTypeEnum();\n    // 生成电影地区map，键值对（地区名称 => 地区编号）\n    const generateRegionEnum = () => {\n      let regionEnum = {};\n      regions.forEach((region, index) => {\n        regionEnum[region] = index;\n      });\n      return regionEnum;\n    };\n    const regionEnum = generateRegionEnum();\n\n    // 初始化Transfer 的数据源\n    const generateData = _ => {\n      const data = [];\n      let likes = [];\n      if (props.opt === 1) {\n        likes = types;\n      } else {\n        likes = regions;\n      }\n      likes.forEach((like, index) => {\n        data.push({\n          label: like,\n          key: index\n        });\n      });\n      return data;\n    };\n    // Transfer 的数据源\n    const data = ref(generateData());\n    // Transfer 的已选项\n    const value = ref([]);\n    let isShow = ref(false);\n    const handleLikeEditShow = () => {\n      isShow.value = true;\n    };\n    watch(isShow, (newValue, oldValue) => {\n      // 显示编辑窗口时，将用户已选标签加入“以选项”\n      if (newValue) {\n        value.value = [];\n        if (props.opt === 1) {\n          for (let type of props.likes) {\n            value.value.push(typeEnum[type]);\n          }\n        } else {\n          for (let region of props.likes) {\n            value.value.push(regionEnum[region]);\n          }\n        }\n      }\n    });\n\n    // 提交更新用户喜好\n    let handleUpdateLike = () => {\n      if (props.opt === 1) {\n        userRequest.updateUserTypeLike(value.value).then(res => {\n          if (res.code === 200) {\n            SuccessMessage(res.msg);\n            // 更新成功，编辑页面关闭\n            isShow.value = false;\n            emitter.emit(\"handleLikeEditingUpdate\");\n          } else {\n            ErrorMessage(res.msg);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        userRequest.updateUserRegionLike(value.value).then(res => {\n          if (res.code === 200) {\n            SuccessMessage(res.msg);\n            // 更新成功，编辑页面关闭\n            isShow.value = false;\n            emitter.emit(\"handleLikeEditingUpdate\");\n          } else {\n            ErrorMessage(res.msg);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n    return {\n      props,\n      editDialogTitle,\n      isShow,\n      data,\n      value,\n      handleLikeEditShow,\n      handleUpdateLike\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","watch","emitter","userRequest","ErrorMessage","SuccessMessage","name","props","opt","type","Number","default","likes","Array","setup","editDialogTitle","value","types","regions","generateTypeEnum","typeEnum","forEach","index","generateRegionEnum","regionEnum","region","generateData","_","data","like","push","label","key","isShow","handleLikeEditShow","newValue","oldValue","handleUpdateLike","updateUserTypeLike","then","res","code","msg","emit","catch","err","console","log","updateUserRegionLike"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\personal\\edit\\LikeEditing.vue"],"sourcesContent":["<template>\r\n  <span @click=\"handleLikeEditShow\" class=\"edit-btn\">\r\n    <el-icon><edit/></el-icon>修改\r\n  </span>\r\n\r\n  <el-dialog\r\n      v-model=\"isShow\"\r\n      :title=\"editDialogTitle\"\r\n      width=\"602px\"\r\n      draggable\r\n  >\r\n    <el-transfer\r\n        :titles=\"['待选项', '已选项']\"\r\n        filterable\r\n        filter-placeholder=\"请输入名称\"\r\n        v-model=\"value\"\r\n        :data=\"data\"\r\n        target-order=\"push\"\r\n    >\r\n    </el-transfer>\r\n\r\n    <div style=\"color: red; margin-top: 1rem;\">说明：最多选择5项。若多选，则只保留“已选项”中的前5项！</div>\r\n\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"isShow = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleUpdateLike\">\r\n          确认\r\n        </el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport {ref, watch} from \"vue\";\r\nimport emitter from \"@/utils/event-bus\";\r\nimport userRequest from \"@/api/user\";\r\nimport {ErrorMessage, SuccessMessage} from \"@/utils/my-message\";\r\n\r\nexport default {\r\n  name: \"LikeEditing\",\r\n  props: {\r\n    opt: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    likes: {\r\n      type: Array,\r\n      default: [],\r\n    }\r\n  },\r\n  setup(props) {\r\n    let editDialogTitle = ref('')\r\n    if (props.opt === 1) {\r\n      editDialogTitle.value = '类型喜好编辑'\r\n    } else {\r\n      editDialogTitle.value = '地区喜好编辑'\r\n    }\r\n\r\n    const types = [\r\n      '剧情', '喜剧', '动作', '爱情', '科幻',\r\n      '动画', '悬疑', '惊悚', '恐怖', '犯罪',\r\n      '音乐', '歌舞', '传记', '历史', '战争',\r\n      '西部', '奇幻', '冒险', '灾难', '武侠',\r\n      '其他'\r\n    ]\r\n    const regions = [\r\n      '中国大陆', '美国', '中国香港', '中国台湾',\r\n      '日本', '韩国', '英国', '法国', '德国', '意大利',\r\n      '西班牙', '印度', '泰国', '俄罗斯', '伊朗', '加拿大',\r\n      '澳大利亚', '爱尔兰', '瑞典', '巴西', '丹麦'\r\n    ]\r\n    // 生成电影类型map，键值对（类型名称 => 类型编号）\r\n    const generateTypeEnum = () => {\r\n      let typeEnum = {}\r\n      types.forEach((type, index) => {\r\n        typeEnum[type] = index\r\n      })\r\n      return typeEnum\r\n    }\r\n    const typeEnum = generateTypeEnum()\r\n    // 生成电影地区map，键值对（地区名称 => 地区编号）\r\n    const generateRegionEnum = () => {\r\n      let regionEnum = {}\r\n      regions.forEach((region, index) => {\r\n        regionEnum[region] = index\r\n      })\r\n      return regionEnum\r\n    }\r\n    const regionEnum = generateRegionEnum()\r\n\r\n    // 初始化Transfer 的数据源\r\n    const generateData = _ => {\r\n      const data = [];\r\n      let likes = []\r\n      if (props.opt === 1) {\r\n        likes = types\r\n      } else {\r\n        likes = regions\r\n      }\r\n      likes.forEach((like, index) => {\r\n        data.push({\r\n          label: like,\r\n          key: index,\r\n        });\r\n      });\r\n      return data;\r\n    };\r\n    // Transfer 的数据源\r\n    const data = ref(generateData())\r\n    // Transfer 的已选项\r\n    const value = ref([])\r\n\r\n    let isShow = ref(false)\r\n    const handleLikeEditShow = () => {\r\n      isShow.value = true\r\n    }\r\n\r\n    watch(isShow, (newValue, oldValue) => {\r\n      // 显示编辑窗口时，将用户已选标签加入“以选项”\r\n      if (newValue) {\r\n        value.value = []\r\n        if (props.opt === 1) {\r\n          for (let type of props.likes) {\r\n            value.value.push(typeEnum[type])\r\n          }\r\n        } else {\r\n          for (let region of props.likes) {\r\n            value.value.push(regionEnum[region])\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // 提交更新用户喜好\r\n    let handleUpdateLike = () => {\r\n      if (props.opt === 1) {\r\n        userRequest.updateUserTypeLike(value.value).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n            // 更新成功，编辑页面关闭\r\n            isShow.value = false\r\n            emitter.emit(\"handleLikeEditingUpdate\")\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      } else {\r\n        userRequest.updateUserRegionLike(value.value).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n            // 更新成功，编辑页面关闭\r\n            isShow.value = false\r\n            emitter.emit(\"handleLikeEditingUpdate\")\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    }\r\n\r\n    return {\r\n      props,\r\n      editDialogTitle,\r\n      isShow,\r\n      data,\r\n      value,\r\n      handleLikeEditShow,\r\n      handleUpdateLike\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.edit-btn {\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(23, 81, 153);\r\n  white-space: nowrap;\r\n  cursor: pointer; // 鼠标放上去显示手势\r\n}\r\n\r\n///deep/ .el-transfer-panel {\r\n//  max-width: 130px;\r\n//}\r\n///deep/ .el-transfer__buttons {\r\n//  padding: 0;\r\n//  max-width: 60px;\r\n//}\r\n</style>"]},"metadata":{},"sourceType":"module"}