{"ast":null,"code":"import { defineComponent, ref, resolveComponent, openBlock, createElementBlock, Fragment, createVNode } from 'vue';\nimport Thumb from './thumb2.mjs';\nimport { barProps } from './bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nconst _sfc_main = defineComponent({\n  components: {\n    Thumb\n  },\n  props: barProps,\n  setup(props) {\n    const moveX = ref(0);\n    const moveY = ref(0);\n    const GAP = 4;\n    const handleScroll = wrap => {\n      if (wrap) {\n        const offsetHeight = wrap.offsetHeight - GAP;\n        const offsetWidth = wrap.offsetWidth - GAP;\n        moveY.value = wrap.scrollTop * 100 / offsetHeight * props.ratioY;\n        moveX.value = wrap.scrollLeft * 100 / offsetWidth * props.ratioX;\n      }\n    };\n    return {\n      handleScroll,\n      moveX,\n      moveY\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_thumb = resolveComponent(\"thumb\");\n  return openBlock(), createElementBlock(Fragment, null, [createVNode(_component_thumb, {\n    move: _ctx.moveX,\n    ratio: _ctx.ratioX,\n    size: _ctx.width,\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]), createVNode(_component_thumb, {\n    move: _ctx.moveY,\n    ratio: _ctx.ratioY,\n    size: _ctx.height,\n    vertical: \"\",\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])], 64);\n}\nvar Bar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Bar as default };","map":{"version":3,"mappings":";;;;AAeA,MAAKA,YAAaC,eAAa;EAC7BC,UAAY;IACVC;EAAA;EAEFC,KAAO;EACPC,MAAMD,KAAO;IACX,MAAME,QAAQC,GAAI;IAClB,MAAMC,QAAQD,GAAI;IAClB,MAAME,GAAM;IAEN,qBAAgBC,IAAyB;MAC7C,IAAIA,IAAM;QACF,qBAAeA,KAAKC,YAAe;QACnC,oBAAcD,KAAKE,WAAc;QAEvCJ,MAAMK,KAAU,QAAKC,SAAY,SAAOH,eAAgBP,KAAM;QAC9DE,MAAMO,KAAU,QAAKE,UAAa,SAAOH,cAAeR,KAAM;MAAA;IAAA;IAI3D;MACLY;MACAV;MACAE;IAAA;EAAA;AAAA;;;0DArCJS,WAAsE;IAA9DC,IAAM;IAAQC,KAAO;IAASC,IAAM;IAAQC,MAAQ;EAAA,kDAC5DJ,WAME;IALCC,IAAM;IACNC,KAAO;IACPC,IAAM;IACPE;IACCD,MAAQ;EAAA","names":["_sfc_main","defineComponent","components","Thumb","props","setup","moveX","ref","moveY","GAP","wrap","offsetHeight","offsetWidth","value","scrollTop","scrollLeft","handleScroll","_createVNode","move","ratio","size","always","vertical"],"sources":["../../../../../../packages/components/scrollbar/src/bar.vue"],"sourcesContent":["<template>\n  <thumb :move=\"moveX\" :ratio=\"ratioX\" :size=\"width\" :always=\"always\" />\n  <thumb\n    :move=\"moveY\"\n    :ratio=\"ratioY\"\n    :size=\"height\"\n    vertical\n    :always=\"always\"\n  />\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport Thumb from './thumb.vue'\nimport { barProps } from './bar'\n\nexport default defineComponent({\n  components: {\n    Thumb,\n  },\n  props: barProps,\n  setup(props) {\n    const moveX = ref(0)\n    const moveY = ref(0)\n    const GAP = 4 // top 2 + bottom 2 of bar instance\n\n    const handleScroll = (wrap: HTMLDivElement) => {\n      if (wrap) {\n        const offsetHeight = wrap.offsetHeight - GAP\n        const offsetWidth = wrap.offsetWidth - GAP\n\n        moveY.value = ((wrap.scrollTop * 100) / offsetHeight) * props.ratioY\n        moveX.value = ((wrap.scrollLeft * 100) / offsetWidth) * props.ratioX\n      }\n    }\n\n    return {\n      handleScroll,\n      moveX,\n      moveY,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}