{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const ns = useNamespace(\"tree\");\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node.label]);\n    };\n  }\n});\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;AAOA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;MACJC,IAAM;MACNC,QAAU;IAAA;IAEZC,aAAe;EAAA;EAEjBC,MAAML,KAAO;IACX,MAAMM,KAAKC,YAAa;IACxB,MAAMC,eAAeC,MAAkC;IACvD,MAAMC,OAAOD,MAAqB;IAClC,OAAO,MAAM;MACX,MAAMR,OAAOD,KAAM;MACb;QAAEW;QAAMC;MAAU;MACxB,OAAOZ,KAAM,iBACTA,KAAM,eAAca,CAAG;QAAEC,KAAO;QAAcb,IAAM;QAAAU;QAAMC;MAC1D,UAAKG,IAAIC,KAAM,WACfN,IAAK,KAAIM,KAAM,SAAQ;QAAEf;QAAMU;MAAA,KAC/BE,CAAE,SAAQ;QAAEI,OAAOX,EAAG,IAAG,MAAQ;MAAA,GAAY,CAACL,IAAK;IAAA;EAAA;AAAA","names":["_sfc_main","defineComponent","name","props","node","type","required","renderContent","setup","ns","useNamespace","nodeInstance","inject","tree","data","store","h","_self","ctx","slots","class"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { h, defineComponent, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}