{"ast":null,"code":"import { defineComponent, ref, watch, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, Fragment, renderList, createBlock } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { ElSelect, ElOption } from '../../../select/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { usePagination } from '../usePagination.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { buildProps, definePropType } from '../../../../utils/vue/props.mjs';\nimport { mutable } from '../../../../utils/typescript.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nconst paginationSizesProps = buildProps({\n  pageSize: {\n    type: Number,\n    required: true\n  },\n  pageSizes: {\n    type: definePropType(Array),\n    default: () => mutable([10, 20, 30, 40, 50, 100])\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  disabled: Boolean,\n  size: {\n    type: String,\n    default: \"default\"\n  }\n});\nconst _sfc_main = defineComponent({\n  name: \"ElPaginationSizes\",\n  components: {\n    ElSelect,\n    ElOption\n  },\n  props: paginationSizesProps,\n  emits: [\"page-size-change\"],\n  setup(props, {\n    emit\n  }) {\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"pagination\");\n    const pagination = usePagination();\n    const innerPageSize = ref(props.pageSize);\n    watch(() => props.pageSizes, (newVal, oldVal) => {\n      if (isEqual(newVal, oldVal)) return;\n      if (Array.isArray(newVal)) {\n        const pageSize = newVal.includes(props.pageSize) ? props.pageSize : props.pageSizes[0];\n        emit(\"page-size-change\", pageSize);\n      }\n    });\n    watch(() => props.pageSize, newVal => {\n      innerPageSize.value = newVal;\n    });\n    const innerPagesizes = computed(() => props.pageSizes);\n    function handleChange(val) {\n      var _a;\n      if (val !== innerPageSize.value) {\n        innerPageSize.value = val;\n        (_a = pagination.handleSizeChange) == null ? void 0 : _a.call(pagination, Number(val));\n      }\n    }\n    return {\n      ns,\n      innerPagesizes,\n      innerPageSize,\n      t,\n      handleChange\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = resolveComponent(\"el-option\");\n  const _component_el_select = resolveComponent(\"el-select\");\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"sizes\"))\n  }, [createVNode(_component_el_select, {\n    \"model-value\": _ctx.innerPageSize,\n    disabled: _ctx.disabled,\n    \"popper-class\": _ctx.popperClass,\n    size: _ctx.size,\n    onChange: _ctx.handleChange\n  }, {\n    default: withCtx(() => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.innerPagesizes, item => {\n      return openBlock(), createBlock(_component_el_option, {\n        key: item,\n        value: item,\n        label: item + _ctx.t(\"el.pagination.pagesize\")\n      }, null, 8, [\"value\", \"label\"]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"model-value\", \"disabled\", \"popper-class\", \"size\", \"onChange\"])], 2);\n}\nvar Sizes = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Sizes as default };","map":{"version":3,"mappings":";;;;;;;;;;;AA6BA,MAAMA,uBAAuBC,UAAW;EACtCC,QAAU;IACRC,IAAM;IACNC,QAAU;EAAA;EAEZC,SAAW;IACTF,MAAMG,cAAyB;IAC/BC,SAASA,MAAMC,OAAQ,EAAC,IAAI,EAAI,MAAI,IAAI,EAAI;EAAA;EAE9CC,WAAa;IACXN,IAAM;IACNI,OAAS;EAAA;EAEXG,QAAU;EACVC,IAAM;IACJR,IAAM;IACNI,OAAS;EAAA;AAAA;AAIb,MAAKK,YAAaC,eAAa;EAC7BC,IAAM;EAENC,UAAY;IACVC;IACAC;EAAA;EAGFC,KAAO;EACPC,OAAO,CAAC;EAERC,MAAMF,KAAO;IAAEG;EAAQ;IACrB,MAAM;MAAEC;IAAM;IACd,MAAMC,KAAKC,YAAa;IACxB,MAAMC,UAAa;IACb,sBAAgBC,IAAsBR,KAAM;IAElDS,MACE,MAAMT,MAAMb,SACZ,GAACuB,QAAQC,MAAW;MAClB,IAAIC,QAAQF,MAAQ,WAAS;MACzB,UAAMG,QAAQH,MAAS;QACnB,iBAAWA,OAAOI,QAAS,OAAM9B,YACnCgB,KAAM,YACNA,MAAMb,SAAU;QACpBgB,KAAK,kBAAoB;MAAA;IAAA;IAK/BM,MACE,MAAMT,MAAMhB,QACZ,EAAC0B,MAAW;MACVK,cAAcC,KAAQ;IAAA;IAIpB,uBAAiBC,QAAS,OAAMjB,KAAM;IAE5C,sBAAsBkB,GAAa;MAC7B;MACF,yBAAsB;QACtBH;QAAqC;MAAA;IAIzC;IACE;MACAV;MACAc;MAEAJ;MACAX;MAAAgB;IAAA;EAAA;;;;4BArFG;EAfA,gBAAO,sBAAI;IAAAC;KAcJ,YAZI;IACb,aAAU;IACV7B,QAAc;IACd,cAAM;IACNC,IAAQ;IAAA6B;;IAGuBjC,uBAI9B;MAAA,OAHMkC;QACLC,GAAO;QACPR,OAAOS;QAAQC","names":["paginationSizesProps","buildProps","pageSize","type","required","pageSizes","definePropType","default","mutable","popperClass","disabled","size","_sfc_main","defineComponent","name","components","ElSelect","ElOption","props","emits","setup","emit","t","ns","useNamespace","pagination","ref","watch","newVal","oldVal","isEqual","isArray","includes","innerPageSize","value","computed","val","innerPagesizes","handleChange","class","onChange","_openBlock","key","item","label"],"sources":["../../../../../../../packages/components/pagination/src/components/sizes.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('sizes')\">\n    <el-select\n      :model-value=\"innerPageSize\"\n      :disabled=\"disabled\"\n      :popper-class=\"popperClass\"\n      :size=\"size\"\n      @change=\"handleChange\"\n    >\n      <el-option\n        v-for=\"item in innerPagesizes\"\n        :key=\"item\"\n        :value=\"item\"\n        :label=\"item + t('el.pagination.pagesize')\"\n      />\n    </el-select>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, computed, ref } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { ElSelect, ElOption } from '@element-plus/components/select'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { usePagination } from '../usePagination'\n\nimport type { Nullable } from '@element-plus/utils'\n\nconst paginationSizesProps = buildProps({\n  pageSize: {\n    type: Number,\n    required: true,\n  },\n  pageSizes: {\n    type: definePropType<number[]>(Array),\n    default: () => mutable([10, 20, 30, 40, 50, 100] as const),\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  disabled: Boolean,\n  size: {\n    type: String,\n    default: 'default',\n  },\n} as const)\n\nexport default defineComponent({\n  name: 'ElPaginationSizes',\n\n  components: {\n    ElSelect,\n    ElOption,\n  },\n\n  props: paginationSizesProps,\n  emits: ['page-size-change'],\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const ns = useNamespace('pagination')\n    const pagination = usePagination()\n    const innerPageSize = ref<Nullable<number>>(props.pageSize)\n\n    watch(\n      () => props.pageSizes,\n      (newVal, oldVal) => {\n        if (isEqual(newVal, oldVal)) return\n        if (Array.isArray(newVal)) {\n          const pageSize = newVal.includes(props.pageSize)\n            ? props.pageSize\n            : props.pageSizes[0]\n          emit('page-size-change', pageSize)\n        }\n      }\n    )\n\n    watch(\n      () => props.pageSize,\n      (newVal) => {\n        innerPageSize.value = newVal\n      }\n    )\n\n    const innerPagesizes = computed(() => props.pageSizes)\n\n    function handleChange(val: number) {\n      if (val !== innerPageSize.value) {\n        innerPageSize.value = val\n        pagination.handleSizeChange?.(Number(val))\n      }\n    }\n\n    return {\n      ns,\n      innerPagesizes,\n      innerPageSize,\n\n      t,\n      handleChange,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}