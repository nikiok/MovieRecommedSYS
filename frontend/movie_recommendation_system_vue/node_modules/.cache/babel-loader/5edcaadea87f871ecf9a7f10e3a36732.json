{"ast":null,"code":"import normalizeWheel from 'normalize-wheel-es';\nimport '../../utils/index.mjs';\nimport { isFirefox } from '../../utils/browser.mjs';\nconst mousewheel = function (element, callback) {\n  if (element && element.addEventListener) {\n    const fn = function (event) {\n      const normalized = normalizeWheel(event);\n      callback && Reflect.apply(callback, this, [event, normalized]);\n    };\n    if (isFirefox()) {\n      element.addEventListener(\"DOMMouseScroll\", fn);\n    } else {\n      element.onmousewheel = fn;\n    }\n  }\n};\nconst Mousewheel = {\n  beforeMount(el, binding) {\n    mousewheel(el, binding.value);\n  }\n};\nexport { Mousewheel as default };","map":{"version":3,"mappings":";;;AAEA,MAAMA,UAAU,GAAG,UAASC,OAAO,EAAEC,QAAQ,EAAE;EAC7C,IAAID,OAAO,IAAIA,OAAO,CAACE,gBAAgB,EAAE;IACvC,MAAMC,EAAE,GAAG,UAASC,KAAK,EAAE;MACzB,MAAMC,UAAU,GAAGC,cAAc,CAACF,KAAK,CAAC;MACxCH,QAAQ,IAAIM,OAAO,CAACC,KAAK,CAACP,QAAQ,EAAE,IAAI,EAAE,CAACG,KAAK,EAAEC,UAAU,CAAC,CAAC;IACpE,CAAK;IACD,IAAII,SAAS,EAAE,EAAE;MACfT,OAAO,CAACE,gBAAgB,CAAC,gBAAgB,EAAEC,EAAE,CAAC;IACpD,CAAK,MAAM;MACLH,OAAO,CAACU,YAAY,GAAGP,EAAE;IAC/B;EACA;AACA,CAAC;AACI,MAACQ,UAAU,GAAG;EACjBC,WAAWA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACvBf,UAAU,CAACc,EAAE,EAAEC,OAAO,CAACC,KAAK,CAAC;EACjC;AACA","names":["mousewheel","element","callback","addEventListener","fn","event","normalized","normalizeWheel","Reflect","apply","isFirefox","onmousewheel","Mousewheel","beforeMount","el","binding","value"],"sources":["../../../../../packages/directives/mousewheel/index.ts"],"sourcesContent":["import normalizeWheel from 'normalize-wheel-es'\nimport { isFirefox } from '@element-plus/utils'\nimport type { ObjectDirective, DirectiveBinding } from 'vue'\n\nconst mousewheel = function (element, callback) {\n  if (element && element.addEventListener) {\n    const fn = function (this: any, event) {\n      const normalized = normalizeWheel(event)\n      callback && Reflect.apply(callback, this, [event, normalized])\n    }\n    if (isFirefox()) {\n      element.addEventListener('DOMMouseScroll', fn)\n    } else {\n      element.onmousewheel = fn\n    }\n  }\n}\n\nconst Mousewheel: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    mousewheel(el, binding.value)\n  },\n}\n\nexport default Mousewheel\n"]},"metadata":{},"sourceType":"module"}