{"ast":null,"code":"import { onBeforeMount, onBeforeUnmount, reactive, ref, watch } from \"vue\";\nimport { useRouter } from 'vue-router';\nimport { More, MoreFilled, Menu as MenuIcon } from \"@element-plus/icons\";\nimport userRequest from \"@/api/user\";\nimport { ErrorMessage, SuccessMessage } from \"@/utils/my-message\";\nimport emitter from \"@/utils/event-bus\";\nimport movieRequest from \"@/api/movie\";\nimport { Search } from \"@element-plus/icons-vue\";\nexport default {\n  name: \"MovieHeader\",\n  components: {\n    Search,\n    MoreFilled,\n    More,\n    MenuIcon\n  },\n  setup() {\n    const router = useRouter();\n    let isLogin = ref(false);\n    let isShowMenu = ref(false);\n    let mainMenuRef = ref(null);\n    let moreRef = ref(null);\n    let moreFilledRef = ref(null);\n    let iconColor = ref('white');\n    let user = reactive({\n      id: 0,\n      nickname: '',\n      avatar: '',\n      sex: ''\n    });\n\n    // 展示名为name的页面\n    let show = name => {\n      router.push({\n        name: name\n      });\n      isShowMenu.value = false;\n    };\n\n    // 控制主菜单显示\n    let handleMainMenu = () => {\n      isShowMenu.value = !isShowMenu.value;\n    };\n    // 监测主菜单显示变量，根据展示与否改变图标颜色\n    watch(isShowMenu, (newValue, oldValue) => {\n      if (newValue === true) {\n        iconColor.value = '#a99f9f';\n      } else {\n        iconColor.value = 'white';\n      }\n    });\n\n    // 跳转到登录界面\n    let handleLogin = () => {\n      router.push('/login');\n    };\n\n    // 登出\n    let handleLogout = () => {\n      userRequest.logout().then(res => {\n        if (res.code === 200) {\n          SuccessMessage(res.msg);\n          // 用户注销时将缓存中的token和userInfo删除\n          localStorage.removeItem('token');\n          localStorage.removeItem('userInfo');\n          isLogin.value = false;\n          router.replace({\n            name: 'home'\n          });\n        } else {\n          ErrorMessage(res.msg);\n        }\n      }).catch(err => {\n        ErrorMessage(err);\n      });\n    };\n\n    /**\r\n     * 每次初始化界面是判断token是否过期，如果没有过期，则显示登录基本信息\r\n     */\n    userRequest.getUserInfo().then(res => {\n      if (res.code === 200) {\n        isLogin.value = true;\n        let userInfo = res.data;\n        user.nickname = userInfo.nickname;\n        user.id = userInfo.id;\n        user.avatar = userInfo.avatar;\n        user.sex = userInfo.sex;\n      } else {\n        isLogin.value = false;\n      }\n    }).catch(err => {\n      console.log(err);\n      console.error(err);\n    });\n\n    /**\r\n     * 图片错误句柄\r\n     * @returns {boolean}\r\n     */\n    const errorHandler = () => true;\n\n    /**\r\n     * 监听nickname和avatar的改变\r\n     */\n    emitter.on('handleHeaderNicknameChange', data => {\n      user.nickname = data.nickname;\n    });\n    emitter.on('handleHeaderAvatarChange', data => {\n      user.avatar = data.avatar;\n    });\n\n    /**\r\n     * 将搜索记录存储到localStorage中\r\n     * @param keyword 搜索关键词\r\n     */\n    function storeHistorySearchRecords(keyword) {\n      let records = JSON.parse(localStorage.getItem(\"historySearchRecords\"));\n      if (records === null || records.length === 0) {\n        records = [];\n      }\n      keyword = keyword.trim();\n      // 将搜索记录中和keyword相同的关键词过滤掉\n      records = records.filter(record => {\n        return record !== keyword;\n      });\n      // 不将空白搜索关键词插入\n      if (keyword.trim().length !== 0) {\n        // 将keyword插入到搜索记录的开头\n        records.unshift(keyword);\n      }\n      // 最多保留10条搜索记录\n      const len = Math.min(10, records.length);\n      // 将搜索记录保存到localStorage中\n      localStorage.setItem(\"historySearchRecords\", JSON.stringify(records.slice(0, len)));\n    }\n\n    // 搜索\n    let searchKeywords = ref('');\n    const querySearchAsync = (queryString, cb) => {\n      movieRequest.getMatchMovieName(searchKeywords.value).then(res => {\n        if (res.code === 200) {\n          const result = [];\n          res.data.forEach((name, index) => {\n            result.push({\n              'value': name\n            });\n          });\n          if (!result.length) {\n            const historySearchRecords = JSON.parse(localStorage.getItem(\"historySearchRecords\"));\n            historySearchRecords.forEach((name, index) => {\n              result.push({\n                'value': name\n              });\n            });\n          }\n          // 调用 callback 返回建议列表的数据\n          cb(result);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    const handleSearch = () => {\n      isShowMenu.value = false;\n      router.push({\n        name: 'classification',\n        query: {\n          keywords: searchKeywords.value\n        }\n      });\n      /**\r\n       * 全局事件总线\r\n       * 触发MovieCards里面的事件，搜索电影\r\n       */\n      emitter.emit('handleSearch', {\n        searchKeywords: searchKeywords.value\n      });\n      // 将搜索关键词保存到localStorage中\n      storeHistorySearchRecords(searchKeywords.value);\n    };\n    const handleSelect = item => {\n      searchKeywords.value = item.value;\n      handleSearch();\n    };\n    onBeforeUnmount(() => {\n      emitter.off('handleHeaderNicknameChange');\n      emitter.off('handleEditAvatarChange');\n    });\n    return {\n      isLogin,\n      isShowMenu,\n      mainMenuRef,\n      moreFilledRef,\n      iconColor,\n      moreRef,\n      user,\n      show,\n      handleMainMenu,\n      handleLogin,\n      handleLogout,\n      errorHandler,\n      searchKeywords,\n      querySearchAsync,\n      handleSearch,\n      handleSelect\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["onBeforeMount","onBeforeUnmount","reactive","ref","watch","useRouter","More","MoreFilled","Menu","MenuIcon","userRequest","ErrorMessage","SuccessMessage","emitter","movieRequest","Search","name","components","setup","router","isLogin","isShowMenu","mainMenuRef","moreRef","moreFilledRef","iconColor","user","id","nickname","avatar","sex","show","push","value","handleMainMenu","newValue","oldValue","handleLogin","handleLogout","logout","then","res","code","msg","localStorage","removeItem","replace","catch","err","getUserInfo","userInfo","data","console","log","error","errorHandler","on","storeHistorySearchRecords","keyword","records","JSON","parse","getItem","length","trim","filter","record","unshift","len","Math","min","setItem","stringify","slice","searchKeywords","querySearchAsync","queryString","cb","getMatchMovieName","result","forEach","index","historySearchRecords","handleSearch","query","keywords","emit","handleSelect","item","off"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\layout\\MovieHeader.vue"],"sourcesContent":["<template>\r\n  <!-- 导航栏 -->\r\n  <div class=\"navbar\">\r\n    <div class=\"logo\">\r\n      <img src=\"../../assets/logo.png\" alt=\"logo\"/>\r\n      <span class=\"title\">电影推荐系统</span>\r\n    </div>\r\n\r\n    <div @click=\"handleMainMenu\" class=\"menu-icon\">\r\n      <div ref=\"moreRef\">\r\n        <menu-icon :color=\"`${iconColor}`\"></menu-icon>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 小屏时显示这个菜单 -->\r\n    <transition\r\n        name=\"animate__animated animate__bounce\"\r\n        appear\r\n        enter-active-class=\"animate__fadeInLeft\"\r\n        leave-active-class=\"animate__fadeOut\">\r\n      <div\r\n          v-if=\"isShowMenu\"\r\n          ref=\"mainMenuRef\"\r\n          class=\"menu\">\r\n        <el-link @click=\"show('home')\" :underline=\"false\">首页</el-link>\r\n        <el-link @click=\"show('classification')\" :underline=\"false\">分类</el-link>\r\n\r\n        <span class=\"search-div\">\r\n          <el-autocomplete\r\n              v-model=\"searchKeywords\"\r\n              :fetch-suggestions=\"querySearchAsync\"\r\n              placeholder=\"请输入电影名\"\r\n              @select=\"handleSelect\"\r\n              @keydown.enter=\"handleSearch\"\r\n          >\r\n            <template #suffix>\r\n              <search @click=\"handleSearch\" width=\"20px\"/>\r\n            </template>\r\n          </el-autocomplete>\r\n        </span>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- 大屏时显示这个菜单 -->\r\n    <div class=\"big-menu\">\r\n      <el-link @click=\"show('home')\" :underline=\"false\">首页</el-link>\r\n      <el-link @click=\"show('classification')\" :underline=\"false\">分类</el-link>\r\n\r\n      <span class=\"search-div\">\r\n        <el-autocomplete\r\n            v-model=\"searchKeywords\"\r\n            :fetch-suggestions=\"querySearchAsync\"\r\n            placeholder=\"请输入电影名\"\r\n            @select=\"handleSelect\"\r\n            @keydown.enter=\"handleSearch\"\r\n        >\r\n          <template #suffix>\r\n            <search @click=\"handleSearch\" width=\"20px\"/>\r\n          </template>\r\n        </el-autocomplete>\r\n      </span>\r\n    </div>\r\n\r\n\r\n    <el-link\r\n        class=\"login-link\"\r\n        v-if=\"!isLogin\"\r\n        @click=\"handleLogin\"\r\n        :underline=\"false\">\r\n      登录\r\n    </el-link>\r\n\r\n    <el-dropdown class=\"login-dropdown\" v-if=\"isLogin\">\r\n      <el-button type=\"text\">\r\n        <div class=\"login-name\">\r\n          {{ user.nickname }}\r\n        </div>\r\n        <el-avatar :src=\"user.avatar\" @error=\"errorHandler\">\r\n          <!-- 当图片加载错误时，将加载这里面的图片 -->\r\n          <img src=\"../../assets/default_avatar.png\" alt=\"default avatar\"/>\r\n        </el-avatar>\r\n      </el-button>\r\n\r\n      <template #dropdown>\r\n        <el-dropdown-menu>\r\n          <el-dropdown-item>\r\n            <el-link :underline=\"false\" @click=\"show('personal')\" style=\"padding-right: 7px\">\r\n              <i style=\"padding-right: 3px\"></i>我的主页\r\n            </el-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <el-link :underline=\"false\" @click=\"show('personalPlanet')\" style=\"padding-right: 7px\">\r\n              <i style=\"padding-right: 3px\"></i>电影星球\r\n            </el-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <el-link :underline=\"false\" @click=\"show('setting')\" style=\"padding-right: 7px\">\r\n              <i style=\"padding-right: 3px\"></i>个人设置\r\n            </el-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item divided>\r\n            <el-button type=\"text\" @click=\"handleLogout\" :underline=\"false\">\r\n              <i style=\"padding-right: 3px\"></i>退出登录\r\n            </el-button>\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </template>\r\n    </el-dropdown>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {onBeforeMount, onBeforeUnmount, reactive, ref, watch} from \"vue\";\r\nimport {useRouter} from 'vue-router'\r\nimport {More, MoreFilled, Menu as MenuIcon} from \"@element-plus/icons\";\r\nimport userRequest from \"@/api/user\";\r\nimport {ErrorMessage, SuccessMessage} from \"@/utils/my-message\";\r\nimport emitter from \"@/utils/event-bus\";\r\nimport movieRequest from \"@/api/movie\";\r\nimport {Search} from \"@element-plus/icons-vue\";\r\n\r\nexport default {\r\n  name: \"MovieHeader\",\r\n  components: {Search, MoreFilled, More, MenuIcon},\r\n  setup() {\r\n    const router = useRouter()\r\n    let isLogin = ref(false)\r\n    let isShowMenu = ref(false);\r\n    let mainMenuRef = ref(null);\r\n    let moreRef = ref(null);\r\n    let moreFilledRef = ref(null);\r\n    let iconColor = ref('white')\r\n    let user = reactive({\r\n      id: 0,\r\n      nickname: '',\r\n      avatar: '',\r\n      sex: '',\r\n    })\r\n\r\n    // 展示名为name的页面\r\n    let show = (name) => {\r\n      router.push({\r\n        name: name\r\n      })\r\n      isShowMenu.value = false;\r\n    }\r\n\r\n    // 控制主菜单显示\r\n    let handleMainMenu = () => {\r\n      isShowMenu.value = !isShowMenu.value;\r\n    }\r\n    // 监测主菜单显示变量，根据展示与否改变图标颜色\r\n    watch(isShowMenu, (newValue, oldValue) => {\r\n      if (newValue === true) {\r\n        iconColor.value = '#a99f9f';\r\n      } else {\r\n        iconColor.value = 'white'\r\n      }\r\n    })\r\n\r\n    // 跳转到登录界面\r\n    let handleLogin = () => {\r\n      router.push('/login');\r\n    }\r\n\r\n    // 登出\r\n    let handleLogout = () => {\r\n      userRequest.logout().then(res => {\r\n        if (res.code === 200) {\r\n          SuccessMessage(res.msg)\r\n          // 用户注销时将缓存中的token和userInfo删除\r\n          localStorage.removeItem('token')\r\n          localStorage.removeItem('userInfo')\r\n          isLogin.value = false\r\n          router.replace({\r\n            name: 'home'\r\n          })\r\n        } else {\r\n          ErrorMessage(res.msg)\r\n        }\r\n      }).catch(err => {\r\n        ErrorMessage(err)\r\n      })\r\n    }\r\n\r\n    /**\r\n     * 每次初始化界面是判断token是否过期，如果没有过期，则显示登录基本信息\r\n     */\r\n    userRequest.getUserInfo().then(res => {\r\n      if (res.code === 200) {\r\n        isLogin.value = true\r\n        let userInfo = res.data\r\n        user.nickname = userInfo.nickname\r\n        user.id = userInfo.id\r\n        user.avatar = userInfo.avatar\r\n        user.sex = userInfo.sex\r\n      } else {\r\n        isLogin.value = false\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n      console.error(err)\r\n    })\r\n\r\n    /**\r\n     * 图片错误句柄\r\n     * @returns {boolean}\r\n     */\r\n    const errorHandler = () => true\r\n\r\n    /**\r\n     * 监听nickname和avatar的改变\r\n     */\r\n    emitter.on('handleHeaderNicknameChange', data => {\r\n      user.nickname = data.nickname\r\n    })\r\n    emitter.on('handleHeaderAvatarChange', data => {\r\n      user.avatar = data.avatar\r\n    })\r\n\r\n    /**\r\n     * 将搜索记录存储到localStorage中\r\n     * @param keyword 搜索关键词\r\n     */\r\n    function storeHistorySearchRecords(keyword) {\r\n      let records = JSON.parse(localStorage.getItem(\"historySearchRecords\"));\r\n      if (records === null || records.length === 0) {\r\n        records = []\r\n      }\r\n      keyword = keyword.trim()\r\n      // 将搜索记录中和keyword相同的关键词过滤掉\r\n      records = records.filter((record) => {\r\n        return record !== keyword;\r\n      })\r\n      // 不将空白搜索关键词插入\r\n      if (keyword.trim().length !== 0) {\r\n        // 将keyword插入到搜索记录的开头\r\n        records.unshift(keyword);\r\n      }\r\n      // 最多保留10条搜索记录\r\n      const len = Math.min(10, records.length);\r\n      // 将搜索记录保存到localStorage中\r\n      localStorage.setItem(\"historySearchRecords\", JSON.stringify(records.slice(0, len)));\r\n    }\r\n\r\n    // 搜索\r\n    let searchKeywords = ref('')\r\n    const querySearchAsync = (queryString, cb) => {\r\n      movieRequest.getMatchMovieName(searchKeywords.value).then(res => {\r\n        if (res.code === 200) {\r\n          const result = []\r\n          res.data.forEach((name, index) => {\r\n            result.push({'value': name})\r\n          })\r\n          if (!result.length) {\r\n            const historySearchRecords = JSON.parse(localStorage.getItem(\"historySearchRecords\"));\r\n            historySearchRecords.forEach((name, index) => {\r\n              result.push({'value': name})\r\n            })\r\n          }\r\n          // 调用 callback 返回建议列表的数据\r\n          cb(result)\r\n        }\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    }\r\n    const handleSearch = () => {\r\n      isShowMenu.value = false\r\n      router.push({\r\n        name: 'classification',\r\n        query: {\r\n          keywords: searchKeywords.value\r\n        }\r\n      })\r\n      /**\r\n       * 全局事件总线\r\n       * 触发MovieCards里面的事件，搜索电影\r\n       */\r\n      emitter.emit('handleSearch', {\r\n        searchKeywords: searchKeywords.value\r\n      })\r\n      // 将搜索关键词保存到localStorage中\r\n      storeHistorySearchRecords(searchKeywords.value)\r\n    }\r\n    const handleSelect = (item) => {\r\n      searchKeywords.value = item.value\r\n      handleSearch()\r\n    }\r\n\r\n    onBeforeUnmount(() => {\r\n      emitter.off('handleHeaderNicknameChange')\r\n      emitter.off('handleEditAvatarChange')\r\n    })\r\n\r\n    return {\r\n      isLogin,\r\n      isShowMenu,\r\n      mainMenuRef,\r\n      moreFilledRef,\r\n      iconColor,\r\n      moreRef,\r\n      user,\r\n      show,\r\n      handleMainMenu,\r\n      handleLogin,\r\n      handleLogout,\r\n      errorHandler,\r\n      searchKeywords,\r\n      querySearchAsync,\r\n      handleSearch,\r\n      handleSelect\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/* 设置顶部导航栏样式 */\r\n.navbar {\r\n  z-index: 500;\r\n  height: 50px;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n  display: flex;\r\n  background-color: rgb(84, 92, 100);\r\n}\r\n\r\n/*系统logo图片和字体样式*/\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 50px;\r\n\r\n  img {\r\n    padding-top: 5px;\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .title {\r\n    color: #dddddd;\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n.menu-icon {\r\n  display: none;\r\n}\r\n\r\n.big-menu {\r\n  display: flex;\r\n}\r\n\r\n.menu {\r\n  display: none;\r\n}\r\n\r\n/* 设置导航条链接演示 */\r\n.navbar a {\r\n  font-size: 20px;\r\n  color: white;\r\n\r\n  padding: 12px 20px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n}\r\n\r\n/* 更改鼠标悬停时的颜色 */\r\n.navbar a:hover {\r\n  color: white;\r\n  animation: heartBeat;\r\n  animation-duration: .7s;\r\n}\r\n\r\n/*搜索框样式*/\r\n.search-div {\r\n  width: 300px;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n/*登录样式*/\r\n.login-link {\r\n  margin-left: auto; /*右对齐*/\r\n}\r\n\r\n/*登录成功抽屉样式*/\r\n.login-dropdown {\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  margin-left: auto;\r\n\r\n  /*登录用户名样式*/\r\n\r\n  .login-name {\r\n    font-weight: bolder;\r\n    font-size: 15px;\r\n    letter-spacing: 2px;\r\n  }\r\n}\r\n\r\n/* 响应式布局 - 当屏幕小于 740 像素宽 */\r\n@media screen and (max-width: 740px) {\r\n  .navbar {\r\n    z-index: 999;\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  .menu-icon {\r\n    order: 1;\r\n    display: block;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    position: relative;\r\n    margin: auto 0;\r\n  }\r\n\r\n  .big-menu {\r\n    display: none;\r\n  }\r\n\r\n  .menu {\r\n    order: 5;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50px;\r\n    width: 100%;\r\n    z-index: 500;\r\n    background-color: #333;\r\n    flex-direction: column;\r\n    display: flex;\r\n\r\n    .search-div {\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .logo {\r\n    position: absolute;\r\n    left: 45%;\r\n\r\n    .title {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .login-link, .login-dropdown {\r\n    order: 3;\r\n  }\r\n\r\n  .menu-enter-active {\r\n    animation: show-menu 0.5s linear;\r\n  }\r\n\r\n  .menu-leave-active {\r\n    animation: show-menu 0.5s reverse;\r\n  }\r\n\r\n  @keyframes show-menu {\r\n    from {\r\n      z-index: -100;\r\n      transform: translateY(-100%);\r\n    }\r\n\r\n    to {\r\n      z-index: 500;\r\n      transform: translateY(0%);\r\n    }\r\n  }\r\n}\r\n\r\n/* 响应式布局 - 当屏幕为（740px < 屏幕像素 < 1200px)宽 时，系统名消失，并且左右内边距变为0 */\r\n@media screen and (min-width: 740px) and  (max-width: 1200px) {\r\n  /* 左右内边距变为0 */\r\n  .navbar {\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n\r\n  /* logo名消失 */\r\n  .logo .title {\r\n    display: none;\r\n  }\r\n\r\n  .big-menu {\r\n    display: flex;\r\n  }\r\n\r\n  .menu {\r\n    display: none;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}