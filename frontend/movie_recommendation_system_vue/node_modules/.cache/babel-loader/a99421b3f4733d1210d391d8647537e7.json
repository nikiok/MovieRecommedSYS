{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4a639967\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"space\",\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"修改密码：\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"rgb(147, 147, 147)\"\n  }\n}, \"已设置\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"修改 \");\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"确 定\");\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"取 消\");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_edit = _resolveComponent(\"edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_icon_lock = _resolveComponent(\"icon-lock\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.isShowPasswordEditing = !$setup.isShowPasswordEditing),\n    class: \"edit-btn\"\n  }, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_edit)]),\n    _: 1 /* STABLE */\n  }), _hoisted_4])]), _createVNode(_Transition, {\n    duration: 300,\n    name: \"animate__animated animate__zoomOut\",\n    appear: \"\",\n    \"enter-active-class\": \"animate__fadeIn\",\n    \"leave-active-class\": \"animate__fadeOut \"\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_el_form, {\n      ref: \"updatePasswordFormRef\",\n      model: $setup.updatePasswordForm,\n      rules: $setup.rules,\n      class: \"form-css\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"原 密 码\",\n        prop: \"prePassword\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"login-form-input\",\n          placeholder: \"原 密 码\",\n          modelValue: $setup.updatePasswordForm.prePassword,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.updatePasswordForm.prePassword = $event),\n          autofocus: \"\",\n          autocomplete: \"off\",\n          \"show-password\": \"\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_el_icon, {\n            class: \"el-input__icon\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_icon_lock)]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"新 密 码\",\n        prop: \"newPassword\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"login-form-input\",\n          placeholder: \"新 密 码\",\n          modelValue: $setup.updatePasswordForm.newPassword,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.updatePasswordForm.newPassword = $event),\n          \"show-password\": \"\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_el_icon, {\n            class: \"el-input__icon\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_icon_lock)]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"再 确 认\",\n        prop: \"checkPassword\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"login-form-input\",\n          placeholder: \"密 码 确 认\",\n          modelValue: $setup.updatePasswordForm.checkPassword,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.updatePasswordForm.checkPassword = $event),\n          \"show-password\": \"\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_el_icon, {\n            class: \"el-input__icon\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_icon_lock)]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          onClick: $setup.postUpdatePassword,\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: _cache[4] || (_cache[4] = $event => $setup.isShowPasswordEditing = false)\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])], 512 /* NEED_PATCH */), [[_vShow, $setup.isShowPasswordEditing]])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC,OAAO;EAACC,KAAqB,EAArB;IAAA;EAAA;;gEACjBC,oBAAkB,cAAZ,OAAK;gEACXA,oBAAkD;EAA5CD,KAAiC,EAAjC;IAAA;EAAA;AAAiC,GAAC,KAAG;iDAGf,KAC5B;iDAgE4D,KAAG;iDACP,KAAG;;;;;;;;;6DAvE7DC,oBAOM,OAPNC,UAOM,GANJC,UAAkB,EAClBC,UAAkD,EAElDH,oBAEO;IAFAI,OAAK,sCAAEC,4BAAqB,IAAIA,4BAAqB;IAAEP,KAAK,EAAC;MAClEQ,aAA0BC;sBAAjB,MAAO,CAAPD,aAAOE;;sBAIpBF,aAkEaG;IAjERC,QAAQ,EAAE,GAAG;IACdC,IAAI,EAAC,oCAAoC;IACzCC,MAAM,EAAN,EAAM;IACN,oBAAkB,EAAC,iBAAiB;IACpC,oBAAkB,EAAC;;sBACrB,MA2DM,iBA3DNZ,oBA2DM,cA1DJM,aAyDUO;MAxDNC,GAAG,EAAC,uBAAuB;MAC1BC,KAAK,EAAEV,yBAAkB;MACzBW,KAAK,EAAEX,YAAK;MACbP,KAAK,EAAC;;wBAER,MAee,CAffQ,aAeeW;QAfDC,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC;;0BAC/B,MAaW,CAbXb,aAaWc;UAZPtB,KAAK,EAAC,kBAAkB;UACxBuB,WAAW,EAAC,OAAO;sBACVhB,yBAAkB,CAACiB,WAAW;qEAA9BjB,yBAAkB,CAACiB,WAAW;UACvCC,SAAS,EAAT,EAAS;UACTC,YAAY,EAAC,KAAK;UAClB,eAAa,EAAb;;UAEeC,MAAM,WACrB,MAEU,CAFVnB,aAEUC;YAFDT,KAAK,EAAC;UAAgB;8BAC7B,MAAY,CAAZQ,aAAYoB;;;;;;;UAMpBpB,aAaeW;QAbDC,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC;;0BAC/B,MAWW,CAXXb,aAWWc;UAVPtB,KAAK,EAAC,kBAAkB;UACxBuB,WAAW,EAAC,OAAO;sBACVhB,yBAAkB,CAACsB,WAAW;qEAA9BtB,yBAAkB,CAACsB,WAAW;UACvC,eAAa,EAAb;;UAEeF,MAAM,WACrB,MAEU,CAFVnB,aAEUC;YAFDT,KAAK,EAAC;UAAgB;8BAC7B,MAAY,CAAZQ,aAAYoB;;;;;;;UAMpBpB,aAaeW;QAbDC,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC;;0BAC/B,MAWW,CAXXb,aAWWc;UAVPtB,KAAK,EAAC,kBAAkB;UACxBuB,WAAW,EAAC,SAAS;sBACZhB,yBAAkB,CAACuB,aAAa;qEAAhCvB,yBAAkB,CAACuB,aAAa;UACzC,eAAa,EAAb;;UAEeH,MAAM,WACrB,MAEU,CAFVnB,aAEUC;YAFDT,KAAK,EAAC;UAAgB;8BAC7B,MAAY,CAAZQ,aAAYoB;;;;;;;UAMpBpB,aAGeW;0BAFb,MAAqE,CAArEX,aAAqEuB;UAAzDzB,OAAK,EAAEC,yBAAkB;UAAEyB,IAAI,EAAC;;4BAAU,MAAG;;wCACzDxB,aAAiEuB;UAArDzB,OAAK,sCAAEC,4BAAqB;;4BAAU,MAAG;;;;;;;;6EAxD9CA,4BAAqB","names":["class","style","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","onClick","$setup","_createVNode","_component_el_icon","_component_edit","_Transition","duration","name","appear","_component_el_form","ref","model","rules","_component_el_form_item","label","prop","_component_el_input","placeholder","prePassword","autofocus","autocomplete","prefix","_component_icon_lock","newPassword","checkPassword","_component_el_button","type"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\personal\\edit\\PasswordEditing.vue"],"sourcesContent":["<template>\r\n  <div class=\"space\" style=\"display: flex\">\r\n    <span>修改密码：</span>\r\n    <span style=\"color: rgb(147, 147, 147)\">已设置</span>\r\n\r\n    <span @click=\"isShowPasswordEditing = !isShowPasswordEditing\" class=\"edit-btn\">\r\n      <el-icon><edit/></el-icon>修改\r\n    </span>\r\n  </div>\r\n\r\n  <transition\r\n      :duration=\"300\"\r\n      name=\"animate__animated animate__zoomOut\"\r\n      appear\r\n      enter-active-class=\"animate__fadeIn\"\r\n      leave-active-class=\"animate__fadeOut \">\r\n    <div v-show=\"isShowPasswordEditing\">\r\n      <el-form\r\n          ref=\"updatePasswordFormRef\"\r\n          :model=\"updatePasswordForm\"\r\n          :rules=\"rules\"\r\n          class=\"form-css\"\r\n      >\r\n        <el-form-item label=\"原 密 码\" prop=\"prePassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"原 密 码\"\r\n              v-model=\"updatePasswordForm.prePassword\"\r\n              autofocus\r\n              autocomplete=\"off\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"新 密 码\" prop=\"newPassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"新 密 码\"\r\n              v-model=\"updatePasswordForm.newPassword\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"再 确 认\" prop=\"checkPassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"密 码 确 认\"\r\n              v-model=\"updatePasswordForm.checkPassword\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button @click=\"postUpdatePassword\" type=\"primary\">确 定</el-button>\r\n          <el-button @click=\"isShowPasswordEditing = false\">取 消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport {Lock as IconLock} from \"@element-plus/icons\";\r\nimport {reactive, ref, unref} from \"vue\";\r\nimport userRequest from \"@/api/user\";\r\nimport {ErrorMessage, SuccessMessage} from \"@/utils/my-message\";\r\nimport router from \"@/router\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"PasswordEditing\",\r\n  components: {\r\n    IconLock\r\n  },\r\n  setup() {\r\n    const router = useRouter()\r\n    const updatePasswordFormRef = ref('')\r\n    let updatePasswordForm = reactive({\r\n      prePassword: '',\r\n      newPassword: '',\r\n      checkPassword: '',\r\n    })\r\n\r\n    /**\r\n     * 提交更新密码的表单\r\n     */\r\n    const postUpdatePassword = async () => {\r\n      const form = unref(updatePasswordFormRef)\r\n      if (!form) {\r\n        return\r\n      }\r\n      try {\r\n        await form.validate()\r\n        userRequest.updatePassword(updatePasswordForm).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n            router.replace({\r\n              name: 'login'\r\n            })\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          ErrorMessage(err)\r\n        })\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n\r\n\r\n    const validateUserChange = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassBlur = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 4 || value.length > 20) {\r\n        callback(new Error('长度在4到20个字符'))\r\n      } else if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassChange = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassAgainBlur = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value.length < 4 || value.length > 20) {\r\n        callback(new Error('长度在4到20个字符'))\r\n      } else if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else if (value !== updatePasswordForm.newPassword) {\r\n        callback(new Error(\"新设置的密码两次输入不一致\"))\r\n      } else if (value === updatePasswordForm.prePassword) {\r\n        callback(new Error(\"新密码不可以与旧密码相同\"))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const rules = reactive({\r\n      prePassword: [\r\n        {required: true, validator: validatePassBlur, trigger: 'blur'},\r\n        {validator: validateUserChange, trigger: 'change'}\r\n      ],\r\n      newPassword: [\r\n        {required: true, validator: validatePassBlur, trigger: 'blur'},\r\n        {validator: validatePassChange, trigger: 'change'}\r\n      ],\r\n      checkPassword: [\r\n        {required: true, validator: validatePassAgainBlur, trigger: 'blur'},\r\n        {validator: validatePassChange, trigger: 'change'}\r\n      ],\r\n    })\r\n\r\n    let isShowPasswordEditing = ref(false);\r\n    return {\r\n      rules,\r\n      updatePasswordForm,\r\n      updatePasswordFormRef,\r\n      postUpdatePassword,\r\n      isShowPasswordEditing,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form-css {\r\n  max-width: 400px;\r\n}\r\n\r\n.space {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.edit-btn {\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(23, 81, 153);\r\n  white-space: nowrap;\r\n  cursor: pointer; // 鼠标放上去显示手势\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}