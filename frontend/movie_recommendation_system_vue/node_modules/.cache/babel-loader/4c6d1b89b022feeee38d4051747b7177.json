{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flex-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_movie_carousel = _resolveComponent(\"movie-carousel\");\n  const _component_movie_list = _resolveComponent(\"movie-list\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_movie_carousel)]), $setup.recommendedMovies.length !== 0 ? (_openBlock(), _createBlock(_component_movie_list, {\n    key: 0,\n    opt: 1,\n    tag: $setup.tags[0],\n    movies: $setup.recommendedMovies,\n    class: \"movie-list my-border\"\n  }, null, 8 /* PROPS */, [\"tag\", \"movies\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_movie_list, {\n    opt: 2,\n    tag: $setup.tags[1],\n    movies: $setup.mostWatchedMovies,\n    class: \"movie-list my-border\"\n  }, null, 8 /* PROPS */, [\"tag\", \"movies\"]), _createVNode(_component_movie_list, {\n    opt: 3,\n    tag: $setup.tags[2],\n    movies: $setup.highestRatedMovies,\n    class: \"movie-list my-border\"\n  }, null, 8 /* PROPS */, [\"tag\", \"movies\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;;;6DAA3BC,oBAEM,OAFNC,UAEM,GADJC,aAAiBC,8BAKTC,wBAAiB,CAACC,MAAM,wBAFlCC,aAMEC;;IALGC,GAAG,EAAE,CAAC;IAENC,GAAG,EAAEL,WAAI;IACTM,MAAM,EAAEN,wBAAiB;IAC1BL,KAAK,EAAC;mFAGVG,aAKEK;IAJGC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEL,WAAI;IACTM,MAAM,EAAEN,wBAAiB;IAC1BL,KAAK,EAAC;8CAGVG,aAKEK;IAJGC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEL,WAAI;IACTM,MAAM,EAAEN,yBAAkB;IAC3BL,KAAK,EAAC","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_movie_carousel","$setup","length","_createBlock","_component_movie_list","opt","tag","movies"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex-container\">\r\n    <movie-carousel/>\r\n  </div>\r\n\r\n  <movie-list\r\n      :opt=\"1\"\r\n      v-if=\"recommendedMovies.length !== 0\"\r\n      :tag=\"tags[0]\"\r\n      :movies=\"recommendedMovies\"\r\n      class=\"movie-list my-border\"\r\n  />\r\n\r\n  <movie-list\r\n      :opt=\"2\"\r\n      :tag=\"tags[1]\"\r\n      :movies=\"mostWatchedMovies\"\r\n      class=\"movie-list my-border\"\r\n  />\r\n\r\n  <movie-list\r\n      :opt=\"3\"\r\n      :tag=\"tags[2]\"\r\n      :movies=\"highestRatedMovies\"\r\n      class=\"movie-list my-border\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport MovieCarousel from \"@/components/home/MovieCarousel\";\r\nimport MovieList from \"@/components/home/MovieList\";\r\nimport {ref} from \"vue\";\r\nimport recommendationRequest from \"@/api/recommendation\";\r\nimport movieRequest from \"@/api/movie\";\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  components: {\r\n    MovieCarousel,\r\n    MovieList,\r\n  },\r\n  setup() {\r\n    const tags = ref(['猜你喜欢', '最多人看', '评分最高', '今日热门', '电影Top100',])\r\n    let recommendedMovies = ref([])\r\n    recommendationRequest.getRecommendedMoviesByUserId().then(res => {\r\n      if (res.code === 200) {\r\n        recommendedMovies.value = res.data\r\n      }\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    let mostWatchedMovies = ref([])\r\n    movieRequest.getMostWatchedMovies().then(res => {\r\n      if (res.code === 200) {\r\n        mostWatchedMovies.value = res.data\r\n      }\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    let highestRatedMovies = ref([])\r\n    movieRequest.getHighestRatedMovies().then(res => {\r\n      if (res.code === 200) {\r\n        highestRatedMovies.value = res.data\r\n      }\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    return {\r\n      tags,\r\n      recommendedMovies,\r\n      mostWatchedMovies,\r\n      highestRatedMovies,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.flex-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  margin-top: 0.5rem;\r\n  margin-left: 25%;\r\n  margin-right: 25%;\r\n}\r\n\r\n.movie-list {\r\n  padding: 1rem;\r\n  margin: 1rem 20% 1rem 20%;\r\n}\r\n\r\n/* 响应式布局 - 当屏幕小于 1200 像素宽时，让两列堆叠而不是并排 */\r\n@media screen and (max-width: 1200px) {\r\n  .flex-container {\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n  }\r\n\r\n  .movie-list {\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}