{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { Lock as IconLock } from \"@element-plus/icons\";\nimport { reactive, ref, unref } from \"vue\";\nimport userRequest from \"@/api/user\";\nimport { ErrorMessage, SuccessMessage } from \"@/utils/my-message\";\nimport router from \"@/router\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"PasswordEditing\",\n  components: {\n    IconLock\n  },\n  setup() {\n    const router = useRouter();\n    const updatePasswordFormRef = ref('');\n    let updatePasswordForm = reactive({\n      prePassword: '',\n      newPassword: '',\n      checkPassword: ''\n    });\n\n    /**\r\n     * 提交更新密码的表单\r\n     */\n    const postUpdatePassword = async () => {\n      const form = unref(updatePasswordFormRef);\n      if (!form) {\n        return;\n      }\n      try {\n        await form.validate();\n        userRequest.updatePassword(updatePasswordForm).then(res => {\n          if (res.code === 200) {\n            SuccessMessage(res.msg);\n            router.replace({\n              name: 'login'\n            });\n          } else {\n            ErrorMessage(res.msg);\n          }\n        }).catch(err => {\n          ErrorMessage(err);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    const validateUserChange = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9]+$/;\n      if (!reg.test(value)) {\n        callback(new Error('只允许填写数字、字母'));\n      } else {\n        callback();\n      }\n    };\n    const validatePassBlur = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9_!.@]+$/;\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 4 || value.length > 20) {\n        callback(new Error('长度在4到20个字符'));\n      } else if (!reg.test(value)) {\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'));\n      } else {\n        callback();\n      }\n    };\n    const validatePassChange = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9_!.@]+$/;\n      if (!reg.test(value)) {\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'));\n      } else {\n        callback();\n      }\n    };\n    const validatePassAgainBlur = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9_!.@]+$/;\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value.length < 4 || value.length > 20) {\n        callback(new Error('长度在4到20个字符'));\n      } else if (!reg.test(value)) {\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'));\n      } else if (value !== updatePasswordForm.newPassword) {\n        callback(new Error(\"新设置的密码两次输入不一致\"));\n      } else if (value === updatePasswordForm.prePassword) {\n        callback(new Error(\"新密码不可以与旧密码相同\"));\n      } else {\n        callback();\n      }\n    };\n    const rules = reactive({\n      prePassword: [{\n        required: true,\n        validator: validatePassBlur,\n        trigger: 'blur'\n      }, {\n        validator: validateUserChange,\n        trigger: 'change'\n      }],\n      newPassword: [{\n        required: true,\n        validator: validatePassBlur,\n        trigger: 'blur'\n      }, {\n        validator: validatePassChange,\n        trigger: 'change'\n      }],\n      checkPassword: [{\n        required: true,\n        validator: validatePassAgainBlur,\n        trigger: 'blur'\n      }, {\n        validator: validatePassChange,\n        trigger: 'change'\n      }]\n    });\n    let isShowPasswordEditing = ref(false);\n    return {\n      rules,\n      updatePasswordForm,\n      updatePasswordFormRef,\n      postUpdatePassword,\n      isShowPasswordEditing\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["Lock","IconLock","reactive","ref","unref","userRequest","ErrorMessage","SuccessMessage","router","useRouter","name","components","setup","updatePasswordFormRef","updatePasswordForm","prePassword","newPassword","checkPassword","postUpdatePassword","form","validate","updatePassword","then","res","code","msg","replace","catch","err","console","error","validateUserChange","rule","value","callback","reg","test","Error","validatePassBlur","length","validatePassChange","validatePassAgainBlur","rules","required","validator","trigger","isShowPasswordEditing"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\personal\\edit\\PasswordEditing.vue"],"sourcesContent":["<template>\r\n  <div class=\"space\" style=\"display: flex\">\r\n    <span>修改密码：</span>\r\n    <span style=\"color: rgb(147, 147, 147)\">已设置</span>\r\n\r\n    <span @click=\"isShowPasswordEditing = !isShowPasswordEditing\" class=\"edit-btn\">\r\n      <el-icon><edit/></el-icon>修改\r\n    </span>\r\n  </div>\r\n\r\n  <transition\r\n      :duration=\"300\"\r\n      name=\"animate__animated animate__zoomOut\"\r\n      appear\r\n      enter-active-class=\"animate__fadeIn\"\r\n      leave-active-class=\"animate__fadeOut \">\r\n    <div v-show=\"isShowPasswordEditing\">\r\n      <el-form\r\n          ref=\"updatePasswordFormRef\"\r\n          :model=\"updatePasswordForm\"\r\n          :rules=\"rules\"\r\n          class=\"form-css\"\r\n      >\r\n        <el-form-item label=\"原 密 码\" prop=\"prePassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"原 密 码\"\r\n              v-model=\"updatePasswordForm.prePassword\"\r\n              autofocus\r\n              autocomplete=\"off\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"新 密 码\" prop=\"newPassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"新 密 码\"\r\n              v-model=\"updatePasswordForm.newPassword\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"再 确 认\" prop=\"checkPassword\">\r\n          <el-input\r\n              class=\"login-form-input\"\r\n              placeholder=\"密 码 确 认\"\r\n              v-model=\"updatePasswordForm.checkPassword\"\r\n              show-password\r\n          >\r\n            <template v-slot:prefix>\r\n              <el-icon class=\"el-input__icon\">\r\n                <icon-lock/>\r\n              </el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button @click=\"postUpdatePassword\" type=\"primary\">确 定</el-button>\r\n          <el-button @click=\"isShowPasswordEditing = false\">取 消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport {Lock as IconLock} from \"@element-plus/icons\";\r\nimport {reactive, ref, unref} from \"vue\";\r\nimport userRequest from \"@/api/user\";\r\nimport {ErrorMessage, SuccessMessage} from \"@/utils/my-message\";\r\nimport router from \"@/router\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"PasswordEditing\",\r\n  components: {\r\n    IconLock\r\n  },\r\n  setup() {\r\n    const router = useRouter()\r\n    const updatePasswordFormRef = ref('')\r\n    let updatePasswordForm = reactive({\r\n      prePassword: '',\r\n      newPassword: '',\r\n      checkPassword: '',\r\n    })\r\n\r\n    /**\r\n     * 提交更新密码的表单\r\n     */\r\n    const postUpdatePassword = async () => {\r\n      const form = unref(updatePasswordFormRef)\r\n      if (!form) {\r\n        return\r\n      }\r\n      try {\r\n        await form.validate()\r\n        userRequest.updatePassword(updatePasswordForm).then(res => {\r\n          if (res.code === 200) {\r\n            SuccessMessage(res.msg)\r\n            router.replace({\r\n              name: 'login'\r\n            })\r\n          } else {\r\n            ErrorMessage(res.msg)\r\n          }\r\n        }).catch(err => {\r\n          ErrorMessage(err)\r\n        })\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n\r\n\r\n    const validateUserChange = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassBlur = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 4 || value.length > 20) {\r\n        callback(new Error('长度在4到20个字符'))\r\n      } else if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassChange = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassAgainBlur = (rule, value, callback) => {\r\n      const reg = /^[a-zA-Z0-9_!.@]+$/\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value.length < 4 || value.length > 20) {\r\n        callback(new Error('长度在4到20个字符'))\r\n      } else if (!reg.test(value)) {\r\n        callback(new Error('只允许填写数字、字母、符号(_、!、.、@)'))\r\n      } else if (value !== updatePasswordForm.newPassword) {\r\n        callback(new Error(\"新设置的密码两次输入不一致\"))\r\n      } else if (value === updatePasswordForm.prePassword) {\r\n        callback(new Error(\"新密码不可以与旧密码相同\"))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const rules = reactive({\r\n      prePassword: [\r\n        {required: true, validator: validatePassBlur, trigger: 'blur'},\r\n        {validator: validateUserChange, trigger: 'change'}\r\n      ],\r\n      newPassword: [\r\n        {required: true, validator: validatePassBlur, trigger: 'blur'},\r\n        {validator: validatePassChange, trigger: 'change'}\r\n      ],\r\n      checkPassword: [\r\n        {required: true, validator: validatePassAgainBlur, trigger: 'blur'},\r\n        {validator: validatePassChange, trigger: 'change'}\r\n      ],\r\n    })\r\n\r\n    let isShowPasswordEditing = ref(false);\r\n    return {\r\n      rules,\r\n      updatePasswordForm,\r\n      updatePasswordFormRef,\r\n      postUpdatePassword,\r\n      isShowPasswordEditing,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.form-css {\r\n  max-width: 400px;\r\n}\r\n\r\n.space {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.edit-btn {\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(23, 81, 153);\r\n  white-space: nowrap;\r\n  cursor: pointer; // 鼠标放上去显示手势\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}