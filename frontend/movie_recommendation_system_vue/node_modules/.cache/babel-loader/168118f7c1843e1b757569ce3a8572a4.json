{"ast":null,"code":"import { reactive, ref } from \"vue\";\nimport { Edit } from \"@element-plus/icons\";\nimport userRequest from \"@/api/user\";\nimport { ErrorMessage } from \"@/utils/my-message\";\nimport router from \"@/router\";\nimport emitter from \"@/utils/event-bus\";\nexport default {\n  name: \"PersonalInfo\",\n  components: {\n    Edit\n  },\n  setup() {\n    let user = reactive({\n      id: -1,\n      nickname: '',\n      sex: '保密',\n      avatar: ''\n    });\n    let types = ref([]);\n    let regions = ref([]);\n\n    /**\r\n     * 每次初始化界面是判断token是否过期，如果没有过期，则显示登录基本信息\r\n     */\n    userRequest.getUserInfo().then(res => {\n      if (res.code === 200) {\n        // let userInfo = JSON.parse(localStorage.getItem('userInfo'))\n        let userInfo = res.data;\n        user.nickname = userInfo.nickname;\n        user.id = userInfo.id;\n        user.avatar = userInfo.avatar;\n        user.sex = userInfo.sex;\n\n        // 全局事件总线——触发：从服务器获取到个人信息后，将头像路径传递给Avatar.vue\n        emitter.emit('handleEditAvatarChange', {\n          avatar: user.avatar\n        });\n        userRequest.getTypesAndRegions().then(res => {\n          types.value = res.data.types;\n          regions.value = res.data.regions;\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        ErrorMessage(res.msg);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n    let handleEditInfo = () => {\n      router.push({\n        path: \"/personal/edit\"\n      });\n    };\n    return {\n      user,\n      types,\n      regions,\n      handleEditInfo\n    };\n  }\n};","map":{"version":3,"mappings":"AA2CA,SAAQA,QAAQ,EAAEC,GAAG,QAAO,KAAK;AACjC,SAAQC,IAAI,QAAO,qBAAqB;AACxC,OAAOC,WAAU,MAAO,YAAY;AACpC,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,OAAM,MAAO,mBAAmB;AAEvC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IAACN;EAAI,CAAC;EAClBO,KAAKA,GAAG;IACN,IAAIC,IAAG,GAAIV,QAAQ,CAAC;MAClBW,EAAE,EAAE,CAAC,CAAC;MACNC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE;IACV,CAAC;IACD,IAAIC,KAAI,GAAId,GAAG,CAAC,EAAE;IAClB,IAAIe,OAAM,GAAIf,GAAG,CAAC,EAAE;;IAEpB;;;IAGAE,WAAW,CAACc,WAAW,CAAC,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;MACpC,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;QACpB;QACA,IAAIC,QAAO,GAAIF,GAAG,CAACG,IAAG;QACtBZ,IAAI,CAACE,QAAO,GAAIS,QAAQ,CAACT,QAAO;QAChCF,IAAI,CAACC,EAAC,GAAIU,QAAQ,CAACV,EAAC;QACpBD,IAAI,CAACI,MAAK,GAAIO,QAAQ,CAACP,MAAK;QAC5BJ,IAAI,CAACG,GAAE,GAAIQ,QAAQ,CAACR,GAAE;;QAEtB;QACAP,OAAO,CAACiB,IAAI,CAAC,wBAAwB,EAAE;UACrCT,MAAM,EAAEJ,IAAI,CAACI;QACf,CAAC;QAEDX,WAAW,CAACqB,kBAAkB,CAAC,CAAC,CAACN,IAAI,CAACC,GAAE,IAAK;UAC3CJ,KAAK,CAACU,KAAI,GAAIN,GAAG,CAACG,IAAI,CAACP,KAAI;UAC3BC,OAAO,CAACS,KAAI,GAAIN,GAAG,CAACG,IAAI,CAACN,OAAM;QACjC,CAAC,CAAC,CAACU,KAAK,CAACC,GAAE,IAAK;UACdC,OAAO,CAACC,KAAK,CAACF,GAAG;QACnB,CAAC;MACH,OAAO;QACLvB,YAAY,CAACe,GAAG,CAACW,GAAG;MACtB;IACF,CAAC,CAAC,CAACJ,KAAK,CAACC,GAAE,IAAK;MACdC,OAAO,CAACC,KAAK,CAACF,GAAG;IACnB,CAAC;IAED,IAAII,cAAa,GAAIA,MAAM;MACzB1B,MAAM,CAAC2B,IAAI,CAAC;QACVC,IAAI,EAAE;MACR,CAAC;IACH;IAEA,OAAO;MACLvB,IAAI;MACJK,KAAK;MACLC,OAAO;MACPe;IACF;EACF;AACF","names":["reactive","ref","Edit","userRequest","ErrorMessage","router","emitter","name","components","setup","user","id","nickname","sex","avatar","types","regions","getUserInfo","then","res","code","userInfo","data","emit","getTypesAndRegions","value","catch","err","console","error","msg","handleEditInfo","push","path"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\personal\\PersonalInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"personal-info-master\">\r\n    <div class=\"name-sex\">\r\n      <!-- 昵称和性别 -->\r\n      <span class=\"nickname\">{{ user.nickname }}</span>\r\n      <span v-if=\"user.sex === '男'\"><el-icon><male color=\"#36A4FF\"/></el-icon></span>\r\n      <span v-else-if=\"user.sex === '女'\"><el-icon><female color=\"pink\"/></el-icon></span>\r\n      <span v-else><el-icon><paperclip color=\"#92ff9d\"/></el-icon></span>\r\n    </div>\r\n\r\n    <div class=\"types\">\r\n      <span class=\"like\">类型喜好：</span>\r\n      <el-tag\r\n          v-for=\"(type, index) in types\"\r\n          :key=\"index\"\r\n          class=\"each-type\"\r\n          type=\"info\"\r\n          effect=\"dark\"\r\n      >\r\n        {{ type }}\r\n      </el-tag>\r\n    </div>\r\n\r\n    <div class=\"regions\">\r\n      <span class=\"like\">地区喜好：</span>\r\n      <el-tag\r\n          v-for=\"(region, index) in regions\"\r\n          :key=\"index\"\r\n          class=\"each-region\"\r\n          type=\"info\"\r\n          effect=\"dark\"\r\n      >\r\n        {{ region }}\r\n      </el-tag>\r\n    </div>\r\n\r\n    <div class=\"btn\">\r\n      <el-button @click=\"handleEditInfo\" size=\"small\" icon=\"Edit\">编辑个人资料</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, ref} from \"vue\";\r\nimport {Edit} from \"@element-plus/icons\";\r\nimport userRequest from \"@/api/user\";\r\nimport {ErrorMessage} from \"@/utils/my-message\";\r\nimport router from \"@/router\";\r\nimport emitter from \"@/utils/event-bus\";\r\n\r\nexport default {\r\n  name: \"PersonalInfo\",\r\n  components: {Edit},\r\n  setup() {\r\n    let user = reactive({\r\n      id: -1,\r\n      nickname: '',\r\n      sex: '保密',\r\n      avatar: '',\r\n    })\r\n    let types = ref([])\r\n    let regions = ref([])\r\n\r\n    /**\r\n     * 每次初始化界面是判断token是否过期，如果没有过期，则显示登录基本信息\r\n     */\r\n    userRequest.getUserInfo().then(res => {\r\n      if (res.code === 200) {\r\n        // let userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n        let userInfo = res.data\r\n        user.nickname = userInfo.nickname\r\n        user.id = userInfo.id\r\n        user.avatar = userInfo.avatar\r\n        user.sex = userInfo.sex\r\n\r\n        // 全局事件总线——触发：从服务器获取到个人信息后，将头像路径传递给Avatar.vue\r\n        emitter.emit('handleEditAvatarChange', {\r\n          avatar: user.avatar\r\n        })\r\n\r\n        userRequest.getTypesAndRegions().then(res => {\r\n          types.value = res.data.types\r\n          regions.value = res.data.regions\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      } else {\r\n        ErrorMessage(res.msg)\r\n      }\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    let handleEditInfo = () => {\r\n      router.push({\r\n        path: \"/personal/edit\"\r\n      })\r\n    }\r\n\r\n    return {\r\n      user,\r\n      types,\r\n      regions,\r\n      handleEditInfo\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.personal-info-master {\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.nickname {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: #b2c8ec;\r\n  margin-right: 0.6rem;\r\n}\r\n\r\n.types, .regions, .btn {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.each-type, .each-region {\r\n  margin-left: 1rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.like {\r\n  font-weight: 600;\r\n  color: #73a2e7;\r\n  font-size: 1.1rem;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}