{"ast":null,"code":"import { RefreshRight } from \"@element-plus/icons-vue\";\nimport { reactive, ref, watch } from \"vue\";\nimport emitter from \"@/utils/event-bus\";\nexport default {\n  name: \"MovieTags\",\n  components: {\n    RefreshRight\n  },\n  setup() {\n    let type = ref('全部');\n    let region = ref('全部');\n    const types = reactive(['全部', '剧情', '喜剧', '动作', '爱情', '科幻', '动画', '悬疑', '惊悚', '恐怖', '犯罪', '音乐', '歌舞', '传记', '历史', '战争', '西部', '奇幻', '冒险', '灾难', '武侠', '其他']);\n    const regions = reactive(['全部', '中国大陆', '美国', '中国香港', '中国台湾', '日本', '韩国', '英国', '法国', '德国', '意大利', '西班牙', '印度', '泰国', '俄罗斯', '伊朗', '加拿大', '澳大利亚', '爱尔兰', '瑞典', '巴西', '丹麦']);\n\n    /**\r\n     * 重置type和region按钮，使其重新回到‘全部’标签上。\r\n     */\n    function refreshSelect() {\n      type.value = types[0];\n      region.value = regions[0];\n    }\n\n    /**\r\n     * 监视type和region的变化\r\n     */\n    watch([type, region], (newValue, oldValue) => {\n      /**\r\n       * 全局事件总线\r\n       * 当type和region发生变化时，事件触发，更新MovieCards的搜索结果。\r\n       */\n      emitter.emit('handleTypeOrRegionChange', {\n        type: newValue[0],\n        region: newValue[1]\n      });\n    });\n    return {\n      type,\n      region,\n      types,\n      regions,\n      refreshSelect\n    };\n  }\n};","map":{"version":3,"mappings":"AAiCA,SAAQA,YAAY,QAAO,yBAAyB;AACpD,SAAQC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;AACxC,OAAOC,OAAM,MAAO,mBAAmB;AAEvC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAACN;EAAY,CAAC;EAC1BO,KAAKA,GAAG;IACN,IAAIC,IAAG,GAAIN,GAAG,CAAC,IAAI;IACnB,IAAIO,MAAK,GAAIP,GAAG,CAAC,IAAI;IACrB,MAAMQ,KAAI,GAAIT,QAAQ,CAAC,CACrB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC5B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC5B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC5B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC5B,IAAI,EAAE,IAAG,CACV;IACD,MAAMU,OAAM,GAAIV,QAAQ,CAAC,CACvB,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAClC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EACnC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EACrC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAG,CAC/B;;IAED;;;IAGA,SAASW,aAAaA,GAAG;MACvBJ,IAAI,CAACK,KAAI,GAAIH,KAAK,CAAC,CAAC;MACpBD,MAAM,CAACI,KAAI,GAAIF,OAAO,CAAC,CAAC;IAC1B;;IAEA;;;IAGAR,KAAK,CAAC,CAACK,IAAI,EAAEC,MAAM,CAAC,EAAE,CAACK,QAAQ,EAAEC,QAAQ,KAAK;MAC5C;;;;MAIAX,OAAO,CAACY,IAAI,CAAC,0BAA0B,EAAE;QACvCR,IAAI,EAAEM,QAAQ,CAAC,CAAC,CAAC;QACjBL,MAAM,EAAEK,QAAQ,CAAC,CAAC;MACpB,CAAC;IACH,CAAC;IAED,OAAO;MACLN,IAAI;MACJC,MAAM;MACNC,KAAK;MACLC,OAAO;MACPC;IACF;EACF;AACF","names":["RefreshRight","reactive","ref","watch","emitter","name","components","setup","type","region","types","regions","refreshSelect","value","newValue","oldValue","emit"],"sourceRoot":"","sources":["F:\\personalSpace\\lx-bishe\\movie_recommendation_system_vue\\src\\components\\classification\\MovieTags.vue"],"sourcesContent":["<template>\r\n  <div class=\"tags my-border\">\r\n    <el-button class=\"btn\" @click=\"refreshSelect\" size=\"default\" round>\r\n      <el-icon class=\"btn-icon\" style=\"vertical-align: middle;\">\r\n        <refresh-right/>\r\n      </el-icon>\r\n      <span class=\"btn-span\" style=\"vertical-align: middle;\"> 重新加载 </span>\r\n    </el-button>\r\n    <div>\r\n      <span class=\"each-tag\">类型：</span>\r\n      <el-radio-group\r\n          v-for=\"(t,index) in types\"\r\n          :key=\"index\"\r\n          v-model=\"type\"\r\n          size=\"small\">\r\n        <el-radio-button class=\"each\" :label=\"t\"/>\r\n      </el-radio-group>\r\n    </div>\r\n    <div>\r\n      <span class=\"each-tag\">地区：</span>\r\n      <el-radio-group\r\n          v-for=\"(r,index) in regions\"\r\n          :key=\"index\"\r\n          v-model=\"region\"\r\n          size=\"small\">\r\n        <el-radio-button class=\"each\" :label=\"r\"/>\r\n      </el-radio-group>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {RefreshRight} from \"@element-plus/icons-vue\";\r\nimport {reactive, ref, watch} from \"vue\";\r\nimport emitter from \"@/utils/event-bus\";\r\n\r\nexport default {\r\n  name: \"MovieTags\",\r\n  components: {RefreshRight},\r\n  setup() {\r\n    let type = ref('全部')\r\n    let region = ref('全部')\r\n    const types = reactive([\r\n      '全部', '剧情', '喜剧', '动作', '爱情',\r\n      '科幻', '动画', '悬疑', '惊悚', '恐怖',\r\n      '犯罪', '音乐', '歌舞', '传记', '历史',\r\n      '战争', '西部', '奇幻', '冒险', '灾难',\r\n      '武侠', '其他'\r\n    ])\r\n    const regions = reactive([\r\n      '全部', '中国大陆', '美国', '中国香港', '中国台湾',\r\n      '日本', '韩国', '英国', '法国', '德国', '意大利',\r\n      '西班牙', '印度', '泰国', '俄罗斯', '伊朗', '加拿大',\r\n      '澳大利亚', '爱尔兰', '瑞典', '巴西', '丹麦'\r\n    ])\r\n\r\n    /**\r\n     * 重置type和region按钮，使其重新回到‘全部’标签上。\r\n     */\r\n    function refreshSelect() {\r\n      type.value = types[0]\r\n      region.value = regions[0]\r\n    }\r\n\r\n    /**\r\n     * 监视type和region的变化\r\n     */\r\n    watch([type, region], (newValue, oldValue) => {\r\n      /**\r\n       * 全局事件总线\r\n       * 当type和region发生变化时，事件触发，更新MovieCards的搜索结果。\r\n       */\r\n      emitter.emit('handleTypeOrRegionChange', {\r\n        type: newValue[0],\r\n        region: newValue[1]\r\n      })\r\n    })\r\n\r\n    return {\r\n      type,\r\n      region,\r\n      types,\r\n      regions,\r\n      refreshSelect,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tags {\r\n  padding: 1rem;\r\n}\r\n\r\n.btn {\r\n  margin-left: 1rem;\r\n}\r\n\r\n.each {\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.each-tag {\r\n  color: #7e7e7e;\r\n  vertical-align: middle;\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n\r\n.btn-icon {\r\n  transform: rotate(360deg);\r\n  transition: .7s;\r\n}\r\n\r\n.btn:active .btn-icon {\r\n  transform: rotate(0);\r\n  transition: 0s;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}